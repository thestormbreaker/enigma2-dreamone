diff --git a/.travis.yml b/.travis.yml
index 7140f3b..6b9be3d 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -3,11 +3,6 @@ language: cpp
 sudo: required
 dist: trusty
 
-branches:
-  only:
-  - Dev
-  - T2MI
-
 addons:
   apt:
     packages:
@@ -38,7 +33,7 @@ matrix:
           sources:
             - ubuntu-toolchain-r-test
           packages:
-            - g++-4.9
+            - g++-6
             - linux-libc-dev
             - git
             - build-essential
@@ -58,7 +53,7 @@ matrix:
             - libjpeg-turbo8-dev
             - libgif-dev
       env:
-         - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
+        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
 
     - os: linux
       addons:
@@ -66,7 +61,7 @@ matrix:
           sources:
             - ubuntu-toolchain-r-test
           packages:
-            - g++-5
+            - g++-7
             - linux-libc-dev
             - git
             - build-essential
@@ -86,7 +81,7 @@ matrix:
             - libjpeg-turbo8-dev
             - libgif-dev
       env:
-         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
+        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
 
     - os: linux
       addons:
@@ -94,7 +89,7 @@ matrix:
           sources:
             - ubuntu-toolchain-r-test
           packages:
-            - g++-6
+            - g++-8
             - linux-libc-dev
             - git
             - build-essential
@@ -114,44 +109,26 @@ matrix:
             - libjpeg-turbo8-dev
             - libgif-dev
       env:
-        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
+        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
 
-    - os: linux
-      addons:
-        apt:
-          sources:
-            - ubuntu-toolchain-r-test
-          packages:
-            - g++-7
-            - linux-libc-dev
-            - git
-            - build-essential
-            - automake
-            - libtool
-            - python-dev
-            - zlib1g-dev
-            - gettext
-            - swig
-            - libgstreamer1.0-dev
-            - libgstreamer-plugins-base1.0-dev
-            - libfreetype6-dev
-            - libsigc++-2.0-dev
-            - libfribidi-dev
-            - libssl-dev
-            - libavahi-client-dev
-            - libjpeg-turbo8-dev
-            - libgif-dev
-      env:
-        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
+git:
+  depth: 10
 
 before_install:
     - eval "${MATRIX_EVAL}"
+    - curl -L https://people.freedesktop.org/~slomo/gstreamer.tar.gz | tar xz
+    - sed -i "s;prefix=/root/gstreamer;prefix=$PWD/gstreamer;g" $PWD/gstreamer/lib/x86_64-linux-gnu/pkgconfig/*.pc
+    - export PKG_CONFIG_PATH=$PWD/gstreamer/lib/x86_64-linux-gnu/pkgconfig
+    - export GST_PLUGIN_SYSTEM_PATH=$PWD/gstreamer/lib/x86_64-linux-gnu/gstreamer-1.0
+    - export GST_PLUGIN_SCANNER=$PWD/gstreamer/libexec/gstreamer-1.0/gst-plugin-scanner
+    - export PATH=$PATH:$PWD/gstreamer/bin
+    - export LD_LIBRARY_PATH=$PWD/gstreamer/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
 
 script:
 - echo installing libdvbsi++
 - pushd .
 - cd /tmp
-- git clone git://git.opendreambox.org/git/obi/libdvbsi++.git
+- git clone --depth 1 git://git.opendreambox.org/git/obi/libdvbsi++.git
 - cd libdvbsi++
 - autoreconf -i
 - ./configure
@@ -161,7 +138,7 @@ script:
 - echo installing tuxbox
 - pushd .
 - cd /tmp
-- git clone https://github.com/OpenPLi/tuxtxt.git
+- git clone --depth 1 https://github.com/OpenPLi/tuxtxt.git
 - cd tuxtxt/libtuxtxt
 - autoreconf -i
 - ./configure --with-boxtype=generic DVB_API_VERSION=5
@@ -179,3 +156,5 @@ script:
 - make
 - python -m compileall .
 - echo done!
+
+
diff --git a/ChangeLog b/ChangeLog
index cd5a0f1..0cd04ee 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,2 +1,15 @@
-openbh: release 4.3.xxx
+openbh: release 4.3.001
+openbh: release 4.3.002
+openbh: release 4.3.003
+openbh: release 4.3.004
+openbh: release 4.3.005
+openbh: release 4.3.006
+openbh: release 4.3.007
+openbh: release 4.3.008
+openbh: release 4.3.009
+openbh: release 4.3.010
+openbh: release 4.3.011
+openbh: release 4.3.012
+openbh: release 4.3.013
+openbh: release 4.3.029
 
diff --git a/GlobalActions.py b/GlobalActions.py
index 4c5d05d..71f11f6 100644
--- a/GlobalActions.py
+++ b/GlobalActions.py
@@ -1,4 +1,4 @@
 from Components.ActionMap import ActionMap
 
-globalActionMap = ActionMap( ["GlobalActions"] )
+globalActionMap = ActionMap(["GlobalActions"])
 globalActionMap.execBegin()
diff --git a/Navigation.py b/Navigation.py
index 35692d7..82fa6c9 100644
--- a/Navigation.py
+++ b/Navigation.py
@@ -1,7 +1,7 @@
 from time import time
 from os import path
 
-from enigma import eServiceCenter, eServiceReference, eTimer, pNavigation, getBestPlayableServiceReference, iPlayableService, setPreferredTuner, eDVBLocalTimeHandler
+from enigma import eServiceCenter, eServiceReference, eTimer, pNavigation, getBestPlayableServiceReference, iPlayableService, setPreferredTuner, eDVBLocalTimeHandler, iRecordableServicePtr
 
 from Components.ParentalControl import parentalControl
 from Components.config import config
@@ -15,7 +15,6 @@ import NavigationInstance
 import ServiceReference
 from Screens.InfoBar import InfoBar, MoviePlayer
 from Components.Sources.StreamService import StreamServiceList
-from boxbranding import getBoxType, getBrandOEM, getMachineBuild
 
 # TODO: remove pNavgation, eNavigation and rewrite this stuff in python.
 class Navigation:
@@ -223,7 +222,9 @@ class Navigation:
 		return service
 
 	def stopRecordService(self, service):
-		ret = self.pnav and self.pnav.stopRecordService(service)
+		ret = -1
+		if service and isinstance(service, iRecordableServicePtr):
+			ret = self.pnav and self.pnav.stopRecordService(service)
 		return ret
 
 	def getRecordings(self, simulate=False):
diff --git a/RecordTimer.py b/RecordTimer.py
index ae13d70..2f018c0 100644
--- a/RecordTimer.py
+++ b/RecordTimer.py
@@ -1221,145 +1221,119 @@ class RecordTimer(timer.Timer):
 			self.saveTimer()
 		return answer
 
-	def isInTimer(self, eventid, begin, duration, service):
-		returnValue = None
-		type = 0
-		time_match = 0
+	@staticmethod
+	def __checkTimer(x, check_offset_time, begin, end, duration):
+		timer_end = x.end
+		timer_begin = x.begin
+		if not x.repeated and check_offset_time:
+			if 0 < end - timer_end <= 59:
+				timer_end = end
+			elif 0 < timer_begin - begin <= 59:
+				timer_begin = begin
+		if x.justplay and (timer_end - x.begin) <= 1:
+			timer_end += 60
+
+		if x.repeated == 0:
+			if begin < timer_begin <= end:
+				# recording within / last part of event
+				return 2 if timer_end < end else 0
+			elif timer_begin <= begin <= timer_end:
+				if timer_end < end:
+					# recording first part of event
+					return 3 if x.justplay else 1
+				else: # recording whole event
+					return 3
+		else:
+			bt = localtime(begin)
+			bday = bt.tm_wday
+			begin2 = 1440 + bt.tm_hour * 60 + bt.tm_min
+			end2 = begin2 + duration / 60
+			xbt = localtime(x.begin)
+			xet = localtime(timer_end)
+			offset_day = False
+			checking_time = x.begin < begin or begin <= x.begin <= end
+			if xbt.tm_yday != xet.tm_yday:
+				oday = bday - 1
+				if oday == -1: oday = 6
+				offset_day = x.repeated & (1 << oday)
+			xbegin = 1440 + xbt.tm_hour * 60 + xbt.tm_min
+			xend = xbegin + ((timer_end - x.begin) / 60)
+			if xend < xbegin:
+				xend += 1440
+			if x.repeated & (1 << bday) and checking_time:
+				if begin2 < xbegin <= end2:
+					# recording within / last part of event
+					return 2 if xend < end2 else 0
+				elif xbegin <= begin2 <= xend:
+					# recording first part / whole event
+					return 1 if xend < end2 else 3
+				elif offset_day:
+					xbegin -= 1440
+					xend -= 1440
+					if begin2 < xbegin <= end2:
+						# recording within / last part of event
+						return 2 if xend < end2 else 0
+					elif xbegin <= begin2 <= xend:
+						# recording first part / whole event
+						return 1 if xend < end2 else 3
+			elif offset_day and checking_time:
+				xbegin -= 1440
+				xend -= 1440
+				if begin2 < xbegin <= end2:
+					# recording within / last part of event
+					return 2 if xend < end2 else 0
+				elif xbegin <= begin2 <= xend:
+					# recording first part / whole event
+					return 1 if xend < end2 else 3
+		return None
 
-		isAutoTimer = False
-		bt = None
+	# matchType values can be:
+	# 0 last part of event
+	# 1 first part of event
+	# 2 within event
+	# 3 exact event match
+	def isInTimer(self, service, begin, duration):
+		returnValue = None
 		check_offset_time = not config.recording.margin_before.value and not config.recording.margin_after.value
 		end = begin + duration
-		refstr = ':'.join(service.split(':')[:11])
-		for x in self.timer_list:
-			if x.isAutoTimer == 1:
-				isAutoTimer = True
-			else:
-				isAutoTimer = False
-			check = ':'.join(x.service_ref.ref.toString().split(':')[:11]) == refstr
+		startAt = begin - config.recording.margin_before.value * 60
+		bailAt = end + config.recording.margin_after.value * 60
+		if isinstance(service, ServiceReference):
+			refstr = service.ref.toCompareString()
+		else:
+			refstr = ':'.join(service.split(':')[:11])
+
+		# iterating is faster than using bisect+indexing to find the first relevant timer
+		for timer in self.timer_list:
+			if not timer.repeated and timer.end < startAt:
+				# skip timers that aren't in the requested range
+				# we need to try all repeat timers though
+				continue
+			if timer.begin > bailAt:
+				# exit when we hit timers that are after the requested range
+				break
+			check = timer.service_ref.ref.toCompareString() == refstr
 			if check:
-				timer_end = x.end
-				timer_begin = x.begin
-				type_offset = 0
-				if not x.repeated and check_offset_time:
-					if 0 < end - timer_end <= 59:
-						timer_end = end
-					elif 0 < timer_begin - begin <= 59:
-						timer_begin = begin
-				if x.justplay:
-					type_offset = 5
-					if (timer_end - x.begin) <= 1:
-						timer_end += 60
-					if x.pipzap:
-						type_offset = 30
-				if x.always_zap:
-					type_offset = 10
-
-				if x.repeated != 0:
-					if bt is None:
-						bt = localtime(begin)
-						bday = bt.tm_wday
-						begin2 = 1440 + bt.tm_hour * 60 + bt.tm_min
-						end2 = begin2 + duration / 60
-					xbt = localtime(x.begin)
-					xet = localtime(timer_end)
-					offset_day = False
-					checking_time = x.begin < begin or begin <= x.begin <= end
-					if xbt.tm_yday != xet.tm_yday:
-						oday = bday - 1
-						if oday == -1: oday = 6
-						offset_day = x.repeated & (1 << oday)
-					xbegin = 1440 + xbt.tm_hour * 60 + xbt.tm_min
-					xend = xbegin + ((timer_end - x.begin) / 60)
-					if xend < xbegin:
-						xend += 1440
-					if x.repeated & (1 << bday) and checking_time:
-						if begin2 < xbegin <= end2:
-							if xend < end2:
-								# recording within event
-								time_match = (xend - xbegin) * 60
-								type = type_offset + 3
-							else:
-								# recording last part of event
-								time_match = (end2 - xbegin) * 60
-								type = type_offset + 1
-						elif xbegin <= begin2 <= xend:
-							if xend < end2:
-								# recording first part of event
-								time_match = (xend - begin2) * 60
-								type = type_offset + 4
-							else:
-								# recording whole event
-								time_match = (end2 - begin2) * 60
-								type = type_offset + 2
-						elif offset_day:
-							xbegin -= 1440
-							xend -= 1440
-							if begin2 < xbegin <= end2:
-								if xend < end2:
-									# recording within event
-									time_match = (xend - xbegin) * 60
-									type = type_offset + 3
-								else:
-									# recording last part of event
-									time_match = (end2 - xbegin) * 60
-									type = type_offset + 1
-							elif xbegin <= begin2 <= xend:
-								if xend < end2:
-									# recording first part of event
-									time_match = (xend - begin2) * 60
-									type = type_offset + 4
-								else:
-									# recording whole event
-									time_match = (end2 - begin2) * 60
-									type = type_offset + 2
-					elif offset_day and checking_time:
-						xbegin -= 1440
-						xend -= 1440
-						if begin2 < xbegin <= end2:
-							if xend < end2:
-								# recording within event
-								time_match = (xend - xbegin) * 60
-								type = type_offset + 3
-							else:
-								# recording last part of event
-								time_match = (end2 - xbegin) * 60
-								type = type_offset + 1
-						elif xbegin <= begin2 <= xend:
-							if xend < end2:
-								# recording first part of event
-								time_match = (xend - begin2) * 60
-								type = type_offset + 4
-							else:
-								# recording whole event
-								time_match = (end2 - begin2) * 60
-								type = type_offset + 2
-				else:
-					if begin < timer_begin <= end:
-						if timer_end < end:
-							# recording within event
-							time_match = timer_end - timer_begin
-							type = type_offset + 3
-						else:
-							# recording last part of event
-							time_match = end - timer_begin
-							type = type_offset + 1
-					elif timer_begin <= begin <= timer_end:
-						if timer_end < end:
-							# recording first part of event
-							time_match = timer_end - begin
-							type = type_offset + 4
-							if x.justplay:
-								type = type_offset + 2
-						else: # recording whole event
-							time_match = end - begin
-							type = type_offset + 2
-
-				if time_match:
-					returnValue = (time_match, type, isAutoTimer)
-					if type in (2,7,12,32): # When full recording do not look further
+				matchType = RecordTimer.__checkTimer(timer, check_offset_time, begin, end, duration)
+				if matchType is not None:
+					returnValue = (timer, matchType)
+					if matchType in (2, 3): # When full recording or within an event do not look further
 						break
-		return returnValue
+		return returnValue or (None, None)
+
+	@staticmethod
+	def isInTimerOnService(serviceTimerList, begin, duration):
+		returnValue = None
+		check_offset_time = not config.recording.margin_before.value and not config.recording.margin_after.value
+		end = begin + duration
+	
+		for timer in serviceTimerList:
+			matchType = RecordTimer.__checkTimer(timer, check_offset_time, begin, end, duration)
+			if matchType is not None:
+				returnValue = (timer, matchType)
+				if matchType in (2, 3): # When full recording or within an event do not look further
+					break
+		return returnValue or (None, None)
 
 	def removeEntry(self, entry):
 		print "[RecordTimer] Remove " + str(entry)
@@ -1375,9 +1349,9 @@ class RecordTimer(timer.Timer):
 		if entry.state != entry.StateEnded:
 			self.timeChanged(entry)
 
-#		print "[RecordTimer]state: ", entry.state
-#		print "[RecordTimer]in processed: ", entry in self.processed_timers
-#		print "[RecordTimer]in running: ", entry in self.timer_list
+		# print "[RecordTimer]state: ", entry.state
+		# print "[RecordTimer]in processed: ", entry in self.processed_timers
+		# print "[RecordTimer]in running: ", entry in self.timer_list
 		# autoincrease instanttimer if possible
 		if not entry.dontSave:
 			for x in self.timer_list:
diff --git a/configure.ac b/configure.ac
index 4c22c2d..7856323 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1,4 +1,4 @@
-AC_INIT([enigma2],[4.3],[http://www.vuplus-community.net])
+AC_INIT([enigma2],[4.2],[http://www.vuplus-community.net])
 AM_INIT_AUTOMAKE([dist-bzip2 no-define tar-pax -Wno-portability])
 AC_CONFIG_HEADERS([enigma2_config.h])
 
@@ -38,7 +38,6 @@ AC_ARG_WITH(gstversion,
 	AS_HELP_STRING([--with-gstversion],[use gstreamer version (major.minor)]),
 	[GST_MAJORMINOR=$withval],[GST_MAJORMINOR=0.10])
 
-PKG_CHECK_MODULES(TUXTXT, tuxbox-tuxtxt)
 PKG_CHECK_MODULES(GSTREAMER, gstreamer-$GST_MAJORMINOR gstreamer-pbutils-$GST_MAJORMINOR)
 PKG_CHECK_MODULES(BASE, [freetype2 fribidi glib-2.0 gstreamer-$GST_MAJORMINOR gstreamer-pbutils-$GST_MAJORMINOR libdvbsi++ libpng libxml-2.0 sigc++-2.0 libssl libcrypto])
 PKG_CHECK_MODULES(LIBDDVD, libdreamdvd, HAVE_LIBDDVD="yes", HAVE_LIBDDVD="no")
@@ -53,20 +52,6 @@ AC_SUBST(LIBJPEG_LIBS)
 AC_CHECK_LIB([ungif], [DGifOpen], [LIBGIF_LIBS="-lungif"], [AC_CHECK_LIB([gif], [DGifOpen], [LIBGIF_LIBS="-lgif"], [AC_MSG_ERROR([Could not find libgif or libungif])])])
 AC_SUBST(LIBGIF_LIBS)
 
-AC_ARG_WITH(amlogic,
-	AC_HELP_STRING([--with-amlogic], [use amlogic MPEG decoder]),
-	[[with_amlogic=$withval]],
-	[[with_amlogic=no]]
-)
-AM_CONDITIONAL(HAVE_AMLOGIC, test x"$with_amlogic" = xyes)
-if test x"$with_amlogic" = xyes ; then
-	AC_DEFINE(HAVE_AMLOGIC, 1,[Enables AMLOGIC decoder support])
-	PKG_CHECK_MODULES(AMCODEC, libamcodec)
-	PKG_CHECK_MODULES(AMADEC, libamadec)
-	PKG_CHECK_MODULES(DVBCSA, libdvbcsa)
-	ALSA_CFLAGS="-lasound"
-fi
-
 AC_ARG_WITH(boxtype,
 	[  --with-boxtype=NAME box type [[none,dm800...]]],
 	[BOXTYPE="$withval"],[BOXTYPE="dm800"])
@@ -122,10 +107,6 @@ AM_CONDITIONAL(DM500HD, test "$BOXTYPE" == dm500hd)
 AM_CONDITIONAL(DM500HDV2, test "$BOXTYPE" == "dm500hdv2")
 AM_CONDITIONAL(DM500HDV2, test "$BOXTYPE" == dm500hdv2)
 AM_CONDITIONAL(DM900, test "$BOXTYPE" == dm900)
-AM_CONDITIONAL(DM920, test "$BOXTYPE" == dm920)
-AM_CONDITIONAL(DM920, test "$BOXTYPE" == "dm920")
-AM_CONDITIONAL(Dreamone, test "$BOXTYPE" == dreamone)
-AM_CONDITIONAL(Dreamone, test "$BOXTYPE" == "dreamone")
 AM_CONDITIONAL(E3HD, test "$BOXTYPE" == "e3hd")
 AM_CONDITIONAL(EBOX5000, test "$BOXTYPE" == "ebox5000")
 AM_CONDITIONAL(EBOX5100, test "$BOXTYPE" == "ebox5100")
@@ -657,7 +638,7 @@ AX_CXX_COMPILE_STDCXX_11([ext],[mandatory])
 
 CPPFLAGS="$CPPFLAGS $PYTHON_CPPFLAGS"
 CFLAGS="$CFLAGS -Wall"
-CXXFLAGS="$CXXFLAGS -Wall $BASE_CFLAGS $ENIGMA2_CFLAGS $PTHREAD_CFLAGS $OPENMP_CFLAGS $GLES_CFLAGS $ALSA_CFLAGS $AMCODEC_CFLAGS $AMCODEC_LIBS $AMADEC_CFLAGS $DVBCSA_CFLAGS"
+CXXFLAGS="$CXXFLAGS -Wall $BASE_CFLAGS $ENIGMA2_CFLAGS $PTHREAD_CFLAGS $OPENMP_CFLAGS $GLES_CFLAGS $ALSA_CFLAGS $AMCODEC_CFLAGS $AMADEC_CFLAGS $DVBCSA_CFLAGS"
 AX_SWIG_PYTHON_OPT="$AX_SWIG_PYTHON_OPT -DSWIG_PYTHON_LEGACY_BOOL"
 
 AC_CONFIG_FILES([
diff --git a/data/iso-639-3.tab b/data/iso-639-3.tab
index d342934..0d13023 100644
--- a/data/iso-639-3.tab
+++ b/data/iso-639-3.tab
@@ -71,7 +71,7 @@ acy				I	L	Cypriot Arabic
 acz				I	L	Acheron	
 ada	ada	ada		I	L	Adangme	
 adb				I	L	Adabe	
-add				I	L	Dzodinka	
+add				I	L	Lidzonka	
 ade				I	L	Adele	
 adf				I	L	Dhofari Arabic	
 adg				I	L	Andegerebinha	
@@ -178,12 +178,11 @@ aio				I	L	Aiton
 aip				I	L	Burumakok	
 aiq				I	L	Aimaq	
 air				I	L	Airoran	
-ais				I	L	Nataoran Amis	
 ait				I	E	Arikem	
 aiw				I	L	Aari	
 aix				I	L	Aighon	
 aiy				I	L	Ali	
-aja				I	L	Aja (Sudan)	
+aja				I	L	Aja (South Sudan)	
 ajg				I	L	Aja (Benin)	
 aji				I	L	Ajië	
 ajn				I	L	Andajin	
@@ -371,9 +370,8 @@ arz				I	L	Egyptian Arabic
 asa				I	L	Asu (Tanzania)	
 asb				I	L	Assiniboine	
 asc				I	L	Casuarina Coast Asmat	
-asd				I	L	Asas	
 ase				I	L	American Sign Language	
-asf				I	L	Australian Sign Language	
+asf				I	L	Auslan	
 asg				I	L	Cishingini	
 ash				I	E	Abishira	
 asi				I	L	Buruwai	
@@ -569,7 +567,7 @@ bcg				I	L	Baga Pokur
 bch				I	L	Bariai	
 bci				I	L	Baoulé	
 bcj				I	L	Bardi	
-bck				I	L	Bunaba	
+bck				I	L	Bunuba	
 bcl				I	L	Central Bikol	
 bcm				I	L	Bannoni	
 bcn				I	L	Bali (Nigeria)	
@@ -591,9 +589,9 @@ bdd				I	L	Bunama
 bde				I	L	Bade	
 bdf				I	L	Biage	
 bdg				I	L	Bonggi	
-bdh				I	L	Baka (Sudan)	
+bdh				I	L	Baka (South Sudan)	
 bdi				I	L	Burun	
-bdj				I	L	Bai	
+bdj				I	L	Bai (South Sudan)	
 bdk				I	L	Budukh	
 bdl				I	L	Indonesian Bajau	
 bdm				I	L	Buduma	
@@ -793,7 +791,7 @@ bli				I	L	Bolia
 blj				I	L	Bolongan	
 blk				I	L	Pa'o Karen	
 bll				I	E	Biloxi	
-blm				I	L	Beli (Sudan)	
+blm				I	L	Beli (South Sudan)	
 bln				I	L	Southern Catanduanes Bikol	
 blo				I	L	Anii	
 blp				I	L	Blablanga	
@@ -1111,7 +1109,7 @@ byi				I	L	Buyu
 byj				I	L	Bina (Nigeria)	
 byk				I	L	Biao	
 byl				I	L	Bayono	
-bym				I	L	Bidyara	
+bym				I	L	Bidjara	
 byn	byn	byn		I	L	Bilin	
 byo				I	L	Biyo	
 byp				I	L	Bumaji	
@@ -1224,6 +1222,7 @@ cek				I	L	Eastern Khumi Chin
 cen				I	L	Cen	
 ces	cze	ces	cs	I	L	Czech	
 cet				I	L	Centúúm	
+cey				I	L	Ekai Chin	
 cfa				I	L	Dijim-Bwilim	
 cfd				I	L	Cara	
 cfg				I	L	Como Karim	
@@ -1239,7 +1238,7 @@ chd				I	L	Highland Oaxaca Chontal
 che	che	che	ce	I	L	Chechen	
 chf				I	L	Tabasco Chontal	
 chg	chg	chg		I	E	Chagatai	
-chh				I	L	Chinook	
+chh				I	E	Chinook	
 chj				I	L	Ojitlán Chinantec	
 chk	chk	chk		I	L	Chuukese	
 chl				I	L	Cahuilla	
@@ -1330,6 +1329,7 @@ cni				I	L	Asháninka
 cnk				I	L	Khumi Chin	
 cnl				I	L	Lalana Chinantec	
 cno				I	L	Con	
+cnr	cnr	cnr		I	L	Montenegrin	
 cns				I	L	Central Asmat	
 cnt				I	L	Tepetotutla Chinantec	
 cnu				I	L	Chenoua	
@@ -1419,7 +1419,7 @@ csw				I	L	Swampy Cree
 csy				I	L	Siyin Chin	
 csz				I	L	Coos	
 cta				I	L	Tataltepec Chatino	
-ctc				I	L	Chetco	
+ctc				I	E	Chetco	
 ctd				I	L	Tedim Chin	
 cte				I	L	Tepinapa Chinantec	
 ctg				I	L	Chittagonian	
@@ -1451,6 +1451,7 @@ cuu				I	L	Tai Ya
 cuv				I	L	Cuvok	
 cuw				I	L	Chukwa	
 cux				I	L	Tepeuxila Cuicatec	
+cuy				I	L	Cuitlatec	
 cvg				I	L	Chug	
 cvn				I	L	Valle Nacional Chinantec	
 cwa				I	L	Kabwa	
@@ -1590,7 +1591,6 @@ dip				I	L	Northeastern Dinka
 diq				I	L	Dimli (individual language)	
 dir				I	L	Dirim	
 dis				I	L	Dimasa	
-dit				I	E	Dirari	
 diu				I	L	Diriku	
 div	div	div	dv	I	L	Dhivehi	
 diw				I	L	Northwestern Dinka	
@@ -1607,7 +1607,7 @@ dji				I	L	Djinang
 djj				I	L	Djeebbana	
 djk				I	L	Eastern Maroon Creole	
 djm				I	L	Jamsay Dogon	
-djn				I	L	Djauan	
+djn				I	L	Jawoyn	
 djo				I	L	Jangkang	
 djr				I	L	Djambarrpuyngu	
 dju				I	L	Kapriman	
@@ -1646,6 +1646,7 @@ dni				I	L	Lower Grand Valley Dani
 dnj				I	L	Dan	
 dnk				I	L	Dengka	
 dnn				I	L	Dzùùngoo	
+dno				I	L	Ndrulo	
 dnr				I	L	Danaru	
 dnt				I	L	Mid Grand Valley Dani	
 dnu				I	L	Danau	
@@ -1694,7 +1695,7 @@ dse				I	L	Dutch Sign Language
 dsh				I	L	Daasanach	
 dsi				I	L	Disa	
 dsl				I	L	Danish Sign Language	
-dsn				I	L	Dusner	
+dsn				I	E	Dusner	
 dso				I	L	Desiya	
 dsq				I	L	Tadaksahak	
 dta				I	L	Daur	
@@ -1715,7 +1716,6 @@ dty				I	L	Dotyali
 dua	dua	dua		I	L	Duala	
 dub				I	L	Dubli	
 duc				I	L	Duna	
-dud				I	L	Hun-Saare	
 due				I	L	Umiray Dumaget Agta	
 duf				I	L	Dumbea	
 dug				I	L	Duruma	
@@ -1743,6 +1743,7 @@ dws				I	C	Dutton World Speedwords
 dwu				I	L	Dhuwal	
 dww				I	L	Dawawa	
 dwy				I	L	Dhuwaya	
+dwz				I	L	Dewas Rai	
 dya				I	L	Dyan	
 dyb				I	E	Dyaberdyaber	
 dyd				I	E	Dyugun	
@@ -1752,7 +1753,7 @@ dym				I	L	Yanda Dom Dogon
 dyn				I	L	Dyangadi	
 dyo				I	L	Jola-Fonyi	
 dyu	dyu	dyu		I	L	Dyula	
-dyy				I	L	Dyaabugay	
+dyy				I	L	Djabugay	
 dza				I	L	Tunzu	
 dze				I	E	Djiwarli	
 dzg				I	L	Dazaga	
@@ -1815,7 +1816,7 @@ ems				I	L	Pacific Gulf Yupik
 emu				I	L	Eastern Muria	
 emw				I	L	Emplawas	
 emx				I	L	Erromintxela	
-emy				I	E	Epigraphic Mayan	
+emy				I	A	Epigraphic Mayan	
 ena				I	L	Apali	
 enb				I	L	Markweeta	
 enc				I	L	En	
@@ -1895,7 +1896,7 @@ fal				I	L	South Fali
 fam				I	L	Fam	
 fan	fan	fan		I	L	Fang (Equatorial Guinea)	
 fao	fao	fao	fo	I	L	Faroese	
-fap				I	L	Palor	
+fap				I	L	Paloor	
 far				I	L	Fataleka	
 fas	per	fas	fa	M	L	Persian	
 fat	fat	fat		I	L	Fanti	
@@ -1943,7 +1944,7 @@ fqs				I	L	Fas
 fra	fre	fra	fr	I	L	French	
 frc				I	L	Cajun French	
 frd				I	L	Fordata	
-frk				I	E	Frankish	
+frk				I	H	Frankish	
 frm	frm	frm		I	H	Middle French (ca. 1400-1600)	
 fro	fro	fro		I	H	Old French (842-ca. 1400)	
 frp				I	L	Arpitan	
@@ -2002,7 +2003,7 @@ gay	gay	gay		I	L	Gayo
 gaz				I	L	West Central Oromo	
 gba	gba	gba		M	L	Gbaya (Central African Republic)	
 gbb				I	L	Kaytetye	
-gbd				I	L	Karadjeri	
+gbd				I	L	Karajarri	
 gbe				I	L	Niksek	
 gbf				I	L	Gaikundi	
 gbg				I	L	Gbanziri	
@@ -2075,7 +2076,7 @@ gft				I	E	Gafat
 gga				I	L	Gao	
 ggb				I	L	Gbii	
 ggd				I	E	Gugadj	
-gge				I	L	Guragone	
+gge				I	L	Gurr-goni	
 ggg				I	L	Gurgula	
 ggk				I	E	Kungarakany	
 ggl				I	L	Ganglau	
@@ -2083,7 +2084,7 @@ ggt				I	L	Gitua
 ggu				I	L	Gagu	
 ggw				I	L	Gogodala	
 gha				I	L	Ghadamès	
-ghc				I	E	Hiberno-Scottish Gaelic	
+ghc				I	H	Hiberno-Scottish Gaelic	
 ghe				I	L	Southern Ghale	
 ghh				I	L	Northern Ghale	
 ghk				I	L	Geko Karen	
@@ -2093,7 +2094,7 @@ gho				I	E	Ghomara
 ghr				I	L	Ghera	
 ghs				I	L	Guhu-Samane	
 ght				I	L	Kuke	
-gia				I	L	Kitja	
+gia				I	L	Kija	
 gib				I	L	Gibanawa	
 gic				I	L	Gail	
 gid				I	L	Gidar	
@@ -2120,6 +2121,7 @@ gjn				I	L	Gonja
 gjr				I	L	Gurindji Kriol	
 gju				I	L	Gujari	
 gka				I	L	Guya	
+gkd				I	L	Magɨ (Madang Province)	
 gke				I	L	Ndai	
 gkn				I	L	Gokana	
 gko				I	E	Kok-Nar	
@@ -2162,7 +2164,8 @@ gne				I	L	Ganang
 gng				I	L	Ngangam	
 gnh				I	L	Lere	
 gni				I	L	Gooniyandi	
-gnk				I	L	//Gana	
+gnj				I	L	Ngen	
+gnk				I	L	ǁGana	
 gnl				I	E	Gangulu	
 gnm				I	L	Ginuman	
 gnn				I	L	Gumatj	
@@ -2242,7 +2245,7 @@ gua				I	L	Shiki
 gub				I	L	Guajajára	
 guc				I	L	Wayuu	
 gud				I	L	Yocoboué Dida	
-gue				I	L	Gurinji	
+gue				I	L	Gurindji	
 guf				I	L	Gupapuyngu	
 gug				I	L	Paraguayan Guaraní	
 guh				I	L	Guahibo	
@@ -2283,7 +2286,7 @@ gwe				I	L	Gweno
 gwf				I	L	Gowro	
 gwg				I	L	Moo	
 gwi	gwi	gwi		I	L	Gwichʼin	
-gwj				I	L	/Gwi	
+gwj				I	L	ǀGwi	
 gwm				I	E	Awngthim	
 gwn				I	L	Gwandara	
 gwr				I	L	Gwere	
@@ -2302,6 +2305,7 @@ gyi				I	L	Gyele
 gyl				I	L	Gayil	
 gym				I	L	Ngäbere	
 gyn				I	L	Guyanese Creole English	
+gyo				I	L	Gyalsumdo	
 gyr				I	L	Guarayu	
 gyy				I	E	Gunya	
 gza				I	L	Ganza	
@@ -2352,7 +2356,7 @@ heh				I	L	Hehe
 hei				I	L	Heiltsuk	
 hem				I	L	Hemba	
 her	her	her	hz	I	L	Herero	
-hgm				I	L	Hai//om	
+hgm				I	L	Haiǁom	
 hgw				I	L	Haigwai	
 hhi				I	L	Hoia Hoia	
 hhr				I	L	Kerak	
@@ -2377,6 +2381,7 @@ hji				I	L	Haji
 hka				I	L	Kahe	
 hke				I	L	Hunde	
 hkk				I	L	Hunjara-Kaina Ke	
+hkn				I	L	Mel-Khaonh	
 hks				I	L	Hong Kong Sign Language	
 hla				I	L	Halia	
 hlb				I	L	Halbi	
@@ -2394,7 +2399,7 @@ hmg				I	L	Southwestern Guiyang Hmong
 hmh				I	L	Southwestern Huishui Hmong	
 hmi				I	L	Northern Huishui Hmong	
 hmj				I	L	Ge	
-hmk				I	E	Maek	
+hmk				I	A	Maek	
 hml				I	L	Luopohe Hmong	
 hmm				I	L	Central Mashan Hmong	
 hmn	hmn	hmn		M	L	Hmong	
@@ -2412,7 +2417,7 @@ hmz				I	L	Hmong Shua
 hna				I	L	Mina (Cameroon)	
 hnd				I	L	Southern Hindko	
 hne				I	L	Chhattisgarhi	
-hnh				I	L	//Ani	
+hnh				I	L	ǁAni	
 hni				I	L	Hani	
 hnj				I	L	Hmong Njua	
 hnn				I	L	Hanunoo	
@@ -2438,7 +2443,7 @@ hov				I	L	Hovongan
 how				I	L	Honi	
 hoy				I	L	Holiya	
 hoz				I	L	Hozo	
-hpo				I	L	Hpon	
+hpo				I	E	Hpon	
 hps				I	L	Hawai'i Sign Language (HSL)	
 hra				I	L	Hrangkhol	
 hrc				I	L	Niwer Mil	
@@ -2458,13 +2463,13 @@ hsh				I	L	Hungarian Sign Language
 hsl				I	L	Hausa Sign Language	
 hsn				I	L	Xiang Chinese	
 hss				I	L	Harsusi	
-hti				I	L	Hoti	
+hti				I	E	Hoti	
 hto				I	L	Minica Huitoto	
 hts				I	L	Hadza	
 htu				I	L	Hitu	
 htx				I	A	Middle Hittite	
 hub				I	L	Huambisa	
-huc				I	L	=/Hua	
+huc				I	L	ǂHua	
 hud				I	L	Huaulu	
 hue				I	L	San Francisco Del Mar Huave	
 huf				I	L	Humene	
@@ -2472,7 +2477,7 @@ hug				I	L	Huachipaeri
 huh				I	L	Huilliche	
 hui				I	L	Huli	
 huj				I	L	Northern Guiyang Hmong	
-huk				I	L	Hulung	
+huk				I	E	Hulung	
 hul				I	L	Hula	
 hum				I	L	Hungana	
 hun	hun	hun	hu	I	L	Hungarian	
@@ -2498,6 +2503,7 @@ hwc				I	L	Hawai'i Creole English
 hwo				I	L	Hwana	
 hya				I	L	Hya	
 hye	arm	hye	hy	I	L	Armenian	
+hyw				I	L	Western Armenian	
 iai				I	L	Iaai	
 ian				I	L	Iatmul	
 iar				I	L	Purari	
@@ -2615,7 +2621,7 @@ iqu				I	L	Iquito
 iqw				I	L	Ikwo	
 ire				I	L	Iresim	
 irh				I	L	Irarutu	
-iri				I	L	Irigwe	
+iri				I	L	Rigwe	
 irk				I	L	Iraqw	
 irn				I	L	Irántxe	
 irr				I	L	Ir	
@@ -2726,7 +2732,7 @@ jib				I	L	Jibu
 jic				I	L	Tol	
 jid				I	L	Bu	
 jie				I	L	Jilbe	
-jig				I	L	Djingili	
+jig				I	L	Jingulu	
 jih				I	L	sTodsde	
 jii				I	L	Jiiddu	
 jil				I	L	Jilim	
@@ -2799,7 +2805,7 @@ jut				I	H	Jutish
 juu				I	L	Ju	
 juw				I	L	Wãpha	
 juy				I	L	Juray	
-jvd				I	E	Javindo	
+jvd				I	L	Javindo	
 jvn				I	L	Caribbean Javanese	
 jwi				I	L	Jwira-Pepesa	
 jya				I	L	Jiarong	
@@ -2988,7 +2994,7 @@ khh				I	L	Kehu
 khj				I	L	Kuturmi	
 khk				I	L	Halh Mongolian	
 khl				I	L	Lusi	
-khm	khm	khm	km	I	L	Central Khmer	
+khm	khm	khm	km	I	L	Khmer	
 khn				I	L	Khandesi	
 kho	kho	kho		I	A	Khotanese	
 khp				I	L	Kapori	
@@ -3077,7 +3083,7 @@ kku				I	L	Tumi
 kkv				I	L	Kangean	
 kkw				I	L	Teke-Kukuya	
 kkx				I	L	Kohin	
-kky				I	L	Guguyimidjir	
+kky				I	L	Guugu Yimidhirr	
 kkz				I	L	Kaska	
 kla				I	E	Klamath-Modoc	
 klb				I	L	Kiliwa	
@@ -3302,7 +3308,7 @@ ktv				I	L	Eastern Katu
 ktw				I	E	Kato	
 ktx				I	L	Kaxararí	
 kty				I	L	Kango (Bas-Uélé District)	
-ktz				I	L	Ju/'hoan	
+ktz				I	L	Juǀʼhoan	
 kua	kua	kua	kj	I	L	Kuanyama	
 kub				I	L	Kutep	
 kuc				I	L	Kwinsu	
@@ -3449,7 +3455,7 @@ kzs				I	L	Sugut Dusun
 kzu				I	L	Kayupulau	
 kzv				I	L	Komyandaret	
 kzw				I	E	Karirí-Xocó	
-kzx				I	L	Kamarian	
+kzx				I	E	Kamarian	
 kzy				I	L	Kango (Tshopo District)	
 kzz				I	L	Kalabra	
 laa				I	L	Southern Subanen	
@@ -3478,7 +3484,6 @@ law				I	L	Lauje
 lax				I	L	Tiwa	
 lay				I	L	Lama Bai	
 laz				I	E	Aribwatsa	
-lba				I	E	Lui	
 lbb				I	L	Label	
 lbc				I	L	Lakkia	
 lbe				I	L	Lak	
@@ -3489,7 +3494,7 @@ lbj				I	L	Ladakhi
 lbk				I	L	Central Bontok	
 lbl				I	L	Libon Bikol	
 lbm				I	L	Lodhi	
-lbn				I	L	Lamet	
+lbn				I	L	Rmeet	
 lbo				I	L	Laven	
 lbq				I	L	Wampar	
 lbr				I	L	Lohorung	
@@ -3499,7 +3504,7 @@ lbu				I	L	Labu
 lbv				I	L	Lavatbura-Lamusong	
 lbw				I	L	Tolaki	
 lbx				I	L	Lawangan	
-lby				I	E	Lamu-Lamu	
+lby				I	E	Lamalama	
 lbz				I	L	Lardil	
 lcc				I	L	Legenyem	
 lcd				I	L	Lola	
@@ -3639,7 +3644,6 @@ llk				I	E	Lelak
 lll				I	L	Lilau	
 llm				I	L	Lasalimu	
 lln				I	L	Lele (Chad)	
-llo				I	L	Khlor	
 llp				I	L	North Efate	
 llq				I	L	Lolak	
 lls				I	L	Lithuanian Sign Language	
@@ -3678,7 +3682,7 @@ lnj				I	E	Leningitij
 lnl				I	L	South Central Banda	
 lnm				I	L	Langam	
 lnn				I	L	Lorediakarkar	
-lno				I	L	Lango (Sudan)	
+lno				I	L	Lango (South Sudan)	
 lns				I	L	Lamnso'	
 lnu				I	L	Longuda	
 lnw				I	E	Lanima	
@@ -3730,16 +3734,17 @@ lrz				I	L	Lemerig
 lsa				I	L	Lasgerdi	
 lsd				I	L	Lishana Deni	
 lse				I	L	Lusengo	
-lsg				I	L	Lyons Sign Language	
 lsh				I	L	Lish	
 lsi				I	L	Lashi	
 lsl				I	L	Latvian Sign Language	
 lsm				I	L	Saamia	
+lsn				I	L	Tibetan Sign Language	
 lso				I	L	Laos Sign Language	
 lsp				I	L	Panamanian Sign Language	
 lsr				I	L	Aruop	
 lss				I	L	Lasi	
 lst				I	L	Trinidad and Tobago Sign Language	
+lsv				I	L	Sivia Sign Language	
 lsy				I	L	Mauritian Sign Language	
 ltc				I	H	Late Middle Chinese	
 ltg				I	L	Latgalian	
@@ -3757,7 +3762,7 @@ lud				I	L	Ludian
 lue				I	L	Luvale	
 luf				I	L	Laua	
 lug	lug	lug	lg	I	L	Ganda	
-lui	lui	lui		I	L	Luiseno	
+lui	lui	lui		I	E	Luiseno	
 luj				I	L	Luna	
 luk				I	L	Lunanakha	
 lul				I	L	Olu'bo	
@@ -3775,6 +3780,7 @@ luw				I	L	Luo (Cameroon)
 luy				M	L	Luyia	
 luz				I	L	Southern Luri	
 lva				I	L	Maku'a	
+lvi				I	L	Lavi	
 lvk				I	L	Lavukaleve	
 lvs				I	L	Standard Latvian	
 lvu				I	L	Levuka	
@@ -3785,6 +3791,7 @@ lwh				I	L	White Lachi
 lwl				I	L	Eastern Lawa	
 lwm				I	L	Laomian	
 lwo				I	L	Luwo	
+lws				I	L	Malawian Sign Language	
 lwt				I	L	Lewotobi	
 lwu				I	L	Lawu	
 lww				I	L	Lewo	
@@ -3895,7 +3902,7 @@ mdy				I	L	Male (Ethiopia)
 mdz				I	L	Suruí Do Pará	
 mea				I	L	Menka	
 meb				I	L	Ikobi	
-mec				I	L	Mara	
+mec				I	L	Marra	
 med				I	L	Melpa	
 mee				I	L	Mengen	
 mef				I	L	Megam	
@@ -3907,7 +3914,7 @@ mel				I	L	Central Melanau
 mem				I	E	Mangala	
 men	men	men		I	L	Mende (Sierra Leone)	
 meo				I	L	Kedah Malay	
-mep				I	L	Miriwung	
+mep				I	L	Miriwoong	
 meq				I	L	Merey	
 mer				I	L	Meru	
 mes				I	L	Masmaje	
@@ -3934,7 +3941,7 @@ mfn				I	L	Cross River Mbembe
 mfo				I	L	Mbe	
 mfp				I	L	Makassar Malay	
 mfq				I	L	Moba	
-mfr				I	L	Marithiel	
+mfr				I	L	Marrithiyel	
 mfs				I	L	Mexican Sign Language	
 mft				I	L	Mokerang	
 mfu				I	L	Mbwela	
@@ -4163,8 +4170,8 @@ mox				I	L	Molima
 moy				I	L	Shekkacho	
 moz				I	L	Mukulu	
 mpa				I	L	Mpoto	
-mpb				I	L	Mullukmulluk	
-mpc				I	L	Mangarayi	
+mpb				I	L	Malak Malak	
+mpc				I	L	Mangarrayi	
 mpd				I	L	Machinere	
 mpe				I	L	Majang	
 mpg				I	L	Marba	
@@ -4356,8 +4363,6 @@ mwt				I	L	Moken
 mwu				I	E	Mittu	
 mwv				I	L	Mentawai	
 mww				I	L	Hmong Daw	
-mwx				I	L	Mediak	
-mwy				I	L	Mosiro	
 mwz				I	L	Moingi	
 mxa				I	L	Northwest Oaxaca Mixtec	
 mxb				I	L	Tezoatlán Mixtec	
@@ -4367,7 +4372,7 @@ mxe				I	L	Mele-Fila
 mxf				I	L	Malgbe	
 mxg				I	L	Mbangala	
 mxh				I	L	Mvuba	
-mxi				I	E	Mozarabic	
+mxi				I	H	Mozarabic	
 mxj				I	L	Miju-Mishmi	
 mxk				I	L	Monumbo	
 mxl				I	L	Maxi Gbe	
@@ -4388,12 +4393,10 @@ mxz				I	L	Central Masela
 mya	bur	mya	my	I	L	Burmese	
 myb				I	L	Mbay	
 myc				I	L	Mayeka	
-myd				I	L	Maramba	
 mye				I	L	Myene	
 myf				I	L	Bambassi	
 myg				I	L	Manta	
 myh				I	L	Makah	
-myi				I	L	Mina (India)	
 myj				I	L	Mangayat	
 myk				I	L	Mamara Senoufo	
 myl				I	L	Moma	
@@ -4436,7 +4439,7 @@ mzz				I	L	Maiadomu
 naa				I	L	Namla	
 nab				I	L	Southern Nambikuára	
 nac				I	L	Narak	
-nae				I	L	Naka'ela	
+nae				I	E	Naka'ela	
 naf				I	L	Nabak	
 nag				I	L	Naga Pidgin	
 naj				I	L	Nalu	
@@ -4454,7 +4457,7 @@ nau	nau	nau	na	I	L	Nauru
 nav	nav	nav	nv	I	L	Navajo	
 naw				I	L	Nawuri	
 nax				I	L	Nakwi	
-nay				I	E	Narrinyeri	
+nay				I	E	Ngarrindjeri	
 naz				I	L	Coatepec Nahuatl	
 nba				I	L	Nyemba	
 nbb				I	L	Ndoe	
@@ -4464,7 +4467,7 @@ nbe				I	L	Konyak Naga
 nbg				I	L	Nagarchal	
 nbh				I	L	Ngamo	
 nbi				I	L	Mao Naga	
-nbj				I	L	Ngarinman	
+nbj				I	L	Ngarinyman	
 nbk				I	L	Nake	
 nbl	nbl	nbl	nr	I	L	South Ndebele	
 nbm				I	L	Ngbaka Ma'bo	
@@ -4472,7 +4475,7 @@ nbn				I	L	Kuri
 nbo				I	L	Nkukoli	
 nbp				I	L	Nnam	
 nbq				I	L	Nggem	
-nbr				I	L	Numana-Nunku-Gbantu-Numbu	
+nbr				I	L	Numana	
 nbs				I	L	Namibian Sign Language	
 nbt				I	L	Na	
 nbu				I	L	Rongmei Naga	
@@ -4489,12 +4492,11 @@ ncg				I	L	Nisga'a
 nch				I	L	Central Huasteca Nahuatl	
 nci				I	H	Classical Nahuatl	
 ncj				I	L	Northern Puebla Nahuatl	
-nck				I	L	Nakara	
+nck				I	L	Na-kara	
 ncl				I	L	Michoacán Nahuatl	
 ncm				I	L	Nambo	
 ncn				I	L	Nauna	
 nco				I	L	Sibe	
-ncp				I	L	Ndaktup	
 ncq				I	L	Northern Katang	
 ncr				I	L	Ncane	
 ncs				I	L	Nicaraguan Sign Language	
@@ -4507,7 +4509,7 @@ ndb				I	L	Kenswei Nsei
 ndc				I	L	Ndau	
 ndd				I	L	Nde-Nsele-Nta	
 nde	nde	nde	nd	I	L	North Ndebele	
-ndf				I	E	Nadruvian	
+ndf				I	H	Nadruvian	
 ndg				I	L	Ndengereko	
 ndh				I	L	Ndali	
 ndi				I	L	Samba Leko	
@@ -4564,7 +4566,7 @@ ngc				I	L	Ngombe (Democratic Republic of Congo)
 ngd				I	L	Ngando (Central African Republic)	
 nge				I	L	Ngemba	
 ngg				I	L	Ngbaka Manza	
-ngh				I	L	N/u	
+ngh				I	L	Nǁng	
 ngi				I	L	Ngizim	
 ngj				I	L	Ngie	
 ngk				I	L	Dalabon	
@@ -4611,7 +4613,7 @@ nib				I	L	Nakame
 nid				I	E	Ngandi	
 nie				I	L	Niellim	
 nif				I	L	Nek	
-nig				I	E	Ngalakan	
+nig				I	E	Ngalakgan	
 nih				I	L	Nyiha (Tanzania)	
 nii				I	L	Nii	
 nij				I	L	Ngaju	
@@ -4680,6 +4682,7 @@ nli				I	L	Grangali
 nlj				I	L	Nyali	
 nlk				I	L	Ninia Yali	
 nll				I	L	Nihali	
+nlm				I	L	Mankiyali	
 nlo				I	L	Ngul	
 nlq				I	L	Lao Naga	
 nlu				I	L	Nchumbulu	
@@ -4701,7 +4704,7 @@ nmj				I	L	Ngombe (Central African Republic)
 nmk				I	L	Namakura	
 nml				I	L	Ndemli	
 nmm				I	L	Manangba	
-nmn				I	L	!Xóõ	
+nmn				I	L	ǃXóõ	
 nmo				I	L	Moyon Naga	
 nmp				I	E	Nimanbur	
 nmq				I	L	Nambya	
@@ -4732,7 +4735,6 @@ nno	nno	nno	nn	I	L	Norwegian Nynorsk
 nnp				I	L	Wancho Naga	
 nnq				I	L	Ngindo	
 nnr				I	E	Narungga	
-nns				I	L	Ningye	
 nnt				I	E	Nanticoke	
 nnu				I	L	Dwang	
 nnv				I	E	Nugunu (Australia)	
@@ -4849,7 +4851,7 @@ nuh				I	L	Ndunda
 nui				I	L	Ngumbi	
 nuj				I	L	Nyole	
 nuk				I	L	Nuu-chah-nulth	
-nul				I	L	Nusa Laut	
+nul				I	E	Nusa Laut	
 num				I	L	Niuafo'ou	
 nun				I	L	Anong	
 nuo				I	L	Nguôn	
@@ -4899,7 +4901,7 @@ nyd				I	L	Nyore
 nye				I	L	Nyengo	
 nyf				I	L	Giryama	
 nyg				I	L	Nyindu	
-nyh				I	L	Nyigina	
+nyh				I	L	Nyikina	
 nyi				I	L	Ama (Sudan)	
 nyj				I	L	Nyanga	
 nyk				I	L	Nyaneka	
@@ -4910,7 +4912,7 @@ nyo	nyo	nyo		I	L	Nyoro
 nyp				I	E	Nyang'i	
 nyq				I	L	Nayini	
 nyr				I	L	Nyiha (Malawi)	
-nys				I	L	Nyunga	
+nys				I	L	Nyungar	
 nyt				I	E	Nyawaygi	
 nyu				I	L	Nyungwe	
 nyv				I	E	Nyulnyul	
@@ -4919,6 +4921,7 @@ nyx				I	E	Nganyaywana
 nyy				I	L	Nyakyusa-Ngonde	
 nza				I	L	Tigon Mbembe	
 nzb				I	L	Njebi	
+nzd				I	L	Nzadi	
 nzi	nzi	nzi		I	L	Nzima	
 nzk				I	L	Nzakara	
 nzm				I	L	Zeme Naga	
@@ -5127,6 +5130,7 @@ pbg				I	E	Paraujano
 pbh				I	L	E'ñapa Woromaipu	
 pbi				I	L	Parkwa	
 pbl				I	L	Mak (Nigeria)	
+pbm				I	L	Puebla Mazatec	
 pbn				I	L	Kpasam	
 pbo				I	L	Papel	
 pbp				I	L	Badyara	
@@ -5234,7 +5238,7 @@ piz				I	L	Pije
 pjt				I	L	Pitjantjatjara	
 pka				I	H	Ardhamāgadhī Prākrit	
 pkb				I	L	Pokomo	
-pkc				I	E	Paekche	
+pkc				I	A	Paekche	
 pkg				I	L	Pak-Tong	
 pkh				I	L	Pankhu	
 pkn				I	L	Pakanha	
@@ -5291,6 +5295,7 @@ pmz				I	E	Southern Pame
 pna				I	L	Punan Bah-Biau	
 pnb				I	L	Western Panjabi	
 pnc				I	L	Pannei	
+pnd				I	L	Mpinda	
 pne				I	L	Western Penan	
 png				I	L	Pongu	
 pnh				I	L	Penrhyn	
@@ -5308,7 +5313,7 @@ pns				I	L	Ponosakan
 pnt				I	L	Pontic	
 pnu				I	L	Jiongnai Bunu	
 pnv				I	L	Pinigura	
-pnw				I	L	Panytyima	
+pnw				I	L	Banyjima	
 pnx				I	L	Phong-Kniang	
 pny				I	L	Pinyin	
 pnz				I	L	Pana (Central African Republic)	
@@ -5322,7 +5327,7 @@ pok				I	L	Pokangá
 pol	pol	pol	pl	I	L	Polish	
 pom				I	L	Southeastern Pomo	
 pon	pon	pon		I	L	Pohnpeian	
-poo				I	L	Central Pomo	
+poo				I	E	Central Pomo	
 pop				I	L	Pwapwâ	
 poq				I	L	Texistepec Popoluca	
 por	por	por	pt	I	L	Portuguese	
@@ -5388,7 +5393,7 @@ psw				I	L	Port Sandwich
 psy				I	E	Piscataway	
 pta				I	L	Pai Tavytera	
 pth				I	E	Pataxó Hã-Ha-Hãe	
-pti				I	L	Pintiini	
+pti				I	L	Pindiini	
 ptn				I	L	Patani	
 pto				I	L	Zo'é	
 ptp				I	L	Patep	
@@ -5550,11 +5555,11 @@ rhg				I	L	Rohingya
 rhp				I	L	Yahang	
 ria				I	L	Riang (India)	
 rif				I	L	Tarifit	
-ril				I	L	Riang (Myanmar)	
+ril				I	L	Riang Lang	
 rim				I	L	Nyaturu	
 rin				I	L	Nungu	
 rir				I	L	Ribun	
-rit				I	L	Ritarungo	
+rit				I	L	Ritharrngu	
 riu				I	L	Riung	
 rjg				I	L	Rajong	
 rji				I	L	Raji	
@@ -5567,7 +5572,7 @@ rkm				I	L	Marka
 rkt				I	L	Rangpuri	
 rkw				I	E	Arakwal	
 rma				I	L	Rama	
-rmb				I	L	Rembarunga	
+rmb				I	L	Rembarrnga	
 rmc				I	L	Carpathian Romani	
 rmd				I	E	Traveller Danish	
 rme				I	L	Angloromani	
@@ -5712,7 +5717,7 @@ sck				I	L	Sadri
 scl				I	L	Shina	
 scn	scn	scn		I	L	Sicilian	
 sco	sco	sco		I	L	Scots	
-scp				I	L	Helambu Sherpa	
+scp				I	L	Hyolmo	
 scq				I	L	Sa'och	
 scs				I	L	North Slavey	
 sct				I	L	Southern Katang	
@@ -5890,7 +5895,7 @@ sll				I	L	Salt-Yui
 slm				I	L	Pangutaran Sama	
 sln				I	E	Salinan	
 slp				I	L	Lamaholot	
-slq				I	L	Salchuq	
+slq				I	E	Salchuq	
 slr				I	L	Salar	
 sls				I	L	Singapore Sign Language	
 slt				I	L	Sila	
@@ -5948,7 +5953,7 @@ snv				I	L	Sa'ban
 snw				I	L	Selee	
 snx				I	L	Sam	
 sny				I	L	Saniyo-Hiyewe	
-snz				I	L	Sinsauru	
+snz				I	L	Kou	
 soa				I	L	Thai Song	
 sob				I	L	Sobei	
 soc				I	L	So (Democratic Republic of Congo)	
@@ -6035,7 +6040,7 @@ ssb				I	L	Southern Sama
 ssc				I	L	Suba-Simbiti	
 ssd				I	L	Siroi	
 sse				I	L	Balangingi	
-ssf				I	L	Thao	
+ssf				I	E	Thao	
 ssg				I	L	Seimat	
 ssh				I	L	Shihhi Arabic	
 ssi				I	L	Sansi	
@@ -6104,7 +6109,7 @@ sve				I	L	Serili
 svk				I	L	Slovakian Sign Language	
 svm				I	L	Slavomolisano	
 svs				I	L	Savosavo	
-svx				I	E	Skalvian	
+svx				I	H	Skalvian	
 swa	swa	swa	sw	M	L	Swahili (macrolanguage)	
 swb				I	L	Maore Comorian	
 swc				I	L	Congo Swahili	
@@ -6132,7 +6137,7 @@ swy				I	L	Sarua
 sxb				I	L	Suba	
 sxc				I	A	Sicanian	
 sxe				I	L	Sighu	
-sxg				I	L	Shixing	
+sxg				I	L	Shuhi	
 sxk				I	E	Southern Kalapuya	
 sxl				I	E	Selian	
 sxm				I	L	Samre	
@@ -6168,6 +6173,7 @@ szp				I	L	Suabo
 szs				I	L	Solomon Islands Sign Language	
 szv				I	L	Isu (Fako Division)	
 szw				I	L	Sawai	
+szy				I	L	Sakizaya	
 taa				I	L	Lower Tanana	
 tab				I	L	Tabassaran	
 tac				I	L	Lowland Tarahumara	
@@ -6200,7 +6206,7 @@ tbd				I	L	Kaki Ae
 tbe				I	L	Tanimbili	
 tbf				I	L	Mandara	
 tbg				I	L	North Tairora	
-tbh				I	E	Thurawal	
+tbh				I	E	Dharawal	
 tbi				I	L	Gaam	
 tbj				I	L	Tiang	
 tbk				I	L	Calamian Tagbanwa	
@@ -6287,6 +6293,7 @@ tev				I	L	Teor
 tew				I	L	Tewa (USA)	
 tex				I	L	Tennet	
 tey				I	L	Tulishi	
+tez				I	L	Tetserret	
 tfi				I	L	Tofin Gbe	
 tfn				I	L	Tanaina	
 tfo				I	L	Tefaro	
@@ -6317,7 +6324,7 @@ tgx				I	L	Tagish
 tgy				I	E	Togoyo	
 tgz				I	E	Tagalaka	
 tha	tha	tha	th	I	L	Thai	
-thd				I	L	Thayore	
+thd				I	L	Kuuk Thaayorre	
 the				I	L	Chitwania Tharu	
 thf				I	L	Thangmi	
 thh				I	L	Northern Tarahumara	
@@ -6362,10 +6369,12 @@ tiz				I	L	Tai Hongjin
 tja				I	L	Tajuasohn	
 tjg				I	L	Tunjung	
 tji				I	L	Northern Tujia	
+tjj				I	L	Tjungundji	
 tjl				I	L	Tai Laing	
 tjm				I	E	Timucua	
 tjn				I	E	Tonjon	
 tjo				I	L	Temacine Tamazight	
+tjp				I	L	Tjupany	
 tjs				I	L	Southern Tujia	
 tju				I	E	Tjurruru	
 tjw				I	L	Djabwurrung	
@@ -6466,7 +6475,7 @@ tog	tog	tog		I	L	Tonga (Nyasa)
 toh				I	L	Gitonga	
 toi				I	L	Tonga (Zambia)	
 toj				I	L	Tojolabal	
-tol				I	L	Tolowa	
+tol				I	E	Tolowa	
 tom				I	L	Tombulu	
 ton	ton	ton	to	I	L	Tonga (Tonga Islands)	
 too				I	L	Xicotepec De Juárez Totonac	
@@ -6589,7 +6598,7 @@ ttw				I	L	Long Wat
 tty				I	L	Sikaritai	
 ttz				I	L	Tsum	
 tua				I	L	Wiarumus	
-tub				I	L	Tübatulabal	
+tub				I	E	Tübatulabal	
 tuc				I	L	Mutu	
 tud				I	E	Tuxá	
 tue				I	L	Tuyuca	
@@ -6601,7 +6610,7 @@ tuj				I	L	Tugutil
 tuk	tuk	tuk	tk	I	L	Turkmen	
 tul				I	L	Tula	
 tum	tum	tum		I	L	Tumbuka	
-tun				I	E	Tunica	
+tun				I	L	Tunica	
 tuo				I	L	Tucano	
 tuq				I	L	Tedaga	
 tur	tur	tur	tr	I	L	Turkish	
@@ -6623,6 +6632,7 @@ tvs				I	L	Taveta
 tvt				I	L	Tutsa Naga	
 tvu				I	L	Tunen	
 tvw				I	L	Sedoa	
+tvx				I	E	Taivoan	
 tvy				I	E	Timor Pidgin	
 twa				I	E	Twana	
 twb				I	L	Western Tawbuid	
@@ -6735,7 +6745,7 @@ ulc				I	L	Ulch
 ule				I	E	Lule	
 ulf				I	L	Usku	
 uli				I	L	Ulithian	
-ulk				I	L	Meriam	
+ulk				I	L	Meriam Mir	
 ull				I	L	Ullatan	
 ulm				I	L	Ulumanda'	
 uln				I	L	Unserdeutsch	
@@ -6745,7 +6755,7 @@ uma				I	L	Umatilla
 umb	umb	umb		I	L	Umbundu	
 umc				I	A	Marrucinian	
 umd				I	E	Umbindhamu	
-umg				I	E	Umbuygamu	
+umg				I	E	Morrobalama	
 umi				I	L	Ukit	
 umm				I	L	Umon	
 umn				I	L	Makyan Naga	
@@ -6795,9 +6805,11 @@ ush				I	L	Ushojo
 usi				I	L	Usui	
 usk				I	L	Usaghade	
 usp				I	L	Uspanteco	
+uss				I	L	us-Saare	
 usu				I	L	Uya	
 uta				I	L	Otank	
 ute				I	L	Ute-Southern Paiute	
+uth				I	L	ut-Hun	
 utp				I	L	Amba (Solomon Islands)	
 utr				I	L	Etulo	
 utu				I	L	Utu	
@@ -6907,7 +6919,7 @@ vut				I	L	Vute
 vwa				I	L	Awa (China)	
 waa				I	L	Walla Walla	
 wab				I	L	Wab	
-wac				I	L	Wasco-Wishram	
+wac				I	E	Wasco-Wishram	
 wad				I	L	Wandamen	
 wae				I	L	Walser	
 waf				I	E	Wakoná	
@@ -6920,7 +6932,7 @@ wam				I	E	Wampanoag
 wan				I	L	Wan	
 wao				I	E	Wappo	
 wap				I	L	Wapishana	
-waq				I	L	Wageman	
+waq				I	L	Wagiman	
 war	war	war		I	L	Waray (Philippines)	
 was	was	was		I	L	Washo	
 wat				I	L	Kaninuwa	
@@ -6944,7 +6956,7 @@ wbp				I	L	Warlpiri
 wbq				I	L	Waddar	
 wbr				I	L	Wagdi	
 wbs				I	L	West Bengal Sign Language	
-wbt				I	L	Wanman	
+wbt				I	L	Warnman	
 wbv				I	L	Wajarri	
 wbw				I	L	Woi	
 wca				I	L	Yanomámi	
@@ -6972,7 +6984,7 @@ wew				I	L	Wejewa
 wfg				I	L	Yafi	
 wga				I	E	Wagaya	
 wgb				I	L	Wagawaga	
-wgg				I	E	Wangganguru	
+wgg				I	E	Wangkangurru	
 wgi				I	L	Wahgi	
 wgo				I	L	Waigeo	
 wgu				I	E	Wirangu	
@@ -6982,10 +6994,10 @@ whg				I	L	North Wahgi
 whk				I	L	Wahau Kenyah	
 whu				I	L	Wahau Kayan	
 wib				I	L	Southern Toussian	
-wic				I	L	Wichita	
+wic				I	E	Wichita	
 wie				I	E	Wik-Epa	
 wif				I	E	Wik-Keyangan	
-wig				I	L	Wik-Ngathana	
+wig				I	L	Wik Ngathan	
 wih				I	L	Wik-Me'anha	
 wii				I	L	Minidien	
 wij				I	L	Wik-Iiyanh	
@@ -7003,6 +7015,7 @@ wka				I	E	Kw'adza
 wkb				I	L	Kumbaran	
 wkd				I	L	Wakde	
 wkl				I	L	Kalanadi	
+wkr				I	L	Keerray-Woorroong	
 wku				I	L	Kunduvadi	
 wkw				I	E	Wakawaka	
 wky				I	E	Wangkayutyuru	
@@ -7051,7 +7064,7 @@ wnp				I	L	Wanap
 wnu				I	L	Usan	
 wnw				I	L	Wintu	
 wny				I	L	Wanyi	
-woa				I	L	Tyaraity	
+woa				I	L	Kuwema	
 wob				I	L	Wè Northern	
 woc				I	L	Wogeo	
 wod				I	L	Wolani	
@@ -7070,10 +7083,10 @@ wow				I	L	Wawonii
 woy				I	E	Weyto	
 wpc				I	L	Maco	
 wra				I	L	Warapu	
-wrb				I	E	Warluwara	
+wrb				I	E	Waluwarra	
 wrd				I	L	Warduji	
 wrg				I	E	Warungu	
-wrh				I	E	Wiradhuri	
+wrh				I	E	Wiradjuri	
 wri				I	E	Wariyangga	
 wrk				I	L	Garrwa	
 wrl				I	L	Warlmanpa	
@@ -7134,12 +7147,12 @@ xab				I	L	Sambe
 xac				I	L	Kachari	
 xad				I	E	Adai	
 xae				I	A	Aequian	
-xag				I	E	Aghwan	
+xag				I	A	Aghwan	
 xai				I	E	Kaimbé	
 xaj				I	E	Ararandewára	
 xak				I	E	Máku	
 xal	xal	xal		I	L	Kalmyk	
-xam				I	E	/Xam	
+xam				I	E	ǀXam	
 xan				I	L	Xamtanga	
 xao				I	L	Khao	
 xap				I	E	Apalachee	
@@ -7160,12 +7173,12 @@ xbi				I	L	Kombio
 xbj				I	E	Birrpayi	
 xbm				I	H	Middle Breton	
 xbn				I	E	Kenaboi	
-xbo				I	E	Bolgarian	
+xbo				I	H	Bolgarian	
 xbp				I	E	Bibbulman	
 xbr				I	L	Kambera	
 xbw				I	E	Kambiwá	
-xby				I	L	Batyala	
-xcb				I	E	Cumbric	
+xby				I	L	Batjala	
+xcb				I	H	Cumbric	
 xcc				I	A	Camunic	
 xce				I	A	Celtiberian	
 xcg				I	A	Cisalpine Gaulish	
@@ -7176,7 +7189,7 @@ xcn				I	E	Cotoname
 xco				I	A	Chorasmian	
 xcr				I	A	Carian	
 xct				I	H	Classical Tibetan	
-xcu				I	E	Curonian	
+xcu				I	H	Curonian	
 xcv				I	E	Chuvantsy	
 xcw				I	E	Coahuilteco	
 xcy				I	E	Cayuse	
@@ -7188,7 +7201,7 @@ xdo				I	L	Kwandu
 xdy				I	L	Malayic Dayak	
 xeb				I	A	Eblan	
 xed				I	L	Hdi	
-xeg				I	E	//Xegwi	
+xeg				I	E	ǁXegwi	
 xel				I	L	Kelo	
 xem				I	L	Kembayan	
 xep				I	A	Epi-Olmec	
@@ -7203,13 +7216,13 @@ xgd				I	E	Gudang
 xgf				I	E	Gabrielino-Fernandeño	
 xgg				I	E	Goreng	
 xgi				I	E	Garingbal	
-xgl				I	E	Galindan	
+xgl				I	H	Galindan	
 xgm				I	E	Dharumbal	
 xgr				I	E	Garza	
 xgu				I	L	Unggumi	
 xgw				I	E	Guwa	
 xha				I	A	Harami	
-xhc				I	E	Hunnic	
+xhc				I	A	Hunnic	
 xhd				I	A	Hadrami	
 xhe				I	L	Khetrani	
 xho	xho	xho	xh	I	L	Xhosa	
@@ -7271,7 +7284,7 @@ xmd				I	L	Mbudum
 xme				I	A	Median	
 xmf				I	L	Mingrelian	
 xmg				I	L	Mengaka	
-xmh				I	L	Kuku-Muminh	
+xmh				I	L	Kugu-Muminh	
 xmj				I	L	Majera	
 xmk				I	A	Ancient Macedonian	
 xml				I	L	Malaysian Sign Language	
@@ -7315,22 +7328,22 @@ xop				I	L	Kopar
 xor				I	L	Korubo	
 xow				I	L	Kowaki	
 xpa				I	E	Pirriya	
-xpc				I	E	Pecheneg	
+xpc				I	H	Pecheneg	
 xpe				I	L	Liberia Kpelle	
 xpg				I	A	Phrygian	
-xpi				I	E	Pictish	
+xpi				I	H	Pictish	
 xpj				I	E	Mpalitjanh	
 xpk				I	L	Kulina Pano	
 xpm				I	E	Pumpokol	
 xpn				I	E	Kapinawá	
 xpo				I	E	Pochutec	
-xpp				I	E	Puyo-Paekche	
+xpp				I	A	Puyo-Paekche	
 xpq				I	E	Mohegan-Pequot	
 xpr				I	A	Parthian	
-xps				I	E	Pisidian	
+xps				I	A	Pisidian	
 xpt				I	E	Punthamara	
 xpu				I	A	Punic	
-xpy				I	E	Puyo	
+xpy				I	A	Puyo	
 xqa				I	H	Karakhanid	
 xqt				I	A	Qatabanian	
 xra				I	L	Krahô	
@@ -7339,7 +7352,7 @@ xrd				I	E	Gundungurra
 xre				I	L	Kreye	
 xrg				I	E	Minang	
 xri				I	L	Krikati-Timbira	
-xrm				I	E	Armazic	
+xrm				I	A	Armazic	
 xrn				I	E	Arin	
 xrq				I	E	Karranga	
 xrr				I	A	Raetic	
@@ -7353,6 +7366,7 @@ xsd				I	A	Sidetic
 xse				I	L	Sempan	
 xsh				I	L	Shamang	
 xsi				I	L	Sio	
+xsj				I	L	Subi	
 xsl				I	L	South Slavey	
 xsm				I	L	Kasem	
 xsn				I	L	Sanga (Nigeria)	
@@ -7515,7 +7529,7 @@ yij				I	L	Yindjibarndi
 yik				I	L	Dongshanba Lalo	
 yil				I	E	Yindjilandji	
 yim				I	L	Yimchungru Naga	
-yin				I	L	Yinchia	
+yin				I	L	Riang Lai	
 yip				I	L	Pholo	
 yiq				I	L	Miqie	
 yir				I	L	North Awyu	
@@ -7639,7 +7653,7 @@ yum				I	L	Quechan
 yun				I	L	Bena (Nigeria)	
 yup				I	L	Yukpa	
 yuq				I	L	Yuqui	
-yur				I	L	Yurok	
+yur				I	E	Yurok	
 yut				I	L	Yopno	
 yuw				I	L	Yau (Morobe Province)	
 yux				I	L	Southern Yukaghir	
@@ -7729,17 +7743,17 @@ ziz				I	L	Zizilivakan
 zka				I	L	Kaimbulawa	
 zkb				I	E	Koibal	
 zkd				I	L	Kadu	
-zkg				I	E	Koguryo	
-zkh				I	E	Khorezmian	
+zkg				I	A	Koguryo	
+zkh				I	H	Khorezmian	
 zkk				I	E	Karankawa	
 zkn				I	L	Kanan	
 zko				I	E	Kott	
 zkp				I	E	São Paulo Kaingáng	
 zkr				I	L	Zakhring	
-zkt				I	E	Kitan	
-zku				I	E	Kaurna	
+zkt				I	H	Kitan	
+zku				I	L	Kaurna	
 zkv				I	E	Krevinian	
-zkz				I	E	Khazar	
+zkz				I	H	Khazar	
 zlj				I	L	Liujiang Zhuang	
 zlm				I	L	Malay (individual language)	
 zln				I	L	Lianshan Zhuang	
@@ -7755,7 +7769,7 @@ zmh				I	E	Makolkol
 zmi				I	L	Negeri Sembilan Malay	
 zmj				I	L	Maridjabin	
 zmk				I	E	Mandandanyi	
-zml				I	L	Madngele	
+zml				I	E	Matngala	
 zmm				I	L	Marimanindji	
 zmn				I	L	Mbangwe	
 zmo				I	L	Molo	
@@ -7809,7 +7823,7 @@ zpx				I	L	San Baltazar Loxicha Zapotec
 zpy				I	L	Mazaltepec Zapotec	
 zpz				I	L	Texmelucan Zapotec	
 zqe				I	L	Qiubei Zhuang	
-zra				I	E	Kara (Korea)	
+zra				I	A	Kara (Korea)	
 zrg				I	L	Mirgan	
 zrn				I	L	Zerenkel	
 zro				I	L	Záparo	
diff --git a/data/keymap.xml b/data/keymap.xml
index dc9beab..67e0f6e 100644
--- a/data/keymap.xml
+++ b/data/keymap.xml
@@ -1,4 +1,11 @@
 <!--suppress XmlUnboundNsPrefix -->
+	<!-- Flag meanings in <key/> elements:
+		"m": action active on key "make"
+		"b": action active on key "break"
+		"r": action active on key repeats
+		"l": action on long keypress
+	-->
+
 <keymap>
 	<map context="ListboxActions">
 		<device name="keyboard">
@@ -84,6 +91,10 @@
 		<key id="KEY_STOP" mapto="backspace" flags="mr" />
 		<key id="KEY_PLAYPAUSE" mapto="delete" flags="mr" />
 		<key id="KEY_PLAY" mapto="delete" flags="mr" />
+		<key id="KEY_VIDEO" mapto="erase" flags="m" />
+		<key id="KEY_MEDIA" mapto="erase" flags="m" />
+		<key id="KEY_LIST" mapto="erase" flags="m" />
+		<key id="KEY_PVR" mapto="erase" flags="m" />
 		<key id="KEY_INFO" mapto="toggleOverwrite" flags="m" />
 		<key id="KEY_0" mapto="0" flags="m" />
 		<key id="KEY_1" mapto="1" flags="m" />
@@ -301,7 +312,8 @@
 	</map>
 
 	<map context="InfobarSubtitleSelectionActions">
-		<key id="KEY_SUBTITLE" mapto="subtitleSelection" flags="m"/>
+		<key id="KEY_SUBTITLE" mapto="subtitleSelection" flags="b"/>
+		<key id="KEY_SUBTITLE" mapto="toggleDefaultSubtitles" flags="l"/>
 	</map>
 
 	<map context="InfobarSubserviceSelectionActions">
@@ -315,11 +327,12 @@
 	</map>
 
 	<map context="InfobarTimerButtonActions">
-			<key id="KEY_PROGRAM" mapto="timerSelection" flags="m"/>
+		<key id="KEY_PROGRAM" mapto="timerSelection" flags="b"/>
+		<key id="KEY_EDIT" mapto="timerSelection" flags="b"/>
 	</map>
 
 	<map context="InfobarVmodeButtonActions">
-			<key id="KEY_VMODE" mapto="vmodeSelection" flags="m"/>
+		<key id="KEY_VMODE" mapto="vmodeSelection" flags="m"/>
 	</map>
 
 	<map context="InfobarPiPActions">
@@ -641,7 +654,7 @@
 		<key id="KEY_GREEN" mapto="showSatellites" flags="m"/>
 		<key id="KEY_YELLOW" mapto="showProviders" flags="m"/>
 		<key id="KEY_BLUE" mapto="showFavourites" flags="m"/>
-		<key id="KEY_FAVORITES" mapto="showFavourites" flags="m"/>		
+		<key id="KEY_FAVORITES" mapto="showFavourites" flags="m"/>
 		<key id="KEY_CHANNELUP" mapto="nextBouquet" flags="m"/>
 		<key id="KEY_CHANNELDOWN" mapto="prevBouquet" flags="m"/>
 		<key id="KEY_NEXT" mapto="nextMarker" flags="m"/>
@@ -673,6 +686,8 @@
 	<map context="TimerEditActions">
 		<key id="KEY_INFO" mapto="log" flags="m"/>
 		<key id="KEY_I" mapto="log" flags="m"/>
+		<key id="KEY_CHANNELUP" mapto="moveTop" flags="m"/>
+		<key id="KEY_CHANNELDOWN" mapto="moveEnd" flags="m"/>
 	</map>
 
 	<map context="EPGSelectActions">
@@ -687,12 +702,15 @@
 		<key id="KEY_INFO" mapto="info" flags="b"/>
 		<key id="KEY_INFO" mapto="infolong" flags="l"/>
 		<key id="KEY_EPG" mapto="epg" flags="b"/>
+		<key id="KEY_EDIT" mapto="timerAdd" flags="m"/>
 		<key id="KEY_TV" mapto="tv" flags="b"/>
 		<key id="KEY_TV" mapto="tvlong" flags="l"/>
 		<key id="KEY_TV2" mapto="tv" flags="b"/>
 		<key id="KEY_TV2" mapto="tvlong" flags="l"/>
 		<key id="KEY_FAVORITES" mapto="tv" flags="b"/>
 		<key id="KEY_FAVORITES" mapto="tvlong" flags="l"/>
+		<key id="KEY_PROGRAM" mapto="timer" flags="b"/>
+		<key id="KEY_PROGRAM" mapto="timerlong" flags="l"/>
 	</map>
 
 	<map context="EventViewActions">
@@ -705,6 +723,7 @@
 		<key id="KEY_INFO" mapto="contextMenu" flags="m"/>
 		<key id="KEY_MENU" mapto="contextMenu" flags="m"/>
 		<key id="KEY_PROGRAM" mapto="timerAdd" flags="m"/>
+		<key id="KEY_EDIT" mapto="timerAdd" flags="m"/>
 	</map>
 
 	<map context="EventViewEPGActions">
@@ -763,7 +782,6 @@
 	</map>
 
 	<map context="WindowActions">
-
 	</map>
 
 	<map context="HelpActions">
@@ -933,7 +951,7 @@
 			<key id="KEY_NEXTSONG" mapto="next" flags="m"/>
 		</device-->
 	</map>
-	
+
 	<map context="ButtonSetupActions">
 		<key id="KEY_RED" mapto="red" flags="b"/>
 		<key id="KEY_RED" mapto="red_long" flags="l"/>
@@ -952,6 +970,7 @@
 		<key id="KEY_HELP" mapto="displayHelp" flags="b"/>
 		<key id="KEY_HELP" mapto="displayHelp_long" flags="l"/>
 		<key id="KEY_SUBTITLE" mapto="subtitle" flags="b"/>
+		<key id="KEY_SUBTITLE" mapto="subtitle_long" flags="l"/>
 		<key id="KEY_MENU" mapto="mainMenu" flags="b"/>
 		<key id="KEY_INFO" mapto="info" flags="b"/>
 		<key id="KEY_INFO" mapto="info_long" flags="l"/>
@@ -981,7 +1000,10 @@
 		<key id="KEY_PREVIOUSSONG" mapto="rewind" flags="b"/>
 		<key id="KEY_NEXTSONG" mapto="fastforward" flags="b"/>
 		<key id="KEY_SCREEN" mapto="activatePiP" flags="b"/>
+		<key id="KEY_SCREEN" mapto="activatePiP_long" flags="l"/>
 		<key id="KEY_PROGRAM" mapto="timer" flags="b"/>
+		<key id="KEY_EDIT" mapto="timer" flags="b"/>
+		<key id="KEY_EDIT" mapto="timer_long" flags="l"/>
 		<key id="KEY_PLAYPAUSE" mapto="playpause" flags="m"/>
 		<key id="KEY_LIST" mapto="playlist" flags="b"/>
 		<key id="KEY_TIME" mapto="timeshift" flags="b"/>
@@ -1001,5 +1023,7 @@
 		<key id="KEY_F3" mapto="f3_long" flags="l"/>
 		<key id="KEY_AUX" mapto="HDMIin" flags="b"/>
 		<key id="KEY_AUX" mapto="HDMIin_long" flags="l"/>
+		<key id="KEY_FILE" mapto="file" flags="b"/>
+		<key id="KEY_FILE" mapto="file_long" flags="l"/>
 	</map>
 </keymap>
diff --git a/data/menu.xml b/data/menu.xml
index 369d6c2..c17ddcc 100644
--- a/data/menu.xml
+++ b/data/menu.xml
@@ -38,9 +38,12 @@
 			<menu weight="3" text="EPG" entryID="epg_menu">
 				<id val="epg"/>
 				<item weight="1" level="0" entryID="epg_setup"><setup id="epgsettings"/></item>
-				<item weight="4" level="2" entryID="setup_epggraphical"><setup id="epggraphical"/></item>
-				<item weight="5" level="2" entryID="setup_epginfobargraphical"><setup id="epginfobargraphical"/></item>
-				<menu weight="6" level="2" text="Load-save-delete" entryID="epgloadsave_menu">
+				<item level="2" entryID="setup_epgsingle"><setup id="epgsingle"/></item>
+				<item level="2" entryID="setup_epggrid"><setup id="epggrid"/></item>
+				<item level="2" entryID="setup_epginfobarsingle"><setup id="epginfobarsingle"/></item>
+				<item level="2" entryID="setup_epginfobargrid"><setup id="epginfobargrid"/></item>
+				<item level="2" entryID="setup_epgmulti"><setup id="epgmulti"/></item>
+				<menu weight="100" level="7" text="Load-save-delete" entryID="epgloadsave_menu">
 					<id val="epgloadsave_menu"/>
 					<item level="0" entryID="saveepgcache" text="Save EPG">
 <code>
@@ -79,10 +82,7 @@ def msgClosed(ret):
 self.session.openWithCallback(msgClosed, EpgDeleteMsg)
 </code>
 					</item>
-				</menu>				
-				<item weight="7" level="2" entryID="setup_epginfobar"><setup id="epginfobar"/></item>
-				<item weight="8" level="2" entryID="setup_epgmulti"><setup id="epgmulti"/></item>
-				<item weight="9" level="2" entryID="setup_epgenhanced"><setup id="epgenhanced"/></item>
+				</menu>
 			</menu>
 			<!-- Menu / Setup / User Interface -->
 			<menu weight="4" text="User Interface" entryID="osd_setup" requires="OsdMenu">
@@ -159,7 +159,7 @@ self.session.open(SABnzbdSetupScreen)
 					<item weight="10" level="0" text="Recording &amp; playback" entryID="recording_setup"><screen module="Recordings" screen="RecordingSettings" /></item>
 					<item weight="15" level="0" text="Timeshift" entryID="timshift_setup"><screen module="Timeshift" screen="TimeshiftSettings" /></item>
 			</menu>
-		
+
 			<!-- Menu / Setup / Storage -->
 			<menu weight="9" level="0" text="Storage" entryID="hardisk_selection" requires="Harddisk">
 				<id val="harddisk"/>
diff --git a/data/setup.xml b/data/setup.xml
index 07bbb58..2a1d34f 100755
--- a/data/setup.xml
+++ b/data/setup.xml
@@ -2,8 +2,8 @@
 <!-- "titleshort" attribute is optional. If present it will be used as the item title in the menu. It will also be used as the header in setup screens when menu path is enabled. -->
 <setupxml>
 	<setup key="time" title="Time">
-		<item level="0" text="Timezone area" description="Setup your timezone area.">config.timezone.area</item>
-		<item level="0" text="Timezone" description="Your timezone in the area.">config.timezone.val</item>
+		<item level="0" text="Time zone area" description="Select your time zone area or region.">config.timezone.area</item>
+		<item level="0" text="Time zone" description="Select the time zone within the area or region.">config.timezone.val</item>
 		<item level="0" text="Sync time using" description="Synchronize system time using transponder or internet.">config.misc.SyncTimeUsing</item>
 		<item level="0" text="NTP server" description="Configure your NTP server.">config.misc.NTPserver</item>
 		<item level="0" text="Sync NTP every (minutes)" description="Setup network time synchronization interval." requires="config.misc.SyncTimeUsing" >config.misc.useNTPminutes</item>
@@ -47,14 +47,13 @@
 		<item level="0" text="Always use second infobar" description="Always show second infobar instead of standard infobar.">config.usage.fix_second_infobar</item>
 		<item level="0" text="Enable infobar fade-out" description="Fade the infobar when hiding">config.usage.show_infobar_do_dimming</item>
 		<item level="0" text="Infobar fade-out speed" description="Configure the infobar fading speed">config.usage.show_infobar_dimming_speed</item>
-		<item level="0" text="InfoBar EPG mode" description="Select how to activate the Quick EPG mode:" requires="InfoBarEpg">config.vixsettings.InfoBarEpg_mode</item>
+		<item level="0" text="Infobar EPG activation" description="Select how to activate the Infobar EPG. This will affect Infobar behaviour" requires="InfoBarEpg">config.obhsettings.InfoBarEpg_mode</item>
 		<item level="0" text="Show animation while busy" description="Show spinning logo when the system is busy.">config.usage.show_spinner</item>
 		<item level="1" text="Show job tasks in extensions" description="With this option you can hide Job Tasks from the extension screen (short blue button press).">config.usage.jobtaskextensions</item>
 		<item level="1" text="Show positioner movement" description="Choose whether or not to show an icon when a motorised dish is moving.">config.usage.showdish</item>
 		<item level="1" text="Show positioner position" description="Configure whether or not an rotor position will be displayed on infobar">config.misc.showrotorposition</item>
 		<item level="0" text="Include CI assignment" description="Set CI assignment for detection of available services." >config.misc.use_ci_assignment</item>
 		<item level="1" text="Alternative radio mode" description="Use the alternative or the conventional radio mode.">config.usage.e1like_radio_mode</item>
-		<item level="1" text="Position of finished Timers in the Timer list" description="Control of the position how finished timers are shown in the Timer List.">config.usage.timerlist_finished_timer_position</item>
 		<item level="2" text="Show infobar on channel change" description="If set to 'yes' the infobar will be displayed when changing channels.">config.usage.show_infobar_on_zap</item>
 		<item level="1" text="Show infobar on skip forward/backward" description="If set to 'yes', the infobar will be displayed when Fast Forwarding or Rewinding during media playback.">config.usage.show_infobar_on_skip</item>
 		<item level="1" text="Show infobar on event change" description="If set to 'yes' the infobar will be displayed when a new event starts.">config.usage.show_infobar_on_event_change</item>
@@ -109,7 +108,9 @@
 		<item level="1" text="Service info font size" description="This allows you to change the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size">config.usage.serviceinfo_fontsize</item>
 		<item level="2" text="Load unlinked userbouquets" description="When enabled enigma2 will load unlinked userbouquets. This means that userbouquets that are available, but not included in the bouquets.tv or bouquets.radio files, will still be loaded. This allows you for example to keep your own user bouquet while installed settings are upgraded">config.misc.load_unlinked_userbouquets</item>
 		<item level="1" text="Zap key delay for channel number input" description="In live view wait this many seconds after a numeric key press before assuming the required channel number has been entered. Default: 5 seconds. Setting zero will require confirmation with 'OK'. ">config.misc.zapkey_delay</item>
+		<item level="2" text="Show picons during channel number input" description="Configure whether service picons will be shown in number zap.">config.misc.numzap_picon</item>
 		<item level="1" text="Zap mode" requires="ZapMode" description="Setup how to control the channel changing.">config.misc.zapmode</item>
+		<item level="2" text="Number of digits in channel number" description="This allows you to set the number of digits you can input when selecting channels using number input.">config.usage.maxchannelnumlen</item>
 	</setup>
 	<setup key="epgsettings" title="EPG settings" titleshort="Settings">
 		<item level="2" text="EPG location" description="Choose the location where the EPG data will be stored when the %s %s is shut down. The location must be available at boot time.">config.misc.epgcachepath</item>
@@ -198,7 +199,9 @@
 		<item level="2" text="Initial rewind speed" description="Configure the initial rewind speed. When you press the rewind button, rewinding will start at this speed.">config.seek.enter_backward</item>
 		<item level="2" text="Limit character set for recording filenames" description="Limit the characters that can be used in recording filenames to (7 bit) ascii. This ensures compatibility with operating systems or file systems with limited character sets.">config.recording.ascii_filenames</item>
 		<item level="2" text="Composition of the recording filenames" description="Configure how recording filenames are constructed.">config.recording.filename_composition</item>
-		<item level="2" text="Remove completed timers after (days)" description="Configure the number of days old timers are kept before they are automatically removed from the timer list.">config.recording.keep_timers</item>
+		<item level="1" text="Show picons in timer list" description="Configure if picons will be shown in the timer list.">config.usage.timerlist_showpicons</item>
+		<item level="1" text="Position of finished timers in timer list" description="Control how finished timers are shown in the timer list. If set to hide, disabled timers will still be shown">config.usage.timerlist_finished_timer_position</item>
+		<item level="2" text="Remove finished timers after (days)" description="Configure the number of days old timers are kept before they are automatically removed from the timer list.">config.recording.keep_timers</item>
 		<item level="2" text="Offline decode delay (ms)" description="Configure the offline decoding delay (in milliseconds). The configured delay is observed at each control word parity change.">config.recording.offline_decode_delay</item>
 		<item level="2" text="Default recording type" description="Descramble &amp; record ECM' gives the option to descramble afterwards if descrambling on recording failed. 'Don't descramble, record ECM' save a scramble recording that can be descrambled on playback. 'Normal' means descramble the recording and don't record ECM.">config.recording.ecm_data</item>
 	</setup>
@@ -225,7 +228,7 @@
 		<item level="0" text="Keyboard map">config.keyboard.keymap</item>
 	</setup>
 	<setup key="display" title="Front panel settings" titleshort="Settings" requires="FrontpanelDisplay">
-		<item level="0" text="Use separate Picon pack for Front Display *" description="Use picon_lcd directory for picons on color LCD">config.lcd.picon_pack</item>
+		<item level="0" text="Use separate Picon pack for Front Display" description="Use piconlcd directory for picons on color LCD">config.lcd.picon_pack</item>
 		<item level="0" text="Show MiniTV in the Front Display" description="You can Display MiniTV with or without OSD Menu" requires="LCDMiniTV">config.lcd.minitvmode</item>
 		<item level="0" text="Show PIP in the Front Display" description="You can Display PIP with or without OSD Menu" requires="LCDMiniTVPiP">config.lcd.minitvpipmode</item>
 		<item level="0" text="Set Framerate for MiniTV" description="Lower Framerate save CPU Time" requires="LCDMiniTV">config.lcd.minitvfps</item>
@@ -239,12 +242,13 @@
 		<item level="0" text="LED Normal" description="LED brightness during normal operations." requires="LEDButtons">config.lcd.ledbrightness</item>
 		<item level="0" text="LED Standby" description="LED brightness during standby." requires="LEDButtons">config.lcd.ledbrightnessstandby</item>
 		<item level="0" text="LED Deep Standby" description="LED brightness during deep standby." requires="LEDButtons">config.lcd.ledbrightnessdeepstandby</item>
-		<item level="0" text="Turn on the power LED." description="Power LED can be turned on or off here." requires="PowerLed">config.lcd.powerled</item>
+		<item level="0" text="Turn on the power LED." description="Power LED can be turned on or off here." requires="PowerLED">config.lcd.powerled</item>
+		<item level="0" text="Turn on the control LED." description="Control LED can be turned on or off here." requires="PowerLED2">config.lcd.powerled2</item>
 		<item level="0" text="Standby LED" description="Turn on the power LED during standby." requires="StandbyLED">config.lcd.standbyLED</item>
 		<item level="0" text="Deep Standby LED" description="Turn on the power LED during deep standby." requires="SuspendLED">config.lcd.suspendLED</item>
-		<item level="0" text="Power LED State when Running." description="Set LED Color or disable the LED." requires="LedPowerColor">config.lcd.ledpowercolor</item>
-		<item level="0" text="Power LED State in Standby" description="Set LED Color or disable the LED." requires="LedStandbyColor">config.lcd.ledstandbycolor</item>
-		<item level="0" text="Power LED State in Deep-Standby" description="Set LED Color or disable the LED." requires="LedSuspendColor">config.lcd.ledsuspendcolor</item>
+		<item level="0" text="Power LED Colour State when Running." description="Set LED Color or disable the LED." requires="LedPowerColor">config.lcd.ledpowercolor</item>
+		<item level="0" text="Power LED Colour State in Standby" description="Set LED Color or disable the LED." requires="LedStandbyColor">config.lcd.ledstandbycolor</item>
+		<item level="0" text="Power LED Colour State in Deep-Standby" description="Set LED Color or disable the LED." requires="LedSuspendColor">config.lcd.ledsuspendcolor</item>
 		<item level="0" text="PowerControl FrontDisplay Normal Mode" description="Power On/Off display Normal Mode." requires="Power24x7On">config.lcd.power24x7on</item>
 		<item level="0" text="PowerControl FrontDisplay Standby Mode" description="Power On/Off display Standby Mode." requires="Power24x7Standby">config.lcd.power24x7standby</item>
 		<item level="0" text="PowerControl FrontDisplay Suspend Mode" description="Power On/Off display Suspend Mode." requires="Power24x7Suspend">config.lcd.power24x7suspend</item>
@@ -288,10 +292,11 @@
 	<setup key="logs" title="Logs settings" titleshort="Settings">
 		<item level="2" text="Logs folder location" description="Choose the location for crash and debug logs folder.">config.crash.debug_path</item>
 		<item level="2" text="Enable debug logs *" description="Allows you to enable the debug logs. They contain very detailed information about everything the system does. Reboot required to enable this!">config.crash.enabledebug</item>
-		<item level="2" text="Limit debug log size (MB)" description="Allows you to set the maximum size (MB) of the individual debug logs. When that size is reached, a new file will be created.">config.crash.debugloglimit</item>
+		<item level="2" text="Limit debug log size (MB)" description="Allows you to set the maximum size (MB) of the individual debug logs. When that size is reached, the log file will be truncated to the maximum size every 60 minutes.">config.crash.debugloglimit</item>
 		<item level="2" text="Show Log Manager in extensions list ?" description="Allows you to show/hide Log Manager in extensions (blue button).">config.logmanager.showinextensions</item>
 		<item level="2" text="Maximum number of days" description="Logs older than the specified number of days will be deleted.">config.crash.daysloglimit</item>
 		<item level="2" text="Maximum total space used (MB)" description="When maximum space for all logs is reached, the oldest logs will be deleted.">config.crash.sizeloglimit</item>
+		<item level="2" text="Debug log time format *" description="This is the prefix of each entry in the debug log. 'boot time' is the number of seconds since the receiver was last booted.">config.crash.logtimeformat</item>
 	</setup>
 	<setup key="timeshift" title="Timeshift">
 		<item level="1" text="Automatically start timeshift after" description="When enabled, timeshift starts automatically in background after the specified time.">config.timeshift.startdelay</item>
@@ -300,89 +305,94 @@
 		<item level="2" text="Stop timeshift while recording?" description="Stops timeshift being used if a recording is in progress. (Advisable for USB sticks)">config.timeshift.stopwhilerecording</item>
 		<item level="2" text="Use timeshift seekbar while timeshifting?" description="If set to 'yes', allows you to use the seekbar to jump to a point within the event.">config.timeshift.showinfobar</item>
 	</setup>
-	<setup key="epgsingle" title="ChannelEPG">
+	<setup key="epgchannel" title="Channel EPG">
 		<item level="2" text="Sort list by" description="You can have the list sorted by time or alphanumerical.">config.epgselection.sort</item>
-		<item level="2" text="Number of rows" description="Configure the number of rows shown.">config.epgselection.enhanced_itemsperpage</item>
-		<item level="2" text="Event font size" description="Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size.">config.epgselection.enhanced_eventfs</item>
+		<item level="2" text="Number of rows" description="Configure the number of rows shown.">config.epgselection.single.itemsperpage</item>
+		<item level="2" text="Event font size" description="Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size.">config.epgselection.single.eventfs</item>
 	</setup>
-	<setup key="epgmulti" title="MultiEPG">
-		<item level="2" text="Channel preview mode" description="If set to 'yes' you can preview channels in the EPG list.">config.epgselection.multi_preview_mode</item>
-		<item level="2" text="Show bouquet on launch" description="If set to 'yes' the bouquets will be shown each time you open the EPG.">config.epgselection.multi_showbouquet</item>
+	<setup key="epgmulti" title="Multi EPG">
+		<item level="2" text="Show bouquet on launch" description="If set to 'yes' the bouquets will be shown each time you open the EPG.">config.epgselection.multi.showbouquet</item>
+		<item level="2" text="Channel selection" description="Choose what channel to select when the EPG opens.">config.epgselection.multi.browse_mode</item>
+		<item level="2" text="Channel preview mode" description="If set to 'yes' you can preview channels in the EPG list.">config.epgselection.multi.preview_mode</item>
 		<item level="2" text="Skip empty services" description="If set to 'yes' channels without EPG will not be shown.">config.epgselection.overjump</item>
-		<item level="2" text="OK button (short)" description="Set to what you want the button to do.">config.epgselection.multi_ok</item>
-		<item level="2" text="OK button (long)" description="Set to what you want the button to do.">config.epgselection.multi_oklong</item>
-		<item level="2" text="Number of rows" description="Configure the number of rows shown.">config.epgselection.multi_itemsperpage</item>
-		<item level="2" text="Event font size" description="Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size.">config.epgselection.multi_eventfs</item>
+		<item level="2" text="OK button (short)" description="Set to what you want the button to do.">config.epgselection.multi.btn_ok</item>
+		<item level="2" text="OK button (long)" description="Set to what you want the button to do.">config.epgselection.multi.btn_oklong</item>
+		<item level="2" text="Number of rows" description="Configure the number of rows shown.">config.epgselection.multi.itemsperpage</item>
+		<item level="2" text="Event font size" description="Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size.">config.epgselection.multi.eventfs</item>
+		<item level="2" text="Service width" description="Configure the width allocated to the service name.">config.epgselection.multi.servicewidth</item>
 	</setup>
-	<setup key="epgenhanced" title="SingleEPG">
-		<item level="2" text="Channel preview mode" description="If set to 'yes' you can preview channels in the EPG list.">config.epgselection.enhanced_preview_mode</item>
+	<setup key="epgsingle" title="Single EPG">
+		<item level="2" text="Channel selection" description="Choose what channel to select when the EPG opens.">config.epgselection.single.browse_mode</item>
+		<item level="2" text="Channel preview mode" description="If set to 'yes' you can preview channels in the EPG list.">config.epgselection.single.preview_mode</item>
 		<item level="2" text="Skip empty services" description="If set to 'yes' channels without EPG will not be shown.">config.epgselection.overjump</item>
 		<item level="2" text="Sort list by" description="You can have the list sorted by time or alphanumerical.">config.epgselection.sort</item>
-		<item level="2" text="OK button (short)" description="Set to what you want the button to do.">config.epgselection.enhanced_ok</item>
-		<item level="2" text="OK button (long)" description="Set to what you want the button to do.">config.epgselection.enhanced_oklong</item>
-		<item level="2" text="Number of rows" description="Configure the number of rows shown.">config.epgselection.enhanced_itemsperpage</item>
-		<item level="2" text="Event font size" description="Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size.">config.epgselection.enhanced_eventfs</item>
+		<item level="2" text="OK button (short)" description="Set to what you want the button to do.">config.epgselection.single.btn_ok</item>
+		<item level="2" text="OK button (long)" description="Set to what you want the button to do.">config.epgselection.single.btn_oklong</item>
+		<item level="2" text="Number of rows" description="Configure the number of rows shown.">config.epgselection.single.itemsperpage</item>
+		<item level="2" text="Event font size" description="Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size.">config.epgselection.single.eventfs</item>
 	</setup>
-	<setup key="epginfobar" title="InfobarEPG">
-		<item level="2" text="View mode" description="Choose the layout view mode (Text or Graphics).">config.epgselection.infobar_type_mode</item>
-		<item level="2" text="Channel preview mode" description="If set to 'yes' you can preview channels in the EPG list.">config.epgselection.infobar_preview_mode</item>
+	<setup key="epginfobarsingle" title="Infobar Single EPG">
+		<item level="2" text="View mode" description="Choose the layout. Single channel, Graphics Grid EPG or Text Grid EPG.">config.epgselection.infobar.type_mode</item>
+		<item level="2" text="Channel selection" description="Choose what channel to select when the EPG opens.">config.epgselection.infobar.browse_mode</item>
+		<item level="2" text="Infobar EPG activation" description="Select how to activate the Infobar Single EPG. This will affect Infobar behaviour" requires="InfoBarEpg">config.obhsettings.InfoBarEpg_mode</item>
+		<item level="2" text="Channel preview mode" description="If set to 'yes' you can preview channels in the EPG list.">config.epgselection.infobar.preview_mode</item>
 		<item level="2" text="Skip empty services" description="If set to 'yes' channels without EPG will not be shown.">config.epgselection.overjump</item>
 		<item level="2" text="Sort list by" description="You can have the list sorted by time or alphanumerical.">config.epgselection.sort</item>
-		<item level="2" text="OK button (short)" description="Set to what you want the button to do.">config.epgselection.infobar_ok</item>
-		<item level="2" text="OK button (long)" description="Set to what you want the button to do.">config.epgselection.infobar_oklong</item>
-		<item level="2" text="Number of rows" description="Configure the number of rows shown.">config.epgselection.infobar_itemsperpage</item>
-		<item level="2" text="Event font size" description="Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size.">config.epgselection.infobar_eventfs</item>
+		<item level="2" text="OK button (short)" description="Set to what you want the button to do.">config.epgselection.infobar.btn_ok</item>
+		<item level="2" text="OK button (long)" description="Set to what you want the button to do.">config.epgselection.infobar.btn_oklong</item>
+		<item level="2" text="Number of rows" description="Configure the number of rows shown.">config.epgselection.infobar.itemsperpage</item>
+		<item level="2" text="Event font size" description="Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size.">config.epgselection.infobar.eventfs</item>
 	</setup>
-	<setup key="epginfobargraphical" title="Graphical InfobarEPG">
-		<item level="2" text="View mode" description="Choose the layout view mode (Text / Graphics Multi channel EPG or Single channel EPG).">config.epgselection.infobar_type_mode</item>
-		<item level="2" text="Channel preview mode" description="If set to 'yes' you can preview channels in the EPG list.">config.epgselection.infobar_preview_mode</item>
-		<item level="2" text="Service Title mode" description="Configure to show the channel names, picons, or both in the EPG.">config.epgselection.infobar_servicetitle_mode</item>
-		<item level="2" text="OK button (short)" description="Set to what you want the button to do.">config.epgselection.infobar_ok</item>
-		<item level="2" text="OK button (long)" description="Set to what you want the button to do.">config.epgselection.infobar_oklong</item>
+	<setup key="epginfobargrid" title="Infobar Grid EPG">
+		<item level="2" text="View mode" description="Choose the layout. Single channel, Graphics Grid EPG or Text Grid EPG.">config.epgselection.infobar.type_mode</item>
+		<item level="2" text="Channel selection" description="Choose what channel to select when the EPG opens.">config.epgselection.infobar.browse_mode</item>
+		<item level="2" text="Infobar EPG activation" description="Select how to activate the Infobar Grid EPG. This will affect Infobar behaviour" requires="InfoBarEpg">config.obhsettings.InfoBarEpg_mode</item>
+		<item level="2" text="Channel preview mode" description="If set to 'yes' you can preview channels in the EPG list.">config.epgselection.infobar.preview_mode</item>
+		<item level="2" text="Service Title mode" description="Configure to show the channel names, picons, or both in the EPG.">config.epgselection.infobar.servicetitle_mode</item>
+		<item level="2" text="OK button (short)" description="Set to what you want the button to do.">config.epgselection.infobar.btn_ok</item>
+		<item level="2" text="OK button (long)" description="Set to what you want the button to do.">config.epgselection.infobar.btn_oklong</item>
 		<item level="2" text="Skip empty services" description="If set to 'yes' channels without EPG will not be shown.">config.epgselection.overjump</item>
-		<item level="2" text="Base time" description="Choose time interval to which the graphics will be rounded off.">config.epgselection.infobar_roundto</item>
-		<item level="2" text="Primetime hour" description="Set to the desired primetime (hour).">config.epgselection.infobar_primetimehour</item>
-		<item level="2" text="Primetime minute" description="Set to the desired primetime (minutes).">config.epgselection.infobar_primetimemins</item>
-		<item level="2" text="Number of rows" description="Configure the number of rows shown.">config.epgselection.infobar_itemsperpage</item>
-		<item level="2" text="Event font size" description="Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size.">config.epgselection.infobar_eventfs</item>
-		<item level="2" text="Service font size" description="Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size.">config.epgselection.infobar_servfs</item>
-		<item level="2" text="Service width" description="Configure the width allocated to the service name.">config.epgselection.infobar_servicewidth</item>
-		<item level="2" text="Picon width" description="Configure the width allocated to the picon.">config.epgselection.infobar_piconwidth</item>
-		<item level="2" text="Info icon width" description="Configure the minimum width before showing the 'i' icon, '0' is equal to not showing the icon at all.">config.epgselection.infobar_infowidth</item>
-		<item level="2" text="Timeline font size" description="Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size.">config.epgselection.infobar_timelinefs</item>
-		<item level="2" text="Timeline 24 Hour" description="Show time in 24 hour clock format." requires="config.usage.time.disabled">config.epgselection.infobar_timeline24h</item>
-		<item level="2" text="Time scale" description="Configure the amount of time that will be presented.">config.epgselection.infobar_prevtimeperiod</item>
+		<item level="2" text="Base time" description="Choose time interval to which the graphics will be rounded off.">config.epgselection.infobar.roundto</item>
+		<item level="2" text="Primetime" description="Set to the desired primetime.">config.epgselection.infobar.primetime</item>
+		<item level="2" text="Number of rows" description="Configure the number of rows shown.">config.epgselection.infobar.itemsperpage</item>
+		<item level="2" text="Event font size" description="Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size.">config.epgselection.infobar.eventfs</item>
+		<item level="2" text="Service font size" description="Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size.">config.epgselection.infobar.servfs</item>
+		<item level="2" text="Service width" description="Configure the width allocated to the service name.">config.epgselection.infobar.servicewidth</item>
+		<item level="2" text="Picon width" description="Configure the width allocated to the picon.">config.epgselection.infobar.piconwidth</item>
+		<item level="2" text="Info icon width" description="Configure the minimum width before showing the 'i' icon, '0' is equal to not showing the icon at all.">config.epgselection.infobar.infowidth</item>
+		<item level="2" text="Timeline font size" description="Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size.">config.epgselection.infobar.timelinefs</item>
+		<item level="2" text="Timeline 24 Hour" description="Show time in 24 hour clock format." requires="config.usage.time.disabled">config.epgselection.infobar.timeline24h</item>
+		<item level="2" text="Time scale" description="Configure the amount of time that will be presented.">config.epgselection.infobar.prevtimeperiod</item>
 	</setup>
-	<setup key="epggraphical" title="GraphicalEPG">
-		<item level="2" text="View mode" description="This option allows you to set the layout view (Text or Graphics).">config.epgselection.graph_type_mode</item>
-		<item level="2" text="Channel preview mode" description="If set to 'yes' you can preview channels in the EPG list.">config.epgselection.graph_preview_mode</item>
-		<item level="2" text="Show bouquet on launch" description="If set to 'yes' the bouquets will be shown each time you open the EPG.">config.epgselection.graph_showbouquet</item>
-		<item level="2" text="Picture in graphics" description="If set to 'yes' shows a small TV-screen in the EPG.">config.epgselection.graph_pig</item>
-		<item level="1" text="Highlight current events" description="Enable to highlight events that are currently in progress.">config.epgselection.graph_highlight_current_events</item>
-		<item level="2" text="Service Title mode" description="Configure to show the channel names, picons, or both in the EPG.">config.epgselection.graph_servicetitle_mode</item>
-		<item level="2" text="Info button (short)" description="Set to what you want the button to do.">config.epgselection.graph_info</item>
-		<item level="2" text="Info button (long)" description="Set to what you want the button to do.">config.epgselection.graph_infolong</item>
-		<item level="2" text="OK button (short)" description="Set to what you want the button to do.">config.epgselection.graph_ok</item>
-		<item level="2" text="OK button (long)" description="Set to what you want the button to do.">config.epgselection.graph_oklong</item>
-		<item level="2" text="Channel 1 at start" description="If set to 'yes' the EPG will always open at the first channel of bouquet. If set to 'no' the EPG will open on the current channel.">config.epgselection.graph_channel1</item>
+	<setup key="epggrid" title="Grid EPG">
+		<item level="2" text="View mode" description="This option allows you to set the layout view (Text or Graphics).">config.epgselection.grid.type_mode</item>
+		<item level="2" text="Show bouquet on launch" description="If set to 'yes' the bouquets will be shown each time you open the EPG.">config.epgselection.grid.showbouquet</item>
+		<item level="2" text="Channel selection" description="Choose what channel to select when the EPG opens.">config.epgselection.grid.browse_mode</item>
+		<item level="2" text="Channel preview mode" description="If set to 'yes' you can preview channels in the EPG list.">config.epgselection.grid.preview_mode</item>
+		<item level="2" text="Picture in graphics" description="If set to 'yes' shows a small TV-screen in the EPG.">config.epgselection.grid.pig</item>
+		<item level="1" text="Highlight current events" description="Enable to highlight events that are currently in progress.">config.epgselection.grid.highlight_current_events</item>
+		<item level="2" text="Service Title mode" description="Configure to show the channel names, picons, or both in the EPG.">config.epgselection.grid.servicetitle_mode</item>
+		<item level="2" text="Info button (short)" description="Set to what you want the button to do.">config.epgselection.grid.btn_info</item>
+		<item level="2" text="Info button (long)" description="Set to what you want the button to do.">config.epgselection.grid.btn_infolong</item>
+		<item level="2" text="OK button (short)" description="Set to what you want the button to do.">config.epgselection.grid.btn_ok</item>
+		<item level="2" text="OK button (long)" description="Set to what you want the button to do.">config.epgselection.grid.btn_oklong</item>
 		<item level="2" text="Skip empty services" description="If set to 'yes' channels without EPG will not be shown.">config.epgselection.overjump</item>
-		<item level="2" text="Base time" description="Choose time interval to which the graphics will be rounded off.">config.epgselection.graph_roundto</item>
-		<item level="2" text="Primetime hour" description="Set the desired primetime (hour).">config.epgselection.graph_primetimehour</item>
-		<item level="2" text="Primetime minute" description="Set the desired primetime (minutes).">config.epgselection.graph_primetimemins</item>
-		<item level="2" text="Number of rows" description="Configure the number of rows shown.">config.epgselection.graph_itemsperpage</item>
-		<item level="2" text="Event font size" description="Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size.">config.epgselection.graph_eventfs</item>
-		<item level="2" text="Service font size" description="Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size.">config.epgselection.graph_servfs</item>
-		<item level="2" text="Alignment of service names" description="Configure alignment of the service names.">config.epgselection.graph_servicename_alignment</item>
-		<item level="2" text="Alignment of service numbers" description="Configure alignment of the service numbers.">config.epgselection.graph_servicenumber_alignment</item>
-		<item level="2" text="Alignment of events" description="Configure alignment of service events.">config.epgselection.graph_event_alignment</item>
-		<item level="2" text="Alignment of timeline date" description="Configure alignment of the timeline date.">config.epgselection.graph_timelinedate_alignment</item>
-		<item level="2" text="Service width" description="Configure the width allocated to the service name.">config.epgselection.graph_servicewidth</item>
-		<item level="2" text="Picon width" description="Configure the width allocated to the picon.">config.epgselection.graph_piconwidth</item>
-		<item level="2" text="Info icon width" description="Configure the minimum width before showing the 'i' icon, '0' is equal to not showing the icon at all.">config.epgselection.graph_infowidth</item>
-		<item level="2" text="Position of recording icons" description="Set the position of the recording icons">config.epgselection.graph_rec_icon_height</item>
-		<item level="2" text="Timeline font size" description="Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size.">config.epgselection.graph_timelinefs</item>
-		<item level="2" text="Timeline 24 Hour" description="Show time in 24 hour clock format." requires="config.usage.time.disabled">config.epgselection.graph_timeline24h</item>
-		<item level="2" text="Time scale" description="Configure the amount of time that will be presented.">config.epgselection.graph_prevtimeperiod</item>
+		<item level="2" text="Base time" description="Choose time interval to which the graphics will be rounded off.">config.epgselection.grid.roundto</item>
+		<item level="2" text="Primetime" description="Set the desired primetime.">config.epgselection.grid.primetime</item>
+		<item level="2" text="Number of rows" description="Configure the number of rows shown.">config.epgselection.grid.itemsperpage</item>
+		<item level="2" text="Event font size" description="Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size.">config.epgselection.grid.eventfs</item>
+		<item level="2" text="Service font size" description="Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size.">config.epgselection.grid.servfs</item>
+		<item level="2" text="Alignment of service names" description="Configure alignment of the service names.">config.epgselection.grid.servicename_alignment</item>
+		<item level="2" text="Alignment of service numbers" description="Configure alignment of the service numbers.">config.epgselection.grid.servicenumber_alignment</item>
+		<item level="2" text="Alignment of events" description="Configure alignment of service events.">config.epgselection.grid.event_alignment</item>
+		<item level="2" text="Alignment of timeline date" description="Configure alignment of the timeline date.">config.epgselection.grid.timelinedate_alignment</item>
+		<item level="2" text="Service width" description="Configure the width allocated to the service name.">config.epgselection.grid.servicewidth</item>
+		<item level="2" text="Picon width" description="Configure the width allocated to the picon.">config.epgselection.grid.piconwidth</item>
+		<item level="2" text="Info icon width" description="Configure the minimum width before showing the 'i' icon, '0' is equal to not showing the icon at all.">config.epgselection.grid.infowidth</item>
+		<item level="2" text="Position of recording icons" description="Set the position of the recording icons">config.epgselection.grid.rec_icon_height</item>
+		<item level="2" text="Timeline font size" description="Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size.">config.epgselection.grid.timelinefs</item>
+		<item level="2" text="Timeline 24 Hour" description="Show time in 24 hour clock format." requires="config.usage.time.disabled">config.epgselection.grid.timeline24h</item>
+		<item level="2" text="Time scale" description="Configure the amount of time that will be presented.">config.epgselection.grid.prevtimeperiod</item>
 	</setup>
 	<setup key="pluginbrowsersetup" title="Plugin browser settings" titleshort="Settings">
 		<item level="2" text="Show translation packages" description="If set to 'yes' it will show the 'PO' packages in browser.">config.pluginbrowser.po</item>
diff --git a/data/unicable.xml b/data/unicable.xml
index 3fb4051..df9070c 100644
--- a/data/unicable.xml
+++ b/data/unicable.xml
@@ -2,12 +2,13 @@
 <unicable version="20190709">
 	<lnb>
 		<manufacturer name="Dura-Sat(DUR-line)">
-			<product name="UK101" scrs="1210,1420,1680,2040"/>
+			<product name="UK101" scrs="1210,1420,1680,2040" bootuptime="2500"/>
 			<product name="UK102" scrs="1210,1420,1680,2040"/>
-			<product name="UK124" format="jess" scrs= "1210,1420,1680,2040,1005,1050,1095,1140,1260,1305,1350,1475,1520,1565,1610,1725,1770,1815,1860,1905,1950,1995,2085,2130"/>
+			<product name="UK119" format="jess" bootuptime="2500" scrs="1076,1178,1280,1382,1484,1586,1688,1790,975,1025,1225,1330,1430,1535,1630,1730,1840,1880,1920,1960,2000,2040,2080,2125"/>
+			<product name="UK124" format="jess" bootuptime="2500" scrs="1210,1420,1680,2040,1005,1050,1095,1140,1260,1305,1350,1475,1520,1565,1610,1725,1770,1815,1860,1905,1950,1995,2085,2130"/>
 		</manufacturer>
 		<manufacturer name="DStv">
-			<product name="LMX500" format="jess" scrs= "1210,1420,1680,2040,1006,1057,1108,1159,1261,1312,1363,1471,1522,1573,1624,1731,1782,1833,1884,1935,1986,2091,2142,2193"/>
+			<product name="LMX500" format="jess" bootuptime="2500" scrs="1210,1420,1680,2040,1006,1057,1108,1159,1261,1312,1363,1471,1522,1573,1624,1731,1782,1833,1884,1935,1986,2091,2142,2193"/>
 		</manufacturer>
 		<manufacturer name="EDISON">
 			<product name="SCR-1" scrs="1210,1420,1680,2040"/>
@@ -15,16 +16,21 @@
 		<manufacturer name="Fuba">
 			<product name="DEK 342" scrs="1210,1420,1680,2040"/>
 		</manufacturer>
+		<manufacturer name="GigaBlue">
+			<product name="GigaBlue Ultra SCR-LNB" format="jess" bootuptime="2500" scrs="1210,1420,1680,2040,1005,1050,1095,1140,1260,1305,1350,1475,1520,1565,1610,1725,1770,1815,1860,1905,1950,1995,2085,2130"/>
+		</manufacturer>
 		<manufacturer name="G-STAR">
 			<product name="GS-404-L1" scrs="1280,1382,1484"/>
 			<product name="GS-406-L1" scrs="1280,1382,1484,1586,1688,1790"/>
 		</manufacturer>
 		<manufacturer name="GT-SAT">
 			<product name="GT-S1-2-3SCR4" scrs="1210,1420,1680,2040"/>
-			<product name="dLNB dHello" format="jess" scrs="0975,1025,1075,1125,1175,1225,1275,1325,1375,1425,1475,1525,1575,1625,1675,1725,1775,1825,1875,1925,1975,2025,2075,2125"/>
-			<product name="GT-dLNB1-T" format="jess" scrs="0975,1025,1075,1125,1175,1225,1275,1325,1375,1425,1475,1525,1575,1625,1675,1725,1775,1825,1875,1925,1975,2025,2075,2125"/>
-			<product name="GT-dLNB1-DY" format="jess" scrs="0975,1025,1075,1125,1175,1225,1275,1325,1375,1425,1475,1525,1575,1625,1675,1725,1775,1825,1875,1925,1975,2025,2075,2125"/>
-			<product name="GT-S3DCSS24" format="jess" scrs="0975,1025,1075,1125,1175,1225,1275,1325,1375,1425,1475,1525,1575,1625,1675,1725,1775,1825,1875,1925,1975,2025,2075,2125"/>
+			<product name="dLNB dHello" format="jess" bootuptime="2700" scrs="0975,1025,1075,1125,1175,1225,1275,1325,1375,1425,1475,1525,1575,1625,1675,1725,1775,1825,1875,1925,1975,2025,2075,2125"/>
+			<product name="GT-dLNB1-T" format="jess" bootuptime="2700" scrs="0975,1025,1075,1125,1175,1225,1275,1325,1375,1425,1475,1525,1575,1625,1675,1725,1775,1825,1875,1925,1975,2025,2075,2125"/>
+			<product name="GT-dLNB1-DY" format="jess" bootuptime="2700" scrs="0975,1025,1075,1125,1175,1225,1275,1325,1375,1425,1475,1525,1575,1625,1675,1725,1775,1825,1875,1925,1975,2025,2075,2125"/>
+			<product name="GT-S1dCSS24" bootuptime="2500" format="jess" scrs="0975,1025,1075,1125,1175,1225,1275,1325,1375,1425,1475,1525,1575,1625,1675,1725,1775,1825,1875,1925,1975,2025,2075,2125"/>
+			<product name="GT-S2dCSS24" bootuptime="2500" format="jess" scrs="0975,1025,1075,1125,1175,1225,1275,1325,1375,1425,1475,1525,1575,1625,1675,1725,1775,1825,1875,1925,1975,2025,2075,2125"/>			
+			<product name="GT-S3DCSS24" bootuptime="2500" format="jess" scrs="0975,1025,1075,1125,1175,1225,1275,1325,1375,1425,1475,1525,1575,1625,1675,1725,1775,1825,1875,1925,1975,2025,2075,2125"/>
 		</manufacturer>
 		<manufacturer name="Humax">
 			<product name="150 SCR" scrs="1210,1420,1680,2040"/>
@@ -33,8 +39,8 @@
 			<product name="IDLP-40UNIQD+S" scrs="1680,1420,2040,1210"/>
 			<product name="IDLB-QUDL-UNI2L-OPP" scrs="1210,1420,1680,2040"/>
 			<product name="IDLB-QUDL42-UNI2L-1PP" scrs="1210,1420,1680,2040"/>
-			<product name="IDLU-24UL40-UNMOO-OPP" positions="4" format="jess" scrs="1210,1420,1680,2040,1005,1050,1095,1140,1260,1305,1350,1475,1520,1565,1610,1725,1770,1815,1860,1905,1950,1995,2085,2130"/>
-			<product name="IDLU-32UL40-UNBOO-OPP" positions="4" format="jess" scrs="1210,1420,1680,2040,984,1020,1056,1092,1128,1164,1256,1292,1328,1364,1458,1494,1530,1566,1602,1638,1716,1752,1788,1824,1860,1896,1932,1968,2004,2076,2112,2148"/>
+			<product name="IDLU-24UL40-UNMOO-OPP" positions="4" bootuptime="800" format="jess" scrs="1210,1420,1680,2040,1005,1050,1095,1140,1260,1305,1350,1475,1520,1565,1610,1725,1770,1815,1860,1905,1950,1995,2085,2130"/>
+			<product name="IDLU-32UL40-UNBOO-OPP" positions="4" bootuptime="800" format="jess" scrs="1210,1420,1680,2040,984,1020,1056,1092,1128,1164,1256,1292,1328,1364,1458,1494,1530,1566,1602,1638,1716,1752,1788,1824,1860,1896,1932,1968,2004,2076,2112,2148"/>
 	    </manufacturer>
 		<manufacturer name="Kathrein">
 			<product name="UAS481" lofl="10200" lofh="10200" scrs="1400,1516,1632,1748"/>
@@ -46,7 +52,7 @@
 		<product name="Unicable II MCTV-785" format="jess" scrs ="1210,1420,1680,2040,985,1050,1115,1275,1340,1485 ,1550,1615,1745,1810,1875,1940"/>
 		</manufacturer>
 		<manufacturer name="Megasat">
-			<product name="Unicable II LNB Diavolo" format="jess" scrs ="1210,1420,1680,2040,1005,1050,1095,1140,1260,1305,1350,1475,1520,1565,1610,1725,1770,1815,1860,1905,1950,1995,2085,2130"/>
+			<product name="Unicable II LNB Diavolo" format="jess" bootuptime="2500" scrs="1210,1420,1680,2040,1005,1050,1095,1140,1260,1305,1350,1475,1520,1565,1610,1725,1770,1815,1860,1905,1950,1995,2085,2130"/>
 		</manufacturer>
 		<manufacturer name="Opticum">
 			<product name="Unicable LNB" scrs="1210,1420,1680,2040,970,1030,1090,1150"/>
@@ -122,7 +128,7 @@
 		<manufacturer name="Dura-Sat(Dur-Line)">
 			<product name="Dur-DCR5-1-8(L4/K)" format="jess" scrs="1280,1382,1484,1586,1688,1790,1892,1994"/>
 			<product name="DCR 5-2-4" scrs="1280,1382,1484,1586"/>
-			<product name="DPC-32 K" positions="2" format="jess" scrs="1210,1420,1680,2040,984,1020,1056,1092,1128,1164,1256,1292,1328,1364,1458,1494,1530,1566,1602,1638,1716,1752,1788,1824,1860,1896,1932,1968,2004,2076,2112,2148"/>
+			<product name="DPC-32 K" positions="2" format="jess" bootuptime="2500" scrs="1210,1420,1680,2040,984,1020,1056,1092,1128,1164,1256,1292,1328,1364,1458,1494,1530,1566,1602,1638,1716,1752,1788,1824,1860,1896,1932,1968,2004,2076,2112,2148"/>
 			<product name="UCP2" scrs="1400,1516"/>
 			<product name="UCP3" scrs="1280,1382,1484"/>
 			<product name="UCP18" scrs="1284,1400,1516,1632,1748,1864,1980,2096"/>
@@ -139,7 +145,7 @@
 		<manufacturer name="DStv">
 			<product name="DStv Switch (5-1)" scrs="1210,1420,1680,2040"/>
 			<product name="DStv Switch (5-2)" scrs="1210,1420,1680,2040"/>
-			<product name="DStv Switch (24-1Z)" format="jess" scrs= "1210,1420,1680,2040,1006,1057,1108,1159,1261,1312,1363,1471,1522,1573,1624,1731,1782,1833,1884,1935,1986,2091,2142,2193"/>
+			<product name="DStv Switch (24-1Z)" format="jess" bootuptime="2500" scrs="1210,1420,1680,2040,1006,1057,1108,1159,1261,1312,1363,1471,1522,1573,1624,1731,1782,1833,1884,1935,1986,2091,2142,2193"/>
 		</manufacturer>
 		<manufacturer name="EMP-Centauri">
 			<product name="MS4/1(6)EUN-3" scrs="1400,1632,1284,1516,1864,2096"/>
@@ -170,9 +176,9 @@
 			<product name="IDLP-UST112-CUO1O-8PP" scrs="1076,1178,1280,1382,1484,1586,1688,1790"/>
 			<product name="IDLP-USS200-CUO10-8PP" positions="2" scrs="1076,1178,1280,1382,1484,1586,1688,1790"/>
 			<product name="ISKY-UST110-CUO4O-16P" format="jess" scrs="1210,1420,1680,2040,985,1050,1115,1275,1340,1485,1550,1615,1745,1810,1875,1940"/>
-			<product name="IDLU-UST110-CUO1O-32P" format="jess" scrs="1210,1420,1680,2040,984,1020,1056,1092,1128,1164,1256,1292,1328,1364,1458,1494,1530,1566,1602,1638,1716,1752,1788,1824,1860,1896,1932,1968,2004,2076,2112,2148"/>
-			<product name="IDLU-UST110-CUO4O-32P" format="jess" positions="2" scrs="1210,1420,1680,2040,985,1050,1115,1275,1340,1485,1550,1615,1745,1810,1875,1940"/>
-			<product name="IDLU-UWT110-CUO10-32P" format="jess" positions="4" scrs="1210,1420,1680,2040,984,1020,1056,1092,1128,1164,1256,1292,1328,1364,1458,1494,1530,1566,1602,1638,1716,1752,1788,1824,1860,1896,1932,1968,2004,2076,2112,2148"/>
+			<product name="IDLU-UST110-CUO1O-32P" format="jess" bootuptime="2500" scrs="1210,1420,1680,2040,984,1020,1056,1092,1128,1164,1256,1292,1328,1364,1458,1494,1530,1566,1602,1638,1716,1752,1788,1824,1860,1896,1932,1968,2004,2076,2112,2148"/>
+			<product name="IDLU-UST110-CUO4O-32P" format="jess" positions="2" bootuptime="2500" scrs="1210,1420,1680,2040,985,1050,1115,1275,1340,1485,1550,1615,1745,1810,1875,1940"/>
+			<product name="IDLU-UWT110-CUO10-32P" format="jess" positions="4" bootuptime="2500" scrs="1210,1420,1680,2040,984,1020,1056,1092,1128,1164,1256,1292,1328,1364,1458,1494,1530,1566,1602,1638,1716,1752,1788,1824,1860,1896,1932,1968,2004,2076,2112,2148"/>
 		</manufacturer>
 		<manufacturer name="Johansson">
 			<product name="9712A" scrs="1280,1382,1484"/>
@@ -263,6 +269,22 @@
 			<product name="EXE 259" format="jess" scrs="974,1076,1178,1280,1382,1484,1586,1688,1790"/>
 			<product name="EXE 1512" format="jess" scrs="974,1076,1178,1280,1382,1484,1586,1688,1790,1892,1994,2096"/>
 			<product name="EXE 2512" format="jess" scrs="974,1076,1178,1280,1382,1484,1586,1688,1790,1892,1994,2096"/>
+			<product name="EXD 1532 1Sat 8UBs" format="jess" positions="1" scrs="975,1025,1075,1125,1175,1225,1275,1325"/>
+			<product name="EXD 1532 1Sat 16UBs" format="jess" positions="1" scrs="975,1025,1075,1125,1175,1225,1275,1325,1375,1425,1475,1525,1575,1625,1675,1725"/>
+			<product name="EXD 1532 1Sat 24UBs" format="jess" positions="1" scrs="975,1025,1075,1125,1175,1225,1275,1325,1375,1425,1475,1525,1575,1625,1675,1725,1775,1825,1875,1925,1975,2025,2075,2125"/>
+			<product name="EXD 1532 1Sat 30UBs" format="jess" positions="1" scrs="970,1010,1050,1090,1130,1170,1210,1250,1290,1330,1370,1410,1450,1490,1530,1570,1610,1650,1690,1730,1770,1810,1850,1890,1930,1970,2010,2050,2090,2130"/>
+			<product name="EXD 1532 2Sat 8UBs" format="jess" positions="2" scrs="975,1025,1075,1125,1175,1225,1275,1325"/>
+			<product name="EXD 1532 2Sat 16UBs" format="jess" positions="2" scrs="975,1025,1075,1125,1175,1225,1275,1325,1375,1425,1475,1525,1575,1625,1675,1725"/>
+			<product name="EXD 1532 2Sat 24UBs" format="jess" positions="2" scrs="975,1025,1075,1125,1175,1225,1275,1325,1375,1425,1475,1525,1575,1625,1675,1725,1775,1825,1875,1925,1975,2025,2075,2125"/>
+			<product name="EXD 1532 2Sat 30UBs" format="jess" positions="2" scrs="970,1010,1050,1090,1130,1170,1210,1250,1290,1330,1370,1410,1450,1490,1530,1570,1610,1650,1690,1730,1770,1810,1850,1890,1930,1970,2010,2050,2090,2130"/>
+			<product name="EXD 2532 1Sat 8UBs" format="jess" positions="1" scrs="975,1025,1075,1125,1175,1225,1275,1325"/>
+			<product name="EXD 2532 1Sat 16UBs" format="jess" positions="1" scrs="975,1025,1075,1125,1175,1225,1275,1325,1375,1425,1475,1525,1575,1625,1675,1725"/>
+			<product name="EXD 2532 1Sat 24UBs" format="jess" positions="1" scrs="975,1025,1075,1125,1175,1225,1275,1325,1375,1425,1475,1525,1575,1625,1675,1725,1775,1825,1875,1925,1975,2025,2075,2125"/>
+			<product name="EXD 2532 1Sat 30UBs" format="jess" positions="1" scrs="970,1010,1050,1090,1130,1170,1210,1250,1290,1330,1370,1410,1450,1490,1530,1570,1610,1650,1690,1730,1770,1810,1850,1890,1930,1970,2010,2050,2090,2130"/>
+			<product name="EXD 2532 2Sat 8UBs" format="jess" positions="2" scrs="975,1025,1075,1125,1175,1225,1275,1325"/>
+			<product name="EXD 2532 2Sat 16UBs" format="jess" positions="2" scrs="975,1025,1075,1125,1175,1225,1275,1325,1375,1425,1475,1525,1575,1625,1675,1725"/>
+			<product name="EXD 2532 2Sat 24UBs" format="jess" positions="2" scrs="975,1025,1075,1125,1175,1225,1275,1325,1375,1425,1475,1525,1575,1625,1675,1725,1775,1825,1875,1925,1975,2025,2075,2125"/>
+			<product name="EXD 2532 2Sat 30UBs" format="jess" positions="2" scrs="970,1010,1050,1090,1130,1170,1210,1250,1290,1330,1370,1410,1450,1490,1530,1570,1610,1650,1690,1730,1770,1810,1850,1890,1930,1970,2010,2050,2090,2130"/>
 		</manufacturer>
 		<manufacturer name="Kreiling">
 			<product name="KR 2-1-2 Uni-D" positions="2" scrs="1400,1516"/>
diff --git a/enigma2.bb b/enigma2.bb
index aeb5554..2f72522 100644
--- a/enigma2.bb
+++ b/enigma2.bb
@@ -18,16 +18,7 @@ PACKAGES =+ "${PN}-src"
 PACKAGES += "${PN}-meta"
 PACKAGE_ARCH = "${MACHINE_ARCH}"
 
-inherit autotools-brokensep pkgconfig pythonnative
-
-do_unpack[noexec] = "1"
-do_patch[no_exec] = "1"
-do_populate_sysroot[noexec] = "1"
-do_populate_lic[noexec] = "1"
-do_packagedata[noexec] = "1"
-do_package_write_ipk[noexec] = "1"
-do_rm_work[noexec] = "1"
-do_rm_work_all[noexec] = "1"
+inherit autotools pkgconfig pythonnative
 
 ACLOCALDIR = "${B}/aclocal-copy"
 e2_copy_aclocal () {
@@ -47,44 +38,12 @@ bindir = "/usr/bin"
 sbindir = "/usr/sbin"
 
 EXTRA_OECONF = "\
-    EXTRA_OECONF = " \
-    BUILD_SYS=${BUILD_SYS} \
-    HOST_SYS=${HOST_SYS} \
-    STAGING_INCDIR=${STAGING_INCDIR} \
-    STAGING_LIBDIR=${STAGING_LIBDIR} \
-    --with-boxtype=${MACHINE} \
-    --with-machinebuild="${MACHINEBUILD}" \
-    --with-libsdl=no \
-    ${@bb.utils.contains("GST_VERSION", "1.0", "--with-gstversion=1.0", "", d)} \
+    --enable-maintainer-mode --with-target=native --with-libsdl=no --with-boxtype=${MACHINE} \
+    --enable-dependency-tracking \
     ${@bb.utils.contains("MACHINE_FEATURES", "textlcd", "--with-textlcd" , "", d)} \
     ${@bb.utils.contains("MACHINE_FEATURES", "colorlcd", "--with-colorlcd" , "", d)} \
-    ${@bb.utils.contains("MACHINE_FEATURES", "colorlcd128", "--with-colorlcd128" , "", d)} \
-    ${@bb.utils.contains("MACHINE_FEATURES", "colorlcd220", "--with-colorlcd220" , "", d)} \
-    ${@bb.utils.contains("MACHINE_FEATURES", "colorlcd400", "--with-colorlcd400" , "", d)} \
-    ${@bb.utils.contains("MACHINE_FEATURES", "colorlcd480", "--with-colorlcd480" , "", d)} \
-    ${@bb.utils.contains("MACHINE_FEATURES", "colorlcd720", "--with-colorlcd720" , "", d)} \
-    ${@bb.utils.contains("MACHINE_FEATURES", "colorlcd800", "--with-colorlcd800" , "", d)} \
-    ${@bb.utils.contains("MACHINE_FEATURES", "bwlcd128", "--with-bwlcd128" , "", d)} \
-    ${@bb.utils.contains("MACHINE_FEATURES", "bwlcd140", "--with-bwlcd140" , "", d)} \
-    ${@bb.utils.contains("MACHINE_FEATURES", "bwlcd255", "--with-bwlcd255" , "", d)} \
-    ${@bb.utils.contains("MACHINE_FEATURES", "fullgraphiclcd", "--with-fullgraphiclcd" , "", d)} \
-    ${@bb.utils.contains("MACHINE_FEATURES", "gigabluelcd", "--with-gigabluelcd" , "", d)} \
-    ${@bb.utils.contains("MACHINE_FEATURES", "nolcd", "--with-nolcd" , "", d)} \
-    ${@bb.utils.contains("TARGET_ARCH", "sh4", "--enable-sh=yes " , "", d)} \
-    ${@bb.utils.contains("MACHINE_FEATURES", "uianimation", "--with-libvugles2" , "", d)} \
-    ${@bb.utils.contains("MACHINE_FEATURES", "osdanimation", "--with-osdanimation" , "", d)} \
-    "
-
-LDFLAGS_prepend = "${@bb.utils.contains('GST_VERSION', '1.0', ' -lxml2 ', '', d)}"
-
-do_install_append() {
-    install -d ${D}/usr/share/keymaps
-}
-
-python populate_packages_prepend () {
-    enigma2_plugindir = bb.data.expand('${libdir}/enigma2/python/Plugins', d)
-    do_split_packages(d, enigma2_plugindir, '(.*?/.*?)/.*', 'enigma2-plugin-%s', '%s ', recursive=True, match_path=True, prepend=True, extra_depends="enigma2")
-}S} \
+    BUILD_SYS=${BUILD_SYS} \
+    HOST_SYS=${HOST_SYS} \
     STAGING_INCDIR=${STAGING_INCDIR} \
     STAGING_LIBDIR=${STAGING_LIBDIR} \
     "
diff --git a/lib/base/console.cpp b/lib/base/console.cpp
index 3e97200..e91ad9b 100644
--- a/lib/base/console.cpp
+++ b/lib/base/console.cpp
@@ -237,7 +237,7 @@ void eConsoleAppContainer::readyRead(int what)
 //		eDebug("[eConsoleAppContainer] readyRead what = %d", what);
 		char* buf = &buffer[0];
 		int rd;
-		while((rd = read(fd[0], buf, buffer.size())) > 0)
+		while((rd = read(fd[0], buf, buffer.size()-1)) > 0)
 		{
 			buf[rd]=0;
 			/*emit*/ dataAvail(std::make_pair(buf, rd));
@@ -276,7 +276,7 @@ void eConsoleAppContainer::readyErrRead(int what)
 //		eDebug("[eConsoleAppContainer] readyErrRead what = %d", what);
 		char* buf = &buffer[0];
 		int rd;
-		while((rd = read(fd[2], buf, buffer.size())) > 0)
+		while((rd = read(fd[2], buf, buffer.size()-1)) > 0)
 		{
 /*			for ( int i = 0; i < rd; i++ )
 				eDebug("[eConsoleAppContainer] %d = %c (%02x)", i, buf[i], buf[i] );*/
diff --git a/lib/base/eerror.cpp b/lib/base/eerror.cpp
index a900d0f..40affec 100644
--- a/lib/base/eerror.cpp
+++ b/lib/base/eerror.cpp
@@ -77,7 +77,7 @@ void DumpUnfreed()
 #endif
 
 int debugLvl = lvlDebug;
-static bool debugTime = true;
+static int debugTime = 3; // 0 = none, 1 = secs since boot, 2 = local time
 
 static pthread_mutex_t DebugLock = PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP;
 #define RINGBUFFER_SIZE 16384
@@ -136,21 +136,42 @@ extern void bsodFatal(const char *component);
 
 #define eDEBUG_BUFLEN    1024
 
-void eDebugImpl(int flags, const char* fmt, ...)
+int formatTime(char *buf, int bufferSize, int flags)
 {
-	char * buf = new char[eDEBUG_BUFLEN];
 	int pos = 0;
 	struct timespec tp;
 
-	if (debugTime && !(flags & _DBGFLG_NOTIME)) {
-		clock_gettime(CLOCK_MONOTONIC, &tp);
-		pos = snprintf(buf, eDEBUG_BUFLEN, "<%6lu.%03lu> ", tp.tv_sec, tp.tv_nsec/1000000);
+	if (!(flags & _DBGFLG_NOTIME)) {
+		if (debugTime & 1) {
+			clock_gettime(CLOCK_MONOTONIC, &tp);
+			pos += snprintf(buf, bufferSize, "<%6lu.%04lu> ", tp.tv_sec, tp.tv_nsec/100000);
+		}
+
+		if (debugTime & 2) {
+			struct tm loctime;
+			struct timeval tim;
+			gettimeofday(&tim, NULL);
+			localtime_r(&tim.tv_sec, &loctime);
+			pos += snprintf(buf + pos, bufferSize - pos, "%02d:%02d:%02d.%04lu ", 
+				loctime.tm_hour, loctime.tm_min, loctime.tm_sec, tim.tv_usec / 100L);
+		}
 	}
 
+	return pos;
+}
+
+void eDebugImpl(int flags, const char* fmt, ...)
+{
+	char * buf = new char[eDEBUG_BUFLEN];
+	struct timespec tp;
+
+	int pos = formatTime(buf, eDEBUG_BUFLEN, flags);
+
 	va_list ap;
 	va_start(ap, fmt);
 	int vsize = vsnprintf(buf + pos, eDEBUG_BUFLEN - pos, fmt, ap);
 	va_end(ap);
+
 	if (vsize < 0) {
 		vsize = 0;
 		pos += snprintf(buf + pos, eDEBUG_BUFLEN - pos, " Error formatting: %s", fmt);
@@ -162,8 +183,8 @@ void eDebugImpl(int flags, const char* fmt, ...)
 		// pos still contains size of timestring
 		// +2 for \0 and optional newline
 		buf = new char[pos + vsize + 2];
-		if (debugTime && !(flags & _DBGFLG_NOTIME))
-			pos = snprintf(buf, pos + vsize, "<%6lu.%03lu> ", tp.tv_sec, tp.tv_nsec/1000000);
+		pos = formatTime(buf, pos + vsize, flags);
+
 		va_start(ap, fmt);
 		vsize = vsnprintf(buf + pos, vsize + 1, fmt, ap);
 		va_end(ap);
@@ -195,7 +216,7 @@ void ePythonOutput(const char *string, int lvl)
 #endif
 }
 
-void setDebugTime(bool enable)
+void setDebugTime(int flags)
 {
-	debugTime = enable;
+	debugTime = flags;
 }
diff --git a/lib/components/tuxtxtapp.cpp b/lib/components/tuxtxtapp.cpp
index c1c10a9..1bb6d88 100644
--- a/lib/components/tuxtxtapp.cpp
+++ b/lib/components/tuxtxtapp.cpp
@@ -18,11 +18,7 @@ extern "C" void tuxtxt_handlePressedKey(int key);
 eAutoInitP0<eTuxtxtApp> init_eTuxtxtApp(eAutoInitNumbers::lowlevel, "Tuxtxt");
 eTuxtxtApp *eTuxtxtApp::instance = NULL;
 
-#if HAVE_AMLOGIC
-eTuxtxtApp::eTuxtxtApp() : pid(0), demux(0), enableTtCaching(false), uiRunning(false), messagePump(eApp, 0)
-#else
 eTuxtxtApp::eTuxtxtApp() : pid(0), enableTtCaching(false), uiRunning(false), messagePump(eApp, 0)
-#endif
 {
 	CONNECT(messagePump.recv_msg, eTuxtxtApp::recvEvent);
 	pthread_mutex_init( &cacheChangeLock, 0 );
diff --git a/lib/dvb/Makefile.inc b/lib/dvb/Makefile.inc
index d22e6dc..2da1450 100644
--- a/lib/dvb/Makefile.inc
+++ b/lib/dvb/Makefile.inc
@@ -76,8 +76,3 @@ dvbinclude_HEADERS = \
 	dvb/pmtparse.h \
 	dvb/encoder.h \
 	dvb/atsc.h
-
-if HAVE_AMLOGIC
-dvb_libenigma_dvb_a_SOURCES += dvb/amldecoder.cpp
-dvbinclude_HEADERS += dvb/amldecoder.h
-endif
diff --git a/lib/dvb/amldecoder.cpp b/lib/dvb/amldecoder.cpp
deleted file mode 100644
index c351c54..0000000
--- a/lib/dvb/amldecoder.cpp
+++ /dev/null
@@ -1,769 +0,0 @@
-/** @file
- * This file add support for Amlogic video decoding to enigma2
- * Copyright (C) 2015  Christian Ege <k4230r6@gmail.com>
- *
- * This file is part of Enigma2
- *
- * AMLDecocder is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation, either version 2 of the License, or
- * (at your option) any later version.
- *
- * AMLDecocder is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with AMLDecocder.  If not, see <http://www.gnu.org/licenses/>.
- */
-
-
-#include <lib/base/cfile.h>
-#include <lib/base/ebase.h>
-#include <lib/base/eerror.h>
-#include <lib/base/wrappers.h>
-// Modul includes
-#include <lib/dvb/amldecoder.h>
-// Project includes
-#include <lib/components/tuxtxtapp.h>
-
-// Kernel includes
-#include <linux/dvb/audio.h>
-#include <linux/dvb/video.h>
-#include <linux/dvb/dmx.h>
-
-// System includes
-#include <unistd.h>
-#include <fcntl.h>
-#include <sys/ioctl.h>
-#include <sys/types.h>
-#include <sys/stat.h>
-#include <errno.h>
-
-#include <pthread.h>
-
-
-extern "C" {
-#include <dvbcsa/dvbcsa.h>
-}
-
-
-#define PVR_P0                _IO('o', 100)
-#define PVR_P1                _IO('o', 101)
-#define PVR_P2                _IO('o', 102)
-#define PVR_P3                _IO('o', 103)
-#define PVR_P4                _IOR('o', 104, int)
-
-#define AVSYNC_VIDEO	0
-#define AVSYNC_AUDIO	1
-#define AVSYNC_PCR	2
-
-DEFINE_REF(eAMLTSMPEGDecoder);
-
-eAMLTSMPEGDecoder::eAMLTSMPEGDecoder(eDVBDemux *demux, int decoder)
-	: m_demux(demux),
-		m_vpid(-1), m_vtype(-1), m_apid(-1), m_atype(-1), m_pcrpid(-1), m_textpid(-1),
-		m_width(-1), m_height(-1), m_framerate(-1), m_aspect(-1), m_progressive(-1),
-		m_changed(0), m_decoder(decoder), m_radio_pic_on(0), m_video_clip_fd(-1),
-		aml_fd(-1), cntl_fd(-1), m_showSinglePicTimer(eTimer::create(eApp)), m_VideoRead(eTimer::create(eApp))
-{
-	eDebug("[eAMLTSMPEGDecoder] SETTING UP DECODER                   ------------ WETEK");
-	if (m_demux)
-		m_demux->connectEvent(sigc::mem_fun(*this, &eAMLTSMPEGDecoder::demux_event), m_demux_event_conn);
-	memset(&m_codec, 0, sizeof(codec_para_t ));
-	memset(&am_sysinfo, 0, sizeof(dec_sysinfo_t));
-	memset(&am_param, 0, sizeof(arm_audio_info));
-	m_codec.handle = -1;
-	CONNECT(m_showSinglePicTimer->timeout, eAMLTSMPEGDecoder::finishShowSinglePic);
-	CONNECT(m_VideoRead->timeout, eAMLTSMPEGDecoder::parseVideoInfo);
-	m_VideoRead->start(2000, false);
-
-	m_state = stateStop;
-	adec_handle = NULL;
-
-
-	if (m_demux && m_decoder == 0)	// Tuxtxt caching actions only on primary decoder
-		eTuxtxtApp::getInstance()->initCache();
-
-	cntl_fd = ::open("/dev/amvideo",  O_RDWR);
-}
-
-eAMLTSMPEGDecoder::~eAMLTSMPEGDecoder()
-{
-	eDebug("[eAMLTSMPEGDecoder] CLOSING DONW DECODER                   ------------ WETEK");
-	if (m_radio_pic_on)
-		finishShowSinglePic();
-	if (m_state == statePause) {
-		if (adec_handle)
-			audio_decode_resume(adec_handle);
-		
-		if ((m_vpid >= 0) && (m_vpid < 0x1FFF) && aml_fd >= 0)	 
-			::ioctl(aml_fd, AMSTREAM_IOC_VPAUSE, 0);
-		
-		if (m_demux && m_demux->m_pvr_fd >= 0)
-			::ioctl(m_demux->m_pvr_fd, PVR_P3);
-	}
-
- 	m_vpid = m_apid = m_pcrpid = m_textpid = pidNone;
-	m_changed = -1;
-	setState();
-
-	if (m_demux && m_decoder == 0)	// Tuxtxt caching actions only on primary decoder
-		eTuxtxtApp::getInstance()->freeCache();
-
-	if (adec_handle)
-	{
-		audio_decode_stop(adec_handle);
-		audio_decode_release(&adec_handle);
-	}
-	adec_handle = NULL;
-	if (aml_fd >= 0) {
-		eDebug("[eAMLTSMPEGDecoder::destructor] closing aml_fd=%d   --------- WETEK !!!!!", aml_fd);
-		close(aml_fd);
-	}
-
-	if (cntl_fd >= 0)
-		close(cntl_fd);
-	setAvsyncEnable(0);
-	//setSyncMode(AVSYNC_VIDEO);
-}
-
-
-int eAMLTSMPEGDecoder::setState()
-{
-	int res = 0;
-	int nott = (m_state != statePlay) && (m_state != statePause);
-	if ((nott && m_text) || (!m_text && !nott))
-		m_changed |= changeText | changeState;
-
-	eDebug("[eAMLTSMPEGDecoder::setState] vpid=%d, apid=%d", m_vpid, m_apid);
-	if (m_changed & changeText)
-	{
-		if (m_text)
-		{
-			m_text->stop();
-			if (m_demux && m_decoder == 0)  // Tuxtxt caching actions only on primary decoder
-				eTuxtxtApp::getInstance()->stopCaching();
-		}
-		m_text = 0;
-	}
-
-	if (m_changed & changeText)
-	{
-		if ((m_textpid >= 0) && (m_textpid < 0x1FFF) && !nott)
-		{
-			m_text = new eDVBTText(m_demux, m_decoder);
-			if (m_text->startPid(m_textpid))
-				res = -1;
-	
-			if (m_demux && m_decoder == 0)  // Tuxtxt caching actions only on primary decoder
-			{
-				uint8_t demux = 0;
-				m_demux->getCADemuxID(demux);
-				eTuxtxtApp::getInstance()->startCaching(m_textpid, demux);
-			}
-		}
-		else if (m_demux && m_decoder == 0)     // Tuxtxt caching actions only on primary decoder
-			eTuxtxtApp::getInstance()->resetPid();
-	
-		m_changed &= ~changeText;
-	}
-
-	return res;
-}
-
-int eAMLTSMPEGDecoder::m_pcm_delay=-1,
-	eAMLTSMPEGDecoder::m_ac3_delay=-1;
-
-RESULT eAMLTSMPEGDecoder::setHwPCMDelay(int delay)
-{
-	return 0;
-}
-
-RESULT eAMLTSMPEGDecoder::setHwAC3Delay(int delay)
-{
-	return 0;
-}
-
-
-RESULT eAMLTSMPEGDecoder::setPCMDelay(int delay)
-{
-	return m_decoder == 0 ? setHwPCMDelay(delay) : -1;
-}
-
-RESULT eAMLTSMPEGDecoder::setAC3Delay(int delay)
-{
-	return m_decoder == 0 ? setHwAC3Delay(delay) : -1;
-}
-
-
-RESULT eAMLTSMPEGDecoder::setVideoPID(int vpid, int type)
-{
-	if (m_vpid != vpid || m_vtype != type)
-	{
-		m_changed |= changeVideo;
-		m_vpid = vpid;
-		m_vtype = type;
-		m_codec.video_type = VFORMAT_MPEG12;
-		std::string t;
-		switch (type)
-		{
-			default:
-			case MPEG1:
-			case MPEG2:
-				t = "MPEG1/2";
-				break;
-			case MPEG4_H264:
-				m_codec.video_type = VFORMAT_H264;
-				t = "MPEG4 H264";
-				break;
-			case MPEG4_Part2:
-				m_codec.video_type = VFORMAT_MPEG4;
-				t = "MPEG4 Part2";
-				break;
-			case H265_HEVC:
-				m_codec.video_type = VFORMAT_HEVC;
-				t = "H265 HEVC";
-				break;
- 		}
- 		eDebug("[eAMLTSMPEGDecoder::setVideoPID] vpid=%d, type=%d %s", vpid, type, t.c_str());
-#if HAVE_ALIEN5
-		aml_change_vpid(vpid, m_codec.video_type);
-#endif
-	}
-	return 0;
-}
-
-RESULT eAMLTSMPEGDecoder::setAudioPID(int apid, int type)
-{
-	/* do not set an audio pid on decoders without audio support */
-	if (m_apid != apid || m_atype != type)
-	{
-		m_changed |= changeAudio;
-		m_atype = type;
-		m_apid = apid;
-
-		m_codec.audio_type = AFORMAT_MPEG;
-		std::string t;
-		switch (type)
-		{
-			default:
-			case aMPEG:
-				t = "MPEG";
-				break;
-			case aAC3:
-				m_codec.audio_type = AFORMAT_AC3;
-				t = "AC3";
-				break;
-			case aAAC:
-				m_codec.audio_type = AFORMAT_AAC;
-				t = "AAC";
-				break;
-			case aDTS:
-				m_codec.audio_type = AFORMAT_DTS;
-				t = "DTS";
-				break;
-			case aAACHE:
-				m_codec.audio_type = AFORMAT_AAC_LATM;
-				t = "AAC_LATM";
-				break;
-		}
-		eDebug("[eAMLTSMPEGDecoder::setAudioPID] apid=%d, type=%d %s", apid, type, t.c_str());
-
-		if (aml_fd >= 0)
-		{
-			audio_decode_stop(adec_handle);
-			audio_decode_release(&adec_handle);
-
-			if (::ioctl(aml_fd, AMSTREAM_IOC_AID, 0xffff) < 0)
-				eDebug("[eAMLTSMPEGDecoder::setAudioPID] reset audio pid failed");
-			if (::ioctl(aml_fd, AMSTREAM_IOC_AFORMAT, m_codec.audio_type) < 0)
-				eDebug("[eAMLTSMPEGDecoder::setAudioPID] set audio format failed");
-			if (::ioctl(aml_fd, AMSTREAM_IOC_AID, m_apid) < 0)
-				eDebug("[eAMLTSMPEGDecoder::setAudioPID] set audio PID failed");
-			if (::ioctl(aml_fd, AMSTREAM_IOC_SAMPLERATE, 48000) < 0)
-				eDebug("[eAMLTSMPEGDecoder::setAudioPID] set AMSTREAM_IOC_SAMPLERATE failed");
-			if (::ioctl(aml_fd, AMSTREAM_IOC_ACHANNEL, 2) < 0)
-				eDebug("[eAMLTSMPEGDecoder::setAudioPID] set AMSTREAM_IOC_ACHANNEL failed");
-			/*reset audio*/
-			if(::ioctl(aml_fd, AMSTREAM_IOC_AUDIO_RESET, 0) < 0)
-				eDebug("[eAMLTSMPEGDecoder::setAudioPID] audio reset failed");                         
-			audio_decode_init(&adec_handle, &am_param);                                                     
-		}
-	}
-	return 0;
-}
-
-int eAMLTSMPEGDecoder::m_audio_channel = -1;
-
-RESULT eAMLTSMPEGDecoder::setAudioChannel(int channel)
-{
-	if (channel == -1)
-		channel = ac_stereo;
-	return 0;
-}
-
-int eAMLTSMPEGDecoder::getAudioChannel()
-{
-	return m_audio_channel == -1 ? ac_stereo : m_audio_channel;
-}
-
-RESULT eAMLTSMPEGDecoder::setSyncPCR(int pcrpid)
-{
-	eDebug("[eAMLTSMPEGDecoder::setSyncPCR] pcrpid=%d", pcrpid);
-	m_pcrpid = pcrpid;
-
-	return 0;
-}
-
-RESULT eAMLTSMPEGDecoder::setTextPID(int textpid)
-{
-	eDebug("[eAMLTSMPEGDecoder::setTextPID] textpid=%d", textpid);
-	if (m_textpid != textpid)
-	{
-		m_changed |= changeText;
-		m_textpid = textpid;
-	}
-	return 0;
-}
-
-RESULT eAMLTSMPEGDecoder::setSyncMaster(int who)
-{
-	return 0;
-}
-
-RESULT eAMLTSMPEGDecoder::set()
-{
-	return setState();
-}
-
-int eAMLTSMPEGDecoder::osdBlank(int cmd)
-{
-	int fd;
-	char *path = "/sys/class/video/blackout_policy";
-	char  bcmd[16];
-	eDebug("[eAMLTSMPEGDecoder::osdBlank] cmd=%d", cmd);
-	fd = ::open(path, O_CREAT|O_RDWR | O_TRUNC, 0644);
-	if (fd >= 0) {
-		sprintf(bcmd, "%d", cmd);
-		write(fd, bcmd, strlen(bcmd));
-		close(fd);
-		return 0;
-	}
-
-	return -1;
-}
-
-int eAMLTSMPEGDecoder::setAvsyncEnable(int enable)
-{
-	int fd;
-	char *path = "/sys/class/tsync/enable";
-	char  bcmd[16];
-	eDebug("[eAMLTSMPEGDecoder::setAvsyncEnable] enable=%d", enable);
-	fd = ::open(path, O_CREAT | O_RDWR | O_TRUNC, 0644);
-	if (fd >= 0) {
-		sprintf(bcmd, "%d", enable);
-		write(fd, bcmd, strlen(bcmd));
-		close(fd);
-		return 0;
-	}
-
-	return -1;
-}
-
-int eAMLTSMPEGDecoder::setSyncMode(int mode)
-{
-	int fd;
-	char *path = "/sys/class/tsync/mode";
-	char  bcmd[16];
-	eDebug("[eAMLTSMPEGDecoder::setSyncMode] mode=%d", mode);
-	fd = ::open(path, O_CREAT | O_RDWR | O_TRUNC, 0644);
-	if (fd >= 0) {
-		sprintf(bcmd, "%d", mode);
-		write(fd, bcmd, strlen(bcmd));
-		close(fd);
-		return 0;
-	}
-	return -1;
-}
-
-
-RESULT eAMLTSMPEGDecoder::play()
-{
-	if (m_state == stateStop)
-	{
-		if ( (m_apid >= 0 && m_apid < 0x1FFF) &&
-			 ((m_vpid >= 0 && m_vpid < 0x1FFF) || m_radio_pic.length()))
-		{
-
-			/* reuse osdBlank for blackout_policy test    */
-			/* arg. value:				      */
-			/*  1 - on channel change put black frame     */
-			/*  0 - on channel change keep previous frame */
-			osdBlank(0);
-
-			if (m_radio_pic.length())
-				showSinglePic(m_radio_pic.c_str());
-
-			if (m_radio_pic_on)
-				finishShowSinglePic();
-
-			if (m_vpid >= 0 && m_vpid < 0x1FFF)
-				osdBlank(1);
-			if (aml_fd >= 0) {
-				close(aml_fd);
-				eDebug("[eAMLTSMPEGDecoder::play] WARNING  amstream_mpts already open, closed   --------- WETEK !!!!!");
-			}
-			aml_fd = ::open("/dev/amstream_mpts",  O_RDWR);
-			if (aml_fd < 0)
-				eDebug("[eAMLTSMPEGDecoder::play] Amlogic CODEC open failed  !!!!!");
-			else
-			{
-				eDebug("[eAMLTSMPEGDecoder::play] Amlogic CODEC open success apid=%d vpid=%d!!!!!", m_apid, m_vpid);
-				setAvsyncEnable(m_demux ? (m_demux->getSource() == -1 ? 1 : 0) : 0);
-
-				if (m_vpid >= 0 && m_vpid < 0x1FFF)
-				{
-					if (::ioctl(aml_fd, AMSTREAM_IOC_VFORMAT, m_codec.video_type) < 0)
-						eDebug("[eAMLTSMPEGDecoder::play] set video format %d failed", m_codec.video_type);
-					if (::ioctl(aml_fd, AMSTREAM_IOC_VID, m_vpid) < 0)
-						eDebug("[eAMLTSMPEGDecoder::play] set video PID %d failed", m_vpid);
-					if (::ioctl(aml_fd, AMSTREAM_IOC_SYSINFO, (unsigned long)&am_sysinfo) < 0)
-						eDebug("[eAMLTSMPEGDecoder::play] set AMSTREAM_IOC_SYSINFO failed");
-				}
-				if (m_apid >= 0 && m_apid < 0x1FFF)
-				{
-					if (::ioctl(aml_fd, AMSTREAM_IOC_AFORMAT, m_codec.audio_type) < 0)
-						eDebug("[eAMLTSMPEGDecoder::play] set audio format %d failed", m_codec.audio_type);
-					if (::ioctl(aml_fd, AMSTREAM_IOC_AID, m_apid) < 0)
-						eDebug("[eAMLTSMPEGDecoder::play] set audio PID %d failed", m_apid);
-					if (::ioctl(aml_fd, AMSTREAM_IOC_SAMPLERATE, 48000) < 0)
-						eDebug("[eAMLTSMPEGDecoder::play] set AMSTREAM_IOC_SAMPLERATE failed");
-					if (::ioctl(aml_fd, AMSTREAM_IOC_ACHANNEL, 2) < 0)
-						eDebug("[eAMLTSMPEGDecoder::play] set AMSTREAM_IOC_ACHANNEL failed");
-				}
-				if (m_pcrpid >= 0 && m_pcrpid < 0x1FFF)
-				{
-					if(::ioctl(aml_fd, AMSTREAM_IOC_PCRID, m_pcrpid) < 0)
-						eDebug("[eAMLTSMPEGDecoder::play] set PCR PID %d failed", m_pcrpid);
-					//setSyncMode(AVSYNC_PCR);
-				}
-				//else
-					//setSyncMode(AVSYNC_VIDEO);
-
-				setAvsyncEnable((m_apid >= 0 && m_apid < 0x1FFF && m_vpid >= 0 && m_vpid < 0x1FFF) ? 1 : 0);
-
-				// Tell the kernel on which adapter we want HW CSA/LiveTV
-				// If dvr (i.e fesource == -1) use demux 2, otherwise demux = fesource
-				if (::ioctl(aml_fd, AMSTREAM_IOC_SET_DEMUX, (unsigned long) (m_demux ? (m_demux->getSource() == -1 ? 2 : m_demux->getSource()) : 0)) < 0)
-					eDebug("[eAMLTSMPEGDecoder::play] set AMSTREAM_IOC_SET_DEMUX failed");
-
-				am_param.channels = 2;
-				am_param.sample_rate = 48000;
-				am_param.handle = aml_fd;
-				am_param.format = m_codec.audio_type;
-				audio_decode_init(&adec_handle, &am_param);
-				//audio_set_av_sync_threshold(adec_handle, 60);
-				if (cntl_fd >= 0 && m_demux && m_demux->getSource() != -1) {
-					if(::ioctl(cntl_fd, AMSTREAM_IOC_AVTHRESH, (unsigned long)90000 * 30 ) < 0)
-						eDebug("[eAMLTSMPEGDecoder::play] set AMSTREAM_IOC_AVTHRESH failed");
-					if(::ioctl(cntl_fd, AMSTREAM_IOC_SYNCTHRESH, (unsigned long) 0) < 0)
-						eDebug("[eAMLTSMPEGDecoder::play] set AMSTREAM_IOC_SYNCTHRESH failed");                                                 
-				}
-				else
-					eDebug("[eAMLTSMPEGDecoder::play] cntl_fd NULL or PVR mode");
-
-
-				if (::ioctl(aml_fd, AMSTREAM_IOC_PORT_INIT, 0) < 0)
-					eDebug("[eAMLTSMPEGDecoder::play] amport init failed");
-				if (::ioctl(aml_fd, AMSTREAM_IOC_TS_SKIPBYTE, 0) < 0)
-					eDebug("[eAMLTSMPEGDecoder::play] set ts skipbyte failed");
-				m_state = statePlay;
-			}
-		}
-		else
-			eDebug("[eAMLTSMPEGDecoder::play] Invalid PIDs given, not started !!!!!");
-	}
-	else if (m_state == statePause) {
-		eDebug("[eAMLTSMPEGDecoder::play] resume from pause");
-		audio_decode_resume(adec_handle);
-
-		if (m_vpid >= 0 && m_vpid < 0x1FFF)  
-			::ioctl(aml_fd, AMSTREAM_IOC_VPAUSE, 0);
-
-		if (m_demux && m_demux->m_pvr_fd >= 0)
-			::ioctl(m_demux->m_pvr_fd, PVR_P3);
-		m_state = statePlay;
-	}
-	return setState();
-}
-
-RESULT eAMLTSMPEGDecoder::pause()
-{
-	struct adec_status adec;
-
-	if (m_state == statePause)
-		return 0;
-
-	eDebug("[eAMLTSMPEGDecoder::pause] goto pause");
-
-	if (m_demux && m_demux->m_pvr_fd >= 0)
-		::ioctl(m_demux->m_pvr_fd, PVR_P0);
-	audio_decode_pause(adec_handle);
-	if (m_vpid >= 0 && m_vpid < 0x1FFF)  
-		::ioctl(aml_fd, AMSTREAM_IOC_VPAUSE, 1);
-
-	m_state = statePause;
-	return setState();
-}
-
-RESULT eAMLTSMPEGDecoder::setFastForward(int frames_to_skip)
-{
-	// fast forward is only possible if video data is present
-	if (!m_codec.has_video)
-		return -1;
-
-	return 0;
-}
-
-RESULT eAMLTSMPEGDecoder::setSlowMotion(int repeat)
-{
-	// slow motion is only possible if video data is present
-	if (!m_codec.has_video)
-		return -1;
-
-	return 0;
-}
-
-RESULT eAMLTSMPEGDecoder::setTrickmode()
-{
-	if (!m_codec.has_video)
-		return -1;
-
-	return 0;
-}
-
-RESULT eAMLTSMPEGDecoder::flush()
-{
-	return 0;
-}
-
-void eAMLTSMPEGDecoder::demux_event(int event)
-{
-	switch (event)
-	{
-	case eDVBDemux::evtFlush:
-		flush();
-		break;
-	default:
-		break;
-	}
-}
-
-RESULT eAMLTSMPEGDecoder::getPTS(int what, pts_t &pts)
-{
-	unsigned int aml_pts;
-
-	if (aml_fd >= 0)
-	{                       
-		if (::ioctl(aml_fd, AMSTREAM_IOC_PCRSCR, (unsigned long)&aml_pts) >= 0) 
-		{
-			pts = aml_pts;
-			return 0;
-		}
-	}
-	return -1;
-}
-
-RESULT eAMLTSMPEGDecoder::setRadioPic(const std::string &filename)
-{
-	eDebug("[eAMLTSMPEGDecoder::setRadioPic] %s", filename.c_str());
-	m_radio_pic = filename;
-	return 0;
-}
-
-RESULT eAMLTSMPEGDecoder::showSinglePic(const char *filename)
-{
-	if (m_decoder == 0)
-	{
-		eDebug("[eAMLTSMPEGDecoder::showSinglePic] %s", filename);
-		int f = open(filename, O_RDONLY);
-		if (f >= 0)
-		{
-			int ret;
-			struct stat s;
-			fstat(f, &s);
-
-			m_codec.has_video = 1;
-			m_codec.has_audio = 0;
-			m_codec.stream_type = STREAM_TYPE_ES_VIDEO;
-			ret = codec_init(&m_codec);
-    			if (ret == CODEC_ERROR_NONE)
-			{
-				bool seq_end_avail = false;
-				size_t pos=0;
-				unsigned char pes_header[] = { 0x00, 0x00, 0x01, 0xE0, 0x00, 0x00, 0x80, 0x80, 0x05, 0x21, 0x00, 0x01, 0x00, 0x01 };
-				unsigned char seq_end[] = { 0x00, 0x00, 0x01, 0xB7 };
-				unsigned char iframe[s.st_size];
-				unsigned char stuffing[8192];
-				memset(stuffing, 0, 8192);
-				read(f, iframe, s.st_size);
-
-				setAvsyncEnable(0);
-				m_radio_pic_on = 1;
-
-				while(pos <= (s.st_size-4) && !(seq_end_avail = (!iframe[pos] && !iframe[pos+1] && iframe[pos+2] == 1 && iframe[pos+3] == 0xB7)))
-					++pos;
-				if ((iframe[3] >> 4) != 0xE) // no pes header
-					writeAll(m_codec.handle, pes_header, sizeof(pes_header));
-				else
-					iframe[4] = iframe[5] = 0x00;
-				writeAll(m_codec.handle, iframe, s.st_size);
-				if (!seq_end_avail)
-					write(m_codec.handle, seq_end, sizeof(seq_end));
-				writeAll(m_codec.handle, stuffing, 8192);
-#if not defined(__sh__)
-				m_showSinglePicTimer->start(150, true);
-#endif
-			}
-			close(f);
-		}
-		else
-		{
-			eDebug("[eAMLTSMPEGDecoder::showSinglePic] couldnt open %s: %m", filename);
-			return -1;
-		}
-	}
-	else
-	{
-		eDebug("[eAMLTSMPEGDecoder::showSinglePic] only show single pics on first decoder");
-		return -1;
-	}
-
-	return 0;
-}
-
-void eAMLTSMPEGDecoder::finishShowSinglePic()
-{
-	int ret;
-	struct buf_status vbuf;
-
-	if (m_codec.handle >= 0 && m_radio_pic_on) {
-		do {
-			ret = codec_get_vbuf_state(&m_codec, &vbuf);
-			if (ret != 0)
-				goto error;
-		} while (vbuf.data_len > 0x100);
-error:
-		usleep(200000);
-		codec_close(&m_codec);
-		m_radio_pic_on = 0;
-	}
-}
-
-void eAMLTSMPEGDecoder::parseVideoInfo()
-{
-	if (m_width == -1 || m_height == -1)
-	{
-		int x, y;
-		CFile::parseIntHex(&x, "/proc/stb/vmpeg/0/xres");
-		CFile::parseIntHex(&y, "/proc/stb/vmpeg/0/yres");
-
-		if (x > 0 && y > 0) {
-			struct iTSMPEGDecoder::videoEvent event;
-			CFile::parseInt(&m_aspect, "/proc/stb/vmpeg/0/aspect");
-			event.type = iTSMPEGDecoder::videoEvent::eventSizeChanged;
-			m_aspect = event.aspect = m_aspect == 1 ? 2 : 3;  // convert dvb api to etsi
-			m_height = event.height = y;
-			m_width = event.width = x;
-			video_event(event);
-			eDebug("[eAMLTSMPEGDecoder::parseVideoInfo] width=%d height=%d aspect=%d", m_width, m_height, m_aspect);
-		}
-	}
-	if (m_width > 0 && m_framerate == -1)
-	{
-		struct iTSMPEGDecoder::videoEvent event;
-		CFile::parseInt(&m_framerate, "/proc/stb/vmpeg/0/framerate");
-		event.type = iTSMPEGDecoder::videoEvent::eventFrameRateChanged;
-		event.framerate = m_framerate;
-		video_event(event);
-		eDebug("[eAMLTSMPEGDecoder::parseVideoInfo] framerate=%d", m_framerate);
-	}
-	if (m_width > 0 && m_progressive == -1)
-	{
-		CFile::parseIntHex(&m_progressive, "/proc/stb/vmpeg/0/progressive");
-		if (m_progressive != 2)
-		{
-			struct iTSMPEGDecoder::videoEvent event;
-			event.type = iTSMPEGDecoder::videoEvent::eventProgressiveChanged;
-			event.progressive = m_progressive;
-			video_event(event);
-			eDebug("[eAMLTSMPEGDecoder::parseVideoInfo] progressive=%d", m_progressive);
-		}
-	}
-}
-
-RESULT eAMLTSMPEGDecoder::connectVideoEvent(const sigc::slot1<void, struct videoEvent> &event, ePtr<eConnection> &conn)
-{
-	conn = new eConnection(this, m_video_event.connect(event));
-	return 0;
-}
-
-void eAMLTSMPEGDecoder::video_event(struct videoEvent event)
-{
-	/* emit */ m_video_event(event);
-}
-
-int eAMLTSMPEGDecoder::getVideoWidth()
-{
-	int m_width = -1;
-	CFile::parseIntHex(&m_width, "/proc/stb/vmpeg/0/xres");
-	if (!m_width)
-		return -1;
-	eDebug("[eAMLTSMPEGDecoder::getVideoWidth] %d", m_width);
-	return m_width;
-}
-
-int eAMLTSMPEGDecoder::getVideoHeight()
-{
-	int m_height = -1;
-	CFile::parseIntHex(&m_height, "/proc/stb/vmpeg/0/yres");
-	if (!m_height)
-		return -1;
-	eDebug("[eAMLTSMPEGDecoder::getVideoHeight] %d", m_height);
-	return m_height;
-}
-
-int eAMLTSMPEGDecoder::getVideoProgressive()
-{
-	int m_progressive = -1;
-	CFile::parseIntHex(&m_progressive, "/proc/stb/vmpeg/0/progressive");
-	if (m_progressive == 2)
-		return -1;
-	return m_progressive;
-}
-
-int eAMLTSMPEGDecoder::getVideoFrameRate()
-{
-	int m_framerate = -1;
-	CFile::parseInt(&m_framerate, "/proc/stb/vmpeg/0/framerate");
-	return m_framerate;
-}
-
-int eAMLTSMPEGDecoder::getVideoAspect()
-{
-	int m_aspect = -1;
-	CFile::parseInt(&m_aspect, "/proc/stb/vmpeg/0/aspect");
-	if (!m_aspect)
-		return -1;
-
-	return m_aspect == 1 ? 2 : 3;
-}
-
-int eAMLTSMPEGDecoder::getVideoGamma()
-{
-	//if (m_video)
-	//	return m_video->getGamma();
-	return -1;
- }
diff --git a/lib/dvb/amldecoder.h b/lib/dvb/amldecoder.h
deleted file mode 100644
index 02d27d7..0000000
--- a/lib/dvb/amldecoder.h
+++ /dev/null
@@ -1,149 +0,0 @@
-/** @file
- * This file add support for Amlogic video decoding to enigma2
- * Copyright (C) 2015  Christian Ege <k4230r6@gmail.com>
- *
- * This file is part of Enigma2
- *
- * AMLDecocder is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation, either version 2 of the License, or
- * (at your option) any later version.
- *
- * AMLDecocder is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with AMLDecocder.  If not, see <http://www.gnu.org/licenses/>.
- */
-
-#ifndef __amldecoder_h
-#define __amldecoder_h
-
-#include <lib/base/object.h>
-#include <lib/dvb/demux.h>
-#include <lib/dvb/decoder.h>
-// Amlogic includes
-extern "C" {
-#include <codec.h>
-#include <adec-external-ctrl.h>
-#define AMSTREAM_IOC_MAGIC  'S'
-#define AMSTREAM_IOC_PCRID  _IOW(AMSTREAM_IOC_MAGIC, 0x4f, int)
-}
-
-class eSocketNotifier;
-
-
-class eAMLTSMPEGDecoder: public sigc::trackable, public iTSMPEGDecoder
-{
-	DECLARE_REF(eAMLTSMPEGDecoder);
-private:
-	static int m_pcm_delay;
-	static int m_ac3_delay;
-	static int m_audio_channel;
-	std::string m_radio_pic;
-	ePtr<eDVBDemux> m_demux;
-	ePtr<eDVBTText> m_text;
-	int m_vpid, m_vtype, m_apid, m_atype, m_pcrpid, m_textpid;
-	int m_width, m_height, m_framerate, m_aspect, m_progressive;
-	int aml_fd;
-	int cntl_fd;
-	enum
-	{
-		changeVideo = 1,
-		changeAudio = 2,
-		changePCR   = 4,
-		changeText  = 8,
-		changeState = 16,
-	};
-	int m_changed, m_decoder;
-	int m_radio_pic_on;
-	int m_state;
-	int m_ff_sm_ratio;
-	bool m_has_audio;
-	int setState();
-	ePtr<eConnection> m_demux_event_conn;
-	ePtr<eConnection> m_video_event_conn;
-
-
-	void demux_event(int event);
-	void video_event(struct videoEvent);
-	sigc::signal1<void, struct videoEvent> m_video_event;
-	int m_video_clip_fd;
-	ePtr<eTimer> m_showSinglePicTimer;
-	void finishShowSinglePic(); // called by timer
-	ePtr<eTimer> m_VideoRead;	
-	void parseVideoInfo(); // called by timer
-	
-	//Amcodec related
-
-	int m_axis[8];
-
-	int osdBlank(int cmd);
-	int setAvsyncEnable(int enable);
-	int setSyncMode(int mode);
-	codec_para_t m_codec;
-	dec_sysinfo_t am_sysinfo;
-	arm_audio_info am_param;
-	void *adec_handle;
-
-public:
-	enum { aMPEG, aAC3, aDTS, aAAC, aAACHE, aLPCM, aDTSHD, aDDP,UNKNOWN = -1, MPEG2=0, MPEG4_H264, VC1 = 3, MPEG4_Part2, VC1_SM, MPEG1, H265_HEVC, AVS = 16 };
-	enum { pidNone = -1 };
-	eAMLTSMPEGDecoder(eDVBDemux *demux, int decoder);
-	virtual ~eAMLTSMPEGDecoder();
-	RESULT setVideoPID(int vpid, int type);
-	RESULT setAudioPID(int apid, int type);
-	RESULT setAudioChannel(int channel);
-	int getAudioChannel();
-	RESULT setPCMDelay(int delay);
-	int getPCMDelay() { return m_pcm_delay; }
-	RESULT setAC3Delay(int delay);
-	int getAC3Delay() { return m_ac3_delay; }
-	RESULT setSyncPCR(int pcrpid);
-	RESULT setTextPID(int textpid);
-	RESULT setSyncMaster(int who);
-
-		/*
-		The following states exist:
-
-		 - stop: data source closed, no playback
-		 - pause: data source active, decoder paused
-		 - play: data source active, decoder consuming
-		 - decoder fast forward: data source linear, decoder drops frames
-		 - trickmode, highspeed reverse: data source fast forwards / reverses, decoder just displays frames as fast as it can
-		 - slow motion: decoder displays frames multiple times
-		*/
-	enum {
-		stateStop,
-		statePause,
-		statePlay,
-		stateDecoderFastForward,
-		stateTrickmode,
-		stateSlowMotion
-	};
-	RESULT set(); /* just apply settings, keep state */
-	RESULT play(); /* -> play */
-	RESULT pause(); /* -> pause */
-	RESULT setFastForward(int frames_to_skip); /* -> decoder fast forward */
-	RESULT setSlowMotion(int repeat); /* -> slow motion **/
-	RESULT setTrickmode(); /* -> highspeed fast forward */
-
-	RESULT flush();
-	RESULT showSinglePic(const char *filename);
-	RESULT setRadioPic(const std::string &filename);
-		/* what 0=auto, 1=video, 2=audio. */
-	RESULT getPTS(int what, pts_t &pts);
-	RESULT connectVideoEvent(const sigc::slot1<void, struct videoEvent> &event, ePtr<eConnection> &connection);
-	int getVideoWidth();
-	int getVideoHeight();
-	int getVideoProgressive();
-	int getVideoFrameRate();
-	int getVideoAspect();
-	int getVideoGamma();
-	static RESULT setHwPCMDelay(int delay);
-	static RESULT setHwAC3Delay(int delay);
-};
-
-#endif
diff --git a/lib/dvb/cablescan.cpp b/lib/dvb/cablescan.cpp
index 76f29d3..17ae78f 100644
--- a/lib/dvb/cablescan.cpp
+++ b/lib/dvb/cablescan.cpp
@@ -3,6 +3,8 @@
 #include <dvbsi++/cable_delivery_system_descriptor.h>
 #include <dvbsi++/ca_identifier_descriptor.h>
 #include <dvbsi++/logical_channel_descriptor.h>
+#include <dvbsi++/service_list_descriptor.h>
+#include <dvbsi++/network_name_descriptor.h>
 
 #include <lib/dvb/db.h>
 #include <lib/dvb/dvb.h>
@@ -14,7 +16,7 @@
 
 DEFINE_REF(eCableScan);
 
-eCableScan::eCableScan(int networkid, unsigned int frequency, unsigned int symbolrate, int modulation, bool originalnumbering, bool hdlist)
+eCableScan::eCableScan(int networkid, unsigned int frequency, unsigned int symbolrate, int modulation, bool originalnumbering, bool hdlist, bool networkname)
 {
 	networkId = networkid;
 	initialFrequency = frequency;
@@ -22,6 +24,7 @@ eCableScan::eCableScan(int networkid, unsigned int frequency, unsigned int symbo
 	initialModulation = modulation;
 	originalNumbering = originalnumbering;
 	hdList = hdlist;
+	useNetworkName = networkname;
 }
 
 eCableScan::~eCableScan()
@@ -35,6 +38,9 @@ void eCableScan::start(int frontendid)
 	eDVBResourceManager::getInstance(res);
 	ePtr<iDVBFrontend> fe;
 
+	serviceIdToTsid.clear();
+	providerName = "";
+
 	if (res->allocateRawChannel(m_channel, frontendid))
 	{
 		eDebug("[eCableScan] failed to allocate channel!");
@@ -94,6 +100,7 @@ void eCableScan::SDTReady(int error)
 int eCableScan::nextChannel()
 {
 	ePtr<iDVBFrontend> fe;
+	int tsid;
 
 	m_SDT = NULL;
 
@@ -106,7 +113,8 @@ int eCableScan::nextChannel()
 
 	scanProgress(100 - (scanChannels.size() * 90) / totalChannels);
 
-	currentScanChannel = scanChannels.front();
+	currentScanChannel = scanChannels.front().feparm;
+	tsid = scanChannels.front().tsid;
 	scanChannels.pop_front();
 
 	if (m_channel->getFrontend(fe))
@@ -121,16 +129,7 @@ int eCableScan::nextChannel()
 
 	m_SDT = new eTable<ServiceDescriptionSection>;
 	CONNECT(m_SDT->tableReady, eCableScan::SDTReady);
-	eDVBTableSpec spec = eDVBSDTSpec();
-	/*
-	 * limit the SDT timeout to 5s (e2 defaults to 60s),
-	 * so we do not have to wait for too long when channels
-	 * from the NIT are not available.
-	 * We should actually implement a channel statechange handler
-	 * (to receive tune failed status) but limiting the SDT reader
-	 * timeout has the same effect, and is a lot simpler
-	 */
-	spec.timeout = 5000;
+	eDVBTableSpec spec = eDVBSDTSpec(tsid);
 	m_SDT->start(m_demux, spec);
 	return 0;
 }
@@ -140,6 +139,22 @@ void eCableScan::parseNIT()
 	std::vector<NetworkInformationSection*>::const_iterator i;
 	for (i = m_NIT->getSections().begin(); i != m_NIT->getSections().end(); ++i)
 	{
+		if (useNetworkName && providerName == "")
+		{
+			for (DescriptorConstIterator desc = (*i)->getDescriptors()->begin();
+					desc != (*i)->getDescriptors()->end(); ++desc)
+			{
+				switch ((*desc)->getTag())
+				{
+				case NETWORK_NAME_DESCRIPTOR:
+				{
+					NetworkNameDescriptor &d = (NetworkNameDescriptor&)**desc;
+					providerName = d.getNetworkName();
+					break;
+				}
+				}
+			}
+		}
 		const TransportStreamInfoList &tsinfovec = *(*i)->getTsInfo();
 
 		for (TransportStreamInfoConstIterator tsinfo(tsinfovec.begin());
@@ -152,12 +167,14 @@ void eCableScan::parseNIT()
 				{
 				case CABLE_DELIVERY_SYSTEM_DESCRIPTOR:
 				{
+					TransponderInfo transponderinfo;
 					CableDeliverySystemDescriptor &d = (CableDeliverySystemDescriptor&)**desc;
-					ePtr<eDVBFrontendParameters> feparm = new eDVBFrontendParameters;
+					transponderinfo.feparm = new eDVBFrontendParameters;
+					transponderinfo.tsid = (*tsinfo)->getTransportStreamId();
 					eDVBFrontendParametersCable cable;
 					cable.set(d);
-					feparm->setDVBC(cable);
-					scanChannels.push_back(feparm);
+					transponderinfo.feparm->setDVBC(cable);
+					scanChannels.push_back(transponderinfo);
 					break;
 				}
 				case LOGICAL_CHANNEL_DESCRIPTOR:
@@ -184,6 +201,18 @@ void eCableScan::parseNIT()
 					}
 					break;
 				}
+				case SERVICE_LIST_DESCRIPTOR:
+				{
+					unsigned char buf[(*desc)->getLength() + 2];
+					(*desc)->writeToBuffer(buf);
+					ServiceListDescriptor d(buf);
+					const ServiceListItemList &services = *d.getServiceList();
+					for (ServiceListItemConstIterator s(services.begin()); s != services.end(); ++s)
+					{
+						serviceIdToTsid[(*s)->getServiceId()] = (*tsinfo)->getTransportStreamId();
+					}
+					break;
+				}
 				default:
 					break;
 				}
@@ -219,6 +248,18 @@ void eCableScan::parseSDT()
 		for (ServiceDescriptionConstIterator s(services.begin()); s != services.end(); ++s)
 		{
 			unsigned short service_id = (*s)->getServiceId();
+			if (!serviceIdToTsid.empty()
+				&& serviceIdToTsid.find(service_id) != serviceIdToTsid.end()
+				&& serviceIdToTsid[service_id] != (**m_SDT->getSections().begin()).getTransportStreamId())
+			{
+				/*
+				 * This SID belongs to a different TSID, according to the ServiceListDescriptor in the NIT.
+				 * This probably means the SDT contains data from the original network, which is not valid on the
+				 * selected Network_Id
+				 */
+				eDebug("[eCableScan] skip SID %x on TSID %x (which belongs to TSID %x according to the NIT)", service_id, (**m_SDT->getSections().begin()).getTransportStreamId(), serviceIdToTsid[service_id]);
+				continue;
+			}
 			eServiceReferenceDVB ref;
 			ePtr<eDVBService> service = new eDVBService;
 
@@ -352,13 +393,16 @@ void eCableScan::createBouquets()
 	res->getChannelList(db);
 	eDVBDB *dvbdb = eDVBDB::getInstance();
 
-	int most = 0;
-	for (std::map<std::string, int>::iterator it = providerNames.begin(); it != providerNames.end(); ++it)
+	if (providerName == "")
 	{
-		if (it->second > most)
+		int most = 0;
+		for (std::map<std::string, int>::iterator it = providerNames.begin(); it != providerNames.end(); ++it)
 		{
-			most = it->second;
-			providerName = it->first;
+			if (it->second > most)
+			{
+				most = it->second;
+				providerName = it->first;
+			}
 		}
 	}
 	bouquetFilename = replace_all(providerName, " ", "");
diff --git a/lib/dvb/cablescan.h b/lib/dvb/cablescan.h
index e6f1815..3c1a75d 100644
--- a/lib/dvb/cablescan.h
+++ b/lib/dvb/cablescan.h
@@ -18,6 +18,7 @@ class eCableScan: public sigc::trackable, public iObject
 	ePtr<iDVBDemux> m_demux;
 	bool originalNumbering;
 	bool hdList;
+	bool useNetworkName;
 	unsigned int initialFrequency;
 	unsigned int initialSymbolRate;
 	int initialModulation;
@@ -25,13 +26,18 @@ class eCableScan: public sigc::trackable, public iObject
 	int networkId;
 	std::map<std::string, int> providerNames;
 
-	std::list<ePtr<eDVBFrontendParameters> > scanChannels;
+	struct TransponderInfo
+	{
+		int tsid;
+		ePtr<eDVBFrontendParameters> feparm;
+	};
+	std::list<TransponderInfo> scanChannels;
 	ePtr<iDVBFrontendParameters> currentScanChannel;
 	int totalChannels;
 
 	std::map<eServiceReferenceDVB, ePtr<eDVBService> > newServices;
 
-	std::map<int, int> serviceIdToChannelId, serviceIdToHDChannelId;
+	std::map<int, int> serviceIdToChannelId, serviceIdToHDChannelId, serviceIdToTsid;
 	std::map<int, eServiceReferenceDVB> numberedServiceRefs, numberedRadioServiceRefs;
 
 	ePtr<eTable<NetworkInformationSection> > m_NIT;
@@ -49,7 +55,7 @@ class eCableScan: public sigc::trackable, public iObject
 #endif /* no SWIG */
 
 public:
-	eCableScan(int networkid, unsigned int frequency, unsigned int symbolrate, int modulation, bool originalnumbering = false, bool hdlist = false);
+	eCableScan(int networkid, unsigned int frequency, unsigned int symbolrate, int modulation, bool originalnumbering = false, bool hdlist = false, bool networkname = false);
 	~eCableScan();
 
 	void start(int frontendid = 0);
diff --git a/lib/dvb/epgcache.cpp b/lib/dvb/epgcache.cpp
index 400ad70..8b31adc 100644
--- a/lib/dvb/epgcache.cpp
+++ b/lib/dvb/epgcache.cpp
@@ -335,6 +335,12 @@ void eventData::load(FILE *f)
 		p.data[0] = header[0];
 		p.data[1] = header[1];
 		ret = fread(p.data+2, bytes-2, 1, f);
+		// make sure we are not leaking memory
+		DescriptorMap::iterator it = descriptors.find(id);
+		if (it != descriptors.end())
+		{
+			delete [] it->second.data; // free descriptor memory
+		}
 		descriptors[id] = p;
 		--size;
 	}
@@ -380,7 +386,7 @@ static pthread_mutex_t channel_map_lock =
 DEFINE_REF(eEPGCache)
 
 eEPGCache::eEPGCache()
-	:messages(this,1), cleanTimer(eTimer::create(this)), m_running(false), m_channel_pending(false), m_load_pending(false)
+	:messages(this,1), cleanTimer(eTimer::create(this)), m_running(false)
 {
 	eDebug("[eEPGCache] Initialized EPGCache (wait for setCacheFile call now)");
 
@@ -1317,12 +1323,6 @@ static const char* EPGDAT_IN_FLASH = "/epg.dat";
 
 void eEPGCache::load()
 {
-	if (m_channel_pending)
-	{
-		eDebug("[eEPGCache] delay epgcache load until channel data is ready");
-		m_load_pending = true;
-		return;
-	}
 	if (m_filename.empty())
 		m_filename = "/hdd/epg.dat";
 	const char* EPGDAT = m_filename.c_str();
@@ -1610,19 +1610,12 @@ void eEPGCache::channel_data::finishEPG()
 #endif
 		singleLock l(cache_lock);
 		cache->channelLastUpdated[channel->getChannelID()] = ::time(0);
-		eEPGCache::getInstance()->m_channel_pending = false;
-		if (eEPGCache::getInstance()->m_load_pending)
-		{
-			eEPGCache::getInstance()->m_load_pending = false;
-			eEPGCache::getInstance()->load();
-		}
 	}
 }
 
 void eEPGCache::channel_data::startEPG()
 {
 	eDebug("[eEPGCache] start caching events(%ld)", ::time(0));
-	eEPGCache::getInstance()->m_channel_pending = true;
 	state=0;
 	haveData=0;
 	for (unsigned int i=0; i < sizeof(seenSections)/sizeof(tidMap); ++i)
@@ -1644,7 +1637,7 @@ void eEPGCache::channel_data::startEPG()
 	memset(&mask, 0, sizeof(mask));
 
 #ifdef ENABLE_MHW_EPG
-	if (eEPGCache::getInstance()->getEpgSources() & eEPGCache::MHW)
+	if (eEPGCache::getInstance()->getEpgSources() & eEPGCache::MHW && m_MHWReader)
 	{
 		mask.pid = 0xD3;
 		mask.data[0] = 0x91;
@@ -1669,7 +1662,7 @@ void eEPGCache::channel_data::startEPG()
 	}
 #endif
 #ifdef ENABLE_FREESAT
-	if (eEPGCache::getInstance()->getEpgSources() & eEPGCache::FREESAT_SCHEDULE_OTHER)
+	if (eEPGCache::getInstance()->getEpgSources() & eEPGCache::FREESAT_SCHEDULE_OTHER && m_FreeSatScheduleOtherReader)
 	{
 		mask.pid = 3842;
 		mask.flags = eDVBSectionFilterMask::rfCRC;
@@ -1707,7 +1700,7 @@ void eEPGCache::channel_data::startEPG()
 		eDebug("[eEPGCache] Using non-standard pid %#x", mask.pid);
 	}
 
-	if (eEPGCache::getInstance()->getEpgSources() & eEPGCache::NOWNEXT)
+	if (eEPGCache::getInstance()->getEpgSources() & eEPGCache::NOWNEXT && m_NowNextReader)
 	{
 		mask.data[0] = 0x4E;
 		mask.mask[0] = 0xFE;
@@ -1716,7 +1709,7 @@ void eEPGCache::channel_data::startEPG()
 		isRunning |= NOWNEXT;
 	}
 
-	if (eEPGCache::getInstance()->getEpgSources() & eEPGCache::SCHEDULE)
+	if (eEPGCache::getInstance()->getEpgSources() & eEPGCache::SCHEDULE && m_ScheduleReader)
 	{
 		mask.data[0] = 0x50;
 		mask.mask[0] = 0xF0;
@@ -1725,7 +1718,7 @@ void eEPGCache::channel_data::startEPG()
 		isRunning |= SCHEDULE;
 	}
 
-	if (eEPGCache::getInstance()->getEpgSources() & eEPGCache::SCHEDULE_OTHER)
+	if (eEPGCache::getInstance()->getEpgSources() & eEPGCache::SCHEDULE_OTHER && m_ScheduleOtherReader)
 	{
 		mask.data[0] = 0x60;
 		mask.mask[0] = 0xF0;
@@ -1735,7 +1728,7 @@ void eEPGCache::channel_data::startEPG()
 	}
 
 #ifdef ENABLE_VIRGIN
-	if (eEPGCache::getInstance()->getEpgSources() & eEPGCache::VIRGIN_NOWNEXT)
+	if (eEPGCache::getInstance()->getEpgSources() & eEPGCache::VIRGIN_NOWNEXT && m_VirginNowNextReader)
 	{
 		mask.pid = 0x2bc;
 		mask.data[0] = 0x4E;
@@ -1745,7 +1738,7 @@ void eEPGCache::channel_data::startEPG()
 		isRunning |= VIRGIN_NOWNEXT;
 	}
 
-	if (eEPGCache::getInstance()->getEpgSources() & eEPGCache::VIRGIN_SCHEDULE)
+	if (eEPGCache::getInstance()->getEpgSources() & eEPGCache::VIRGIN_SCHEDULE && m_VirginScheduleReader)
 	{
 		mask.pid = 0x2bc;
 		mask.data[0] = 0x50;
@@ -1756,7 +1749,7 @@ void eEPGCache::channel_data::startEPG()
 	}
 #endif
 #ifdef ENABLE_NETMED
-	if (eEPGCache::getInstance()->getEpgSources() & eEPGCache::NETMED_SCHEDULE)
+	if (eEPGCache::getInstance()->getEpgSources() & eEPGCache::NETMED_SCHEDULE && m_NetmedScheduleReader)
 	{
 		mask.pid = 0x1388;
 		mask.data[0] = 0x50;
@@ -1766,7 +1759,7 @@ void eEPGCache::channel_data::startEPG()
 		isRunning |= NETMED_SCHEDULE;
 	}
 
-	if (eEPGCache::getInstance()->getEpgSources() & eEPGCache::NETMED_SCHEDULE_OTHER)
+	if (eEPGCache::getInstance()->getEpgSources() & eEPGCache::NETMED_SCHEDULE_OTHER && m_NetmedScheduleOtherReader)
 	{
 		mask.pid = 0x1388;
 		mask.data[0] = 0x60;
@@ -1823,7 +1816,7 @@ void eEPGCache::channel_data::startEPG()
 			eDebug("[eEPGCache] abort non avail OpenTV EIT reading");
 	}
 #endif
-	if (eEPGCache::getInstance()->getEpgSources() & eEPGCache::VIASAT)
+	if (eEPGCache::getInstance()->getEpgSources() & eEPGCache::VIASAT && m_ViasatReader)
 	{
 		mask.pid = 0x39;
 
@@ -2068,7 +2061,7 @@ void eEPGCache::channel_data::OPENTV_checkCompletion(uint32_t data_crc)
 				sids.push_back(m_OPENTV_channels_map[channelid].serviceId);
 				cache->submitEventData(sids, chids, it->second.startTime, it->second.duration, m_OPENTV_descriptors_map[it->second.title_crc].c_str(), "", "", 0, eEPGCache::OPENTV);
 			}
-			m_OPENTV_EIT_map.erase(it);
+			// m_OPENTV_EIT_map.erase(it); // removed for further testing due to seg fault, endless spinner and blocking issues
 		}
 		m_OPENTV_descriptors_map.clear();
 
diff --git a/lib/dvb/epgcache.h b/lib/dvb/epgcache.h
index c7b5a3e..38565a9 100644
--- a/lib/dvb/epgcache.h
+++ b/lib/dvb/epgcache.h
@@ -323,8 +323,6 @@ private:
 	updateMap channelLastUpdated;
 	std::string m_filename;
 	bool m_running;
-	bool m_channel_pending;
-	bool m_load_pending;
 
 #ifdef ENABLE_PRIVATE_EPG
 	contentMaps content_time_tables;
diff --git a/lib/dvb/frontend.cpp b/lib/dvb/frontend.cpp
index 9144c19..a47993f 100644
--- a/lib/dvb/frontend.cpp
+++ b/lib/dvb/frontend.cpp
@@ -1124,9 +1124,15 @@ void eDVBFrontend::calculateSignalQuality(int snr, int &signalquality, int &sign
 	{
 		ret = (int)((((double(snr) / (65535.0 / 100.0)) * 0.1880) + 0.1959) * 100);
 	}
-	else if (!strcmp(m_description, "BCM7356 DVB-S2 NIM (internal)")) // VU+ Solo2
+	else if (!strcmp(m_description, "BCM7356 DVB-S2 NIM (internal)") ||
+		!strcmp(m_description, "BCM7346 DVB-S2 NIM (internal)") ||
+		!strcmp(m_description, "BCM7358 DVB-S2 NIM (internal)") ||
+		!strcmp(m_description, "BCM7362 DVB-S2 NIM (internal)") ||
+		!strcmp(m_description, "GIGA DVB-S2 NIM (Internal)") ||
+		!strcmp(m_description, "GIGA DVB-S2 NIM (SP2246T)") ||
+		!strcmp(m_description, "GIGA DVB-S2 NIM (TS2M08)") )
 	{
-		ret = (int)((((double(snr) / (65535.0 / 100.0)) * 0.1800) - 1.0000) * 100);
+		ret = (int)((((double(snr) / (65535.0 / 100.0)) * 0.1710) - 1.0000) * 100);
 	}
 	else if (!strcmp(m_description, "Vuplus DVB-S NIM(7376 FBC)")) // VU+ Solo4k
 	{
@@ -1136,10 +1142,44 @@ void eDVBFrontend::calculateSignalQuality(int snr, int &signalquality, int &sign
 	{
 		ret = (int)((((double(snr) / (65535.0 / 100.0)) * 0.28) - 10.0) * 100);
 	}
-	else if (!strcmp(m_description, "DVB-S2 NIM(45208 FBC)") || !strcmp(m_description, "DVB-S2 NIM(45308 FBC)"))
+	else if (!strcmp(m_description, "DVB-S2 NIM(45208 FBC)")
+		|| !strcmp(m_description, "DVB-S2 NIM(45308 FBC)")
+		|| !strcmp(m_description, "DVB-S2X NIM(45308X FBC)")
+		)
 	{
 		ret = (int)((((double(snr) / (65535.0 / 100.0)) * 0.1950) - 1.0000) * 100);
 	}
+	else if (!strcmp(m_description, "GIGA DVB-C/T NIM (SP8221L)")
+		|| !strcmp(m_description, "GIGA DVB-C/T NIM (SI4765)")
+		|| !strcmp(m_description, "GIGA DVB-C/T NIM (SI41652)")
+		|| !strcmp(m_description, "GIGA DVB-C/T2 NIM (SI4768)")
+		|| !strcmp(m_description, "GIGA DVB-C/T2 NIM (SI41682)")
+		|| !strcmp(m_description, "GIGA DVB-T2/C NIM (TT2L10)")
+		|| !strcmp(m_description, "GIGA DVB-T2/C NIM (TT3L10)")
+		)
+	{
+		int type = -1;
+		oparm.getSystem(type);
+		switch (type)
+		{
+			case feCable:
+				ret = (int)(snr / 15);
+				cab_max = 4200;
+				break;
+			case feTerrestrial:
+				ret = (int)(snr / 30);
+				ter_max = 1700;
+				break;
+		}
+	}
+	else if (!strcmp(m_description, "Vuplus DVB-S NIM(7376 FBC)")) // VU+ Solo4k
+	{
+		ret = (int)((((double(snr) / (65535.0 / 100.0)) * 0.1480) + 0.9560) * 100);
+	}
+	else if (!strcmp(m_description, "BCM7362 (internal) DVB-S2")) // Xsarius
+	{
+		ret = (int)((((double(snr) / (65535.0 / 100.0)) * 0.28) - 10.0) * 100);
+	}
 	else if (!strcmp(m_description, "DVB-C NIM(3128 FBC)"))
 	{
 		ret = (int)(snr / 17);
diff --git a/lib/dvb/scan.cpp b/lib/dvb/scan.cpp
index a9f5da5..34abaaa 100644
--- a/lib/dvb/scan.cpp
+++ b/lib/dvb/scan.cpp
@@ -863,7 +863,7 @@ void eDVBScan::channelDone()
 						eDVBFrontendParametersSatellite p;
 						m_ch_current->getDVBS(p);
 
-						if (p.is_id != sat.is_id || p.pls_mode != sat.pls_code || p.pls_code != sat.pls_code)
+						if (p.is_id != sat.is_id || p.pls_mode != sat.pls_mode || p.pls_code != sat.pls_code)
 						{
 							p.set(d); //set multistream descriptor to current tuned data
 							feparm->setDVBS(p);
@@ -1115,6 +1115,7 @@ void eDVBScan::channelDone()
 
 		if (!(m_flags & scanOnlyFree) || !m_pmt_in_progress->second.scrambled) {
 			SCAN_eDebug("[eDVBScan] add not scrambled!");
+			m_new_servicerefs.push_back(ref);
 			std::pair<std::map<eServiceReferenceDVB, ePtr<eDVBService> >::iterator, bool> i =
 				m_new_services.insert(std::pair<eServiceReferenceDVB, ePtr<eDVBService> >(ref, service));
 			if (i.second)
@@ -1186,6 +1187,7 @@ void eDVBScan::start(const eSmartPtrList<iDVBFrontendParameters> &known_transpon
 	m_new_channels.clear();
 	m_tuner_data.clear();
 	m_new_services.clear();
+	m_new_servicerefs.clear();
 	m_last_service = m_new_services.end();
 
 	if (m_flags & scanBlindSearch)
@@ -1448,10 +1450,10 @@ void eDVBScan::insertInto(iDVBChannelList *db, bool backgroundscanresult)
 		{
 			bouquet->m_bouquet_name = "Last Scanned";
 
-			for (std::map<eServiceReferenceDVB, ePtr<eDVBService> >::const_iterator
-				service(m_new_services.begin()); service != m_new_services.end(); ++service)
+			for (std::vector<eServiceReferenceDVB>::const_iterator
+				service(m_new_servicerefs.begin()); service != m_new_servicerefs.end(); ++service)
 			{
-				bouquet->m_services.push_back(service->first);
+				bouquet->m_services.push_back(*service);
 			}
 			bouquet->flushChanges();
 			eDVBDB::getInstance()->renumberBouquet();
@@ -1562,6 +1564,7 @@ RESULT eDVBScan::processSDT(eDVBNamespace dvbnamespace, const ServiceDescription
 			if (is_crypted and !service->m_ca.size())
 				service->m_ca.push_front(0);
 
+			m_new_servicerefs.push_back(ref);
 			std::pair<std::map<eServiceReferenceDVB, ePtr<eDVBService> >::iterator, bool> i =
 				m_new_services.insert(std::pair<eServiceReferenceDVB, ePtr<eDVBService> >(ref, service));
 
@@ -1669,6 +1672,7 @@ RESULT eDVBScan::processVCT(eDVBNamespace dvbnamespace, const VirtualChannelTabl
 			if (is_crypted and !service->m_ca.size())
 				service->m_ca.push_front(0);
 
+			m_new_servicerefs.push_back(ref);
 			std::pair<std::map<eServiceReferenceDVB, ePtr<eDVBService> >::iterator, bool> i =
 				m_new_services.insert(std::pair<eServiceReferenceDVB, ePtr<eDVBService> >(ref, service));
 
diff --git a/lib/dvb/scan.h b/lib/dvb/scan.h
index 339edd0..fe39071 100644
--- a/lib/dvb/scan.h
+++ b/lib/dvb/scan.h
@@ -56,6 +56,7 @@ class eDVBScan: public sigc::trackable, public iObject
 	std::map<eDVBChannelID, int> m_tuner_data; // frequency read from tuner for every new channel
 
 	std::map<eServiceReferenceDVB, ePtr<eDVBService> > m_new_services;
+	std::vector<eServiceReferenceDVB> m_new_servicerefs;
 	std::map<eServiceReferenceDVB, ePtr<eDVBService> >::iterator m_last_service;
 
 	std::map<unsigned short, service> m_pmts_to_read;
diff --git a/lib/dvb/sec.cpp b/lib/dvb/sec.cpp
index 71d4e12..4136b2d 100644
--- a/lib/dvb/sec.cpp
+++ b/lib/dvb/sec.cpp
@@ -714,7 +714,7 @@ RESULT eDVBSatelliteEquipmentControl::prepare(iDVBFrontend &frontend, const eDVB
 				compare.voltage = iDVBFrontend::voltageOff;
 				sec_sequence.push_back( eSecCommand(eSecCommand::IF_NOT_VOLTAGE_GOTO, compare) );
 				sec_sequence.push_back( eSecCommand(eSecCommand::SET_VOLTAGE, VOLTAGE(13)) );
-				sec_sequence.push_back( eSecCommand(eSecCommand::SLEEP, m_params[UNICABLE_DELAY_AFTER_ENABLE_VOLTAGE_BEFORE_SWITCH_CMDS] ) );
+				sec_sequence.push_back( eSecCommand(eSecCommand::SLEEP, m_params[UNICABLE_DELAY_AFTER_ENABLE_VOLTAGE_BEFORE_SWITCH_CMDS] > lnb_param.boot_up_time ? m_params[UNICABLE_DELAY_AFTER_ENABLE_VOLTAGE_BEFORE_SWITCH_CMDS] : lnb_param.boot_up_time ) );
 
 				sec_sequence.push_back( eSecCommand(eSecCommand::SET_VOLTAGE, VOLTAGE(18)) );
 				sec_sequence.push_back( eSecCommand(eSecCommand::SET_TONE, iDVBFrontend::toneOff) );
@@ -1541,6 +1541,18 @@ RESULT eDVBSatelliteEquipmentControl::setLNBSatCRPositionNumber(unsigned int pos
 	return 0;
 }
 
+RESULT eDVBSatelliteEquipmentControl::setLNBBootupTime(int BootUpTime)
+{
+	eSecDebug("eDVBSatelliteEquipmentControl::setLNBBootupTime(%d)", BootUpTime);
+	if(!((BootUpTime >= 0)))
+		return -EPERM;
+	if ( currentLNBValid() )
+		m_lnbs[m_lnbidx].boot_up_time = BootUpTime;
+	else
+		return -ENOENT;
+	return 0;
+}
+
 /* Satellite Specific Parameters */
 RESULT eDVBSatelliteEquipmentControl::addSatellite(int orbital_position)
 {
diff --git a/lib/dvb/sec.h b/lib/dvb/sec.h
index e55b6b1..c1f6a18 100644
--- a/lib/dvb/sec.h
+++ b/lib/dvb/sec.h
@@ -249,7 +249,7 @@ class eDVBSatelliteLNBParameters
 			SatCR_format = SatCR_format_none;
 #ifndef SWIG
 			m_12V_relais_state = OFF;
-			m_lof_hi = m_lof_lo = m_lof_threshold = 0;
+			m_lof_hi = m_lof_lo = m_lof_threshold = LNBNum = 0;
 			m_increased_voltage = false;
 			m_prio = -1;
 #endif
@@ -274,13 +274,16 @@ class eDVBSatelliteLNBParameters
 	eDVBSatelliteRotorParameters m_rotor_parameters;
 
 	int m_prio; // to override automatic tuner management ... -1 is Auto
+	int LNBNum;
 #endif
 public:
 #define guard_offset_min -8000
 #define guard_offset_max 8000
 #define guard_offset_step 8000
 #define MAX_SATCR 32
-#define MAX_LNBNUM 32
+#define MAX_FIXED_LNB_POSITIONS 64
+#define MAX_MOVABLE_LNBS 6
+#define MAX_LNBNUM (MAX_FIXED_LNB_POSITIONS + MAX_MOVABLE_LNBS)
 
 	SatCR_format_t SatCR_format;
 	int SatCR_positions;
@@ -294,7 +297,7 @@ public:
 	int old_orbital_position;
 	int guard_offset_old;
 	int guard_offset;
-	int LNBNum;
+	int boot_up_time = 0;
 };
 
 class eDVBRegisteredFrontend;
@@ -363,7 +366,9 @@ public:
 	RESULT setLNBThreshold(int threshold);
 	RESULT setLNBIncreasedVoltage(bool onoff);
 	RESULT setLNBPrio(int prio);
-	RESULT setLNBNum(int LNBNum);
+	RESULT setLNBNum(int lnbnum);
+	RESULT getMaxFixedLnbPositions() {return MAX_FIXED_LNB_POSITIONS;}
+	RESULT getMaxLnbNum() {return MAX_LNBNUM;}
 /* DiSEqC Specific Parameters */
 	RESULT setDiSEqCMode(int diseqcmode);
 	RESULT setToneburst(int toneburst);
@@ -387,6 +392,7 @@ public:
 	RESULT setLNBSatCRpositions(int SatCR_positions);
 	RESULT setLNBSatCRformat(SatCR_format_t SatCR_format);
 	RESULT setLNBSatCRPositionNumber(unsigned int position_number);
+	RESULT setLNBBootupTime(int BootUpTime);
 	RESULT getLNBSatCR();
 	RESULT getLNBSatCRvco();
 	RESULT getLNBSatCRpositions();
diff --git a/lib/gdi/accel.cpp b/lib/gdi/accel.cpp
index 228fc8b..c6f4de3 100644
--- a/lib/gdi/accel.cpp
+++ b/lib/gdi/accel.cpp
@@ -426,7 +426,7 @@ int gAccel::accelAlloc(gUnmanagedSurface* surface)
 		}
 	}
 
-	eDebug("[gAccel] accel alloc failed %d allocations already in place", m_accel_allocation.size());
+	eDebug("[gAccel] alloc failed");
 	return -3;
 }
 
diff --git a/lib/gdi/font.cpp b/lib/gdi/font.cpp
index f0aa5fa..4e30f82 100644
--- a/lib/gdi/font.cpp
+++ b/lib/gdi/font.cpp
@@ -95,7 +95,7 @@ FT_Error fontRenderClass::FTC_Face_Requester(FTC_FaceID	face_id, FT_Face* aface)
 	int error;
 	if ((error=FT_New_Face(library, font->filename.c_str(), 0, aface)))
 	{
-		eDebug("[Font] failed: %m");
+		eDebug("[Font] Failed: %m");
 		return error;
 	}
 	FT_Select_Charmap(*aface, ft_encoding_unicode);
@@ -149,26 +149,28 @@ inline FT_Error fontRenderClass::getGlyphImage(FTC_Image_Desc *font, GlyphIndex
 
 std::string fontRenderClass::AddFont(const std::string &filename, const std::string &name, int scale, int renderflags)
 {
-	eDebugNoNewLineStart("[Font] adding font %s", filename.c_str());
+	eDebugNoNewLineStart("[Font] Adding font '%s'", filename.c_str());
 	int error;
-	fontListEntry *n=new fontListEntry;
-
-	n->scale=scale;
 	FT_Face face;
-	singleLock s(ftlock);
 
+	singleLock s(ftlock);
 	if ((error=FT_New_Face(library, filename.c_str(), 0, &face)))
-		eFatal("[Font] failed: %m");
-
-	n->filename=filename;
-	n->face=name;
-	n->renderflags=renderflags;
+	{
+		eWarning("[Font] Failed: %m");
+		return std::string();
+	}
 	FT_Done_Face(face);
 
+	fontListEntry *n = new fontListEntry;
+	n->filename = filename;
+	n->face = name;
+	n->scale = scale;
+	n->renderflags = renderflags;
 	n->next=font;
-	eDebugNoNewLine(" -> %s\n", n->face.c_str());
 	font=n;
 
+	eDebugNoNewLine(" -> '%s'.\n", n->face.c_str());
+
 	return n->face;
 }
 
@@ -179,15 +181,15 @@ fontRenderClass::fontListEntry::~fontListEntry()
 fontRenderClass::fontRenderClass(): fb(fbClass::getInstance())
 {
 	instance=this;
-	eDebug("[Font] initializing lib...");
+	eDebug("[Font] Initializing lib...");
 	{
 		if (FT_Init_FreeType(&library))
 		{
-			eDebug("[Font] initializing failed.");
+			eDebug("[Font] Initializing failed!");
 			return;
 		}
 	}
-	eDebug("[Font] loading fonts...");
+	eDebug("[Font] Loading fonts...");
 	font=0;
 
 	int maxbytes=4*1024*1024;
@@ -196,26 +198,26 @@ fontRenderClass::fontRenderClass(): fb(fbClass::getInstance())
 	{
 		if (FTC_Manager_New(library, 8, 8, maxbytes, myFTC_Face_Requester, this, &cacheManager))
 		{
-			eDebug("[Font] initializing font cache failed!");
+			eDebug("[Font] Initializing font cache failed!");
 			return;
 		}
 		if (!cacheManager)
 		{
-			eDebug("[Font] initializing font cache manager error.");
+			eDebug("[Font] Initializing font cache manager error!");
 			return;
 		}
 		if (FTC_SBit_Cache_New(cacheManager, &sbitsCache))
 		{
-			eDebug("[Font] initializing font cache sbit failed!");
+			eDebug("[Font] Initializing font cache sbit failed!");
 			return;
 		}
 		if (FTC_Image_Cache_New(cacheManager, &imageCache))
 		{
-			eDebug("[Font] initializing font cache imagecache failed!");
+			eDebug("[Font] Initializing font cache imagecache failed!");
 		}
 		if (FT_Stroker_New(library, &stroker))
 		{
-			eDebug("[Font] initializing font stroker failed!");
+			eDebug("[Font] Initializing font stroker failed!");
 		}
 	}
 	strokerRadius = -1;
@@ -275,6 +277,17 @@ int fontRenderClass::getFont(ePtr<Font> &font, const std::string &face, int size
 	return 0;
 }
 
+// get all font faces (names) available in enigma2
+std::vector<std::string> fontRenderClass::getFontFaces()
+{
+	std::vector<std::string> v;
+	for (fontListEntry *f=font; f; f=f->next)
+	{
+		v.push_back(f->face);
+	}
+	return v;
+}
+
 void addFont(const char *filename, const char *alias, int scale_factor, int is_replacement, int renderflags)
 {
 	fontRenderClass::getInstance()->AddFont(filename, alias, scale_factor, renderflags);
@@ -558,7 +571,7 @@ void eTextPara::setFont(const gFont *font)
 	ePtr<Font> fnt, replacement;
 	fontRenderClass::getInstance()->getFont(fnt, font->family.c_str(), font->pointSize);
 	if (!fnt)
-		eWarning("[eTextPara] FONT '%s' MISSING!", font->family.c_str());
+		eWarning("[eTextPara] Font '%s' is missing!", font->family.c_str());
 	fontRenderClass::getInstance()->getFont(replacement, replacement_facename.c_str(), font->pointSize);
 	setFont(fnt, replacement);
 }
@@ -584,7 +597,7 @@ void eTextPara::setFont(Font *fnt, Font *replacement)
 					    &replacement_font->scaler,
 					    &replacement_font->size) < 0))
 		{
-			eDebug("[eTextPara] setFont FTC_Manager_Lookup_Size replacement_font failed!");
+			eDebug("[eTextPara] setFont: FTC_Manager_Lookup_Size replacement_font failed!");
 			return;
 		}
 	}
@@ -597,7 +610,7 @@ void eTextPara::setFont(Font *fnt, Font *replacement)
 					    &current_font->scaler,
 					    &current_font->size) < 0))
 		{
-			eDebug("[eTextPara] setFont FTC_Manager_Lookup_Size current_font failed!");
+			eDebug("[eTextPara] setFont: FTC_Manager_Lookup_Size current_font failed!");
 			return;
 		}
 	}
@@ -616,9 +629,9 @@ int eTextPara::renderString(const char *string, int rflags, int border)
 		return -1;
 
 	if (!current_face)
-		eFatal("[eTextPara] renderString: no current_face");
+		eFatal("[eTextPara] renderString: No current_face!");
 	if (!current_face->size)
-		eFatal("[eTextPara] renderString: no current_face->size");
+		eFatal("[eTextPara] renderString: No current_face->size!");
 
 	if (cursor.y()==-1)
 	{
@@ -651,7 +664,7 @@ int eTextPara::renderString(const char *string, int rflags, int border)
 				    &current_font->scaler,
 				    &current_font->size) < 0))
 	{
-		eDebug("[eTextPara] renderString FTC_Manager_Lookup_Size current_font failed!");
+		eDebug("[eTextPara] renderString: FTC_Manager_Lookup_Size current_font failed!");
 		return -1;
 	}
 
@@ -837,7 +850,7 @@ nprint:				isprintable=0;
 					index=(rflags&RS_DIRECT)? chr : FT_Get_Char_Index(replacement_face, chr);
 
 				if (!index)
-					eDebug("[eTextPara] unicode U+%4lx not present", chr);
+					eDebug("[eTextPara] Unicode U+%4lx not present", chr);
 				else
 					appendGlyph(replacement_font, replacement_face, index, flags, rflags, border, i == uc_visual.end() - 1, activate_newcolor, newcolor);
 			} else
@@ -992,7 +1005,7 @@ void eTextPara::blit(gDC &dc, const ePoint &offset, const gRGB &background, cons
 					lookup16_invert[i]=lookup16_normal[i^0xF];
 			} else
 			{
-				eWarning("[eTextPara] can't render to %dbpp", surface->bpp);
+				eWarning("[eTextPara] Can't render to %dbpp!", surface->bpp);
 				return;
 			}
 		}
diff --git a/lib/gdi/font.h b/lib/gdi/font.h
index ef3ec1d..25300c9 100644
--- a/lib/gdi/font.h
+++ b/lib/gdi/font.h
@@ -77,6 +77,7 @@ public:
 	std::string AddFont(const std::string &filename, const std::string &name, int scale, int renderflags = 0);
 	FT_Error FTC_Face_Requester(FTC_FaceID	face_id, FT_Face* aface);
 	int getFont(ePtr<Font> &font, const std::string &face, int size, int tabwidth=-1);
+	std::vector<std::string> getFontFaces();
 	fontRenderClass();
 	~fontRenderClass();
 #endif
diff --git a/lib/gui/esubtitle.cpp b/lib/gui/esubtitle.cpp
index a2337dc..b8a7287 100644
--- a/lib/gui/esubtitle.cpp
+++ b/lib/gui/esubtitle.cpp
@@ -119,7 +119,7 @@ void eSubtitleWidget::setPage(const eDVBTeletextSubtitlePage &p)
 
 void eSubtitleWidget::setPage(const eDVBSubtitlePage &p)
 {
-	eDebug("[eSubtitleWidget] setPage");
+	//eDebug("[eSubtitleWidget] setPage");
 	m_dvb_page = p;
 	invalidate(m_visible_region); // invalidate old visible regions
 	m_visible_region.rects.clear();
@@ -141,7 +141,7 @@ void eSubtitleWidget::setPage(const eDVBSubtitlePage &p)
 			line++;
 		}
 		eDebug("[eSubtitleWidget] add %d %d %d %d", it->m_position.x(), it->m_position.y(), it->m_pixmap->size().width(), it->m_pixmap->size().height());
-		eDebug("[eSubtitleWidget] disp width %d, disp height %d", p.m_display_size.width(), p.m_display_size.height());
+		//eDebug("[eSubtitleWidget] disp width %d, disp height %d", p.m_display_size.width(), p.m_display_size.height());
 		eRect r = eRect(it->m_position, it->m_pixmap->size());
 		r.scale(size().width(), p.m_display_size.width(), size().height(), p.m_display_size.height());
 		m_visible_region |= r;
@@ -355,8 +355,8 @@ int eSubtitleWidget::event(int event, void *data, void *data2)
 				text = replace_all(text, "&apos;", "'");
 				text = replace_all(text, "&quot;", "\"");
 				text = replace_all(text, "&amp;", "&");
-				text = replace_all(text, "&lt", "<");
-				text = replace_all(text, "&gt", ">");
+				text = replace_all(text, "&lt;", "<");
+				text = replace_all(text, "&gt;", ">");
 
 				if (eConfigManager::getConfigBoolValue("config.subtitles.pango_subtitle_fontswitch"))
 				{
@@ -389,6 +389,13 @@ int eSubtitleWidget::event(int event, void *data, void *data2)
 					text = replace_all(text, "<i>", "");
 					text = replace_all(text, "<b>", "");
 				}
+				text = replace_all(text, "</font>", "");
+				size_t subtitleFont = 0;
+				while ((subtitleFont = text.find("<font ", subtitleFont)) != std::string::npos)
+				{
+					size_t end = text.find('>', subtitleFont);
+					text.erase(subtitleFont, end - subtitleFont + 1);
+				}
 				subtitleStyles[face].font->pointSize=fontsize;
 				painter.setFont(subtitleStyles[face].font);
 				eRect &area = element.m_area;
diff --git a/lib/python/Components/AVSwitch.py b/lib/python/Components/AVSwitch.py
index 80a7c29..c2c6d01 100644
--- a/lib/python/Components/AVSwitch.py
+++ b/lib/python/Components/AVSwitch.py
@@ -1,6 +1,5 @@
 from config import config, ConfigSlider, ConfigSelection, ConfigSubDict, ConfigYesNo, ConfigEnableDisable, ConfigSubsection, ConfigBoolean, ConfigSelectionNumber, ConfigNothing, NoSave
 from Components.About import about
-from enigma import eAVSwitch, getDesktop, eDVBServicePMTHandler
 from Tools.CList import CList
 from Tools.HardwareInfo import HardwareInfo
 from enigma import eAVSwitch, getDesktop
@@ -11,6 +10,7 @@ import os
 config.av = ConfigSubsection()
 
 class AVSwitch:
+
 	has_rca = getHaveRCA() in ('True',)
 	has_dvi = getHaveDVI() in ('True',)
 	has_jack = getHaveAVJACK() in ('True',)
@@ -261,14 +261,15 @@ class AVSwitch:
 		eAVSwitch.getInstance().setInput(INPUT[input])
 
 	def setColorFormat(self, value):
+		if not self.current_port:
+			self.current_port = config.av.videoport.value
+		if self.current_port in ("YPbPr", "Scart-YPbPr"):
+			eAVSwitch.getInstance().setColorFormat(3)
+		elif self.current_port in ("RCA"):
+			eAVSwitch.getInstance().setColorFormat(0)
+		else:
 			eAVSwitch.getInstance().setColorFormat(value)
-			
-	def setAspectRatio(self, value):
-		eAVSwitch.getInstance().setAspectRatio(value)
 
-	def setSystem(self, value):
-		eAVSwitch.getInstance().setVideomode(value)
-			
 	def setConfiguredMode(self):
 		port = config.av.videoport.value
 		if port not in config.av.videomode:
@@ -285,70 +286,66 @@ class AVSwitch:
 		self.setMode(port, mode, rate)
 
 	def setAspect(self, cfgelement):
-		print "[AVSwitch] setting aspect: %s" % cfgelement.value
-		try:
-			f = open("/proc/stb/video/aspect", "w")
-			f.write(cfgelement.value)
-			f.close()
-		except IOError:
-			print "[AVSwitch] setting aspect failed."
+		print "[VideoHardware] setting aspect: %s" % cfgelement.value
+		f = open("/proc/stb/video/aspect", "w")
+		f.write(cfgelement.value)
+		f.close()
 
 	def setWss(self, cfgelement):
 		if not cfgelement.value:
 			wss = "auto(4:3_off)"
 		else:
 			wss = "auto"
-		if os.path.exists("/proc/stb/denc/0/wss"):
-			print "[AVSwitch] setting wss: %s" % wss
-			f = open("/proc/stb/denc/0/wss", "w")
-			f.write(wss)
-			f.close()
+		print "[VideoHardware] setting wss: %s" % wss
+		f = open("/proc/stb/denc/0/wss", "w")
+		f.write(wss)
+		f.close()
 
 	def setPolicy43(self, cfgelement):
-		print "[AVSwitch] setting policy: %s" % cfgelement.value
-		arw = "0"
-		try:
-			if about.getChipSetString() in ('meson-6', 'meson-64'):
-				if cfgelement.value == "panscan" : arw = "11"
-				if cfgelement.value == "letterbox" : arw = "12"
-				if cfgelement.value == "bestfit" : arw = "10"
-				open("/sys/class/video/screen_mode", "w").write(arw)
-			else:
-				f = open("/proc/stb/video/policy", "w")
-				f.write(cfgelement.value)
-				f.close()
-		except IOError:
-			print "[AVSwitch] setting policy43 failed."
+		print "[VideoHardware] setting policy: %s" % cfgelement.value
+		f = open("/proc/stb/video/policy", "w")
+		f.write(cfgelement.value)
+		f.close()
 
 	def setPolicy169(self, cfgelement):
 		if os.path.exists("/proc/stb/video/policy2"):
-			print "[AVSwitch] setting policy2: %s" % cfgelement.value
+			print "[VideoHardware] setting policy2: %s" % cfgelement.value
 			f = open("/proc/stb/video/policy2", "w")
 			f.write(cfgelement.value)
 			f.close()
 
 	def getOutputAspect(self):
-		return (16,9) # this function is very old... for analog TVs with different pixel aspect ratio .. for modern digital TVs 16:9 is always okay...
-		valstr = config.av.aspectratio.value
-		if valstr in ("4_3_letterbox", "4_3_panscan"): # 4:3
-			return (4,3)
-		elif valstr == "16_9": # auto ... 4:3 or 16:9
-			try:
-				aspect_str = open("/proc/stb/vmpeg/0/aspect", "r").read()
-				if aspect_str[0] == "2": # 4:3
-					return (4,3)
-			except IOError:
-				pass
-		elif valstr in ("16_9_always", "16_9_letterbox"): # 16:9
-			pass
-		elif valstr in ("16_10_letterbox", "16_10_panscan"): # 16:10
-			return (16,10)
-		return (16,9)
+		ret = (16,9)
+		port = config.av.videoport.value
+		if port not in config.av.videomode:
+			print "[VideoHardware] current port not available in getOutputAspect!!! force 16:9"
+		else:
+			mode = config.av.videomode[port].value
+			force_widescreen = self.isWidescreenMode(port, mode)
+			is_widescreen = force_widescreen or config.av.aspect.value in ("16:9", "16:10")
+			is_auto = config.av.aspect.value == "auto"
+			if is_widescreen:
+				if force_widescreen:
+					pass
+				else:
+					aspect = {"16:9": "16:9", "16:10": "16:10"}[config.av.aspect.value]
+					if aspect == "16:10":
+						ret = (16,10)
+			elif is_auto:
+				try:
+					aspect_str = open("/proc/stb/vmpeg/0/aspect", "r").read()
+					if aspect_str == "1": # 4:3
+						ret = (4,3)
+				except IOError:
+					pass
+			else:  # 4:3
+				ret = (4,3)
+		return ret
 
 	def getFramebufferScale(self):
 		aspect = self.getOutputAspect()
 		fb_size = getDesktop(0).size()
-		return (aspect[0] * fb_size.height(), aspect[1] * fb_size.width())
+		return aspect[0] * fb_size.height(), aspect[1] * fb_size.width()
 
 	def getAspectRatioSetting(self):
 		valstr = config.av.aspectratio.value
@@ -367,33 +364,14 @@ class AVSwitch:
 		elif valstr == "16_9_letterbox":
 			val = 6
 		return val
-	
-	def setAspectWSS(self, aspect=None):
-		if not config.av.wss.value:
-			value = 2 # auto(4:3_off)
-		else:
-			value = 1 # auto
-		eAVSwitch.getInstance().setWSS(value)	
 
 iAVSwitch = AVSwitch()
 
 def InitAVSwitch():
-	try:
-		x = config.av
-	except KeyError:
-		config.av = ConfigSubsection()
-	config.av.yuvenabled = ConfigBoolean(default=False)
+	config.av.yuvenabled = ConfigBoolean(default=True)
 	colorformat_choices = {"cvbs": _("CVBS"), "rgb": _("RGB"), "svideo": _("S-Video")}
-
-	try:
-		have_analog_output = open("/proc/stb/video/mode_choices", "r").read()[:-1].find("PAL") != -1
-	except:
-		have_analog_output = False
-
-	SystemInfo["AnalogOutput"] = have_analog_output
-
 	# when YUV is not enabled, don't let the user select it
-	if config.av.yuvenabled.value and have_analog_output:
+	if config.av.yuvenabled.value:
 		colorformat_choices["yuv"] = _("YPbPr")
 
 	config.av.autores = ConfigSelection(choices={"disabled": _("Disabled"), "all": _("All resolutions"), "hd": _("only HD")}, default="disabled")
@@ -415,18 +393,13 @@ def InitAVSwitch():
 	config.av.colorformat = ConfigSelection(choices=colorformat_choices, default="rgb")
 	config.av.aspectratio = ConfigSelection(choices={
 			"4_3_letterbox": _("4:3 Letterbox"),
-			"4_3_panscan": _("4:3 PanScan"), 
-			"16_9": _("16:9"), 
+			"4_3_panscan": _("4:3 PanScan"),
+			"16_9": _("16:9"),
 			"16_9_always": _("16:9 always"),
 			"16_10_letterbox": _("16:10 Letterbox"),
-			"16_10_panscan": _("16:10 PanScan"), 
-			"16_9_letterbox": _("16:9 Letterbox")}, 
-			default = "4_3_letterbox")
-	
-	config.av.tvsystem = ConfigSelection(choices = {"pal": _("PAL"), "ntsc": _("NTSC"), "multinorm": _("multinorm")}, default="pal")
-	config.av.wss = ConfigEnableDisable(default = True)
-	config.av.vcrswitch = ConfigEnableDisable(default = False)
-	
+			"16_10_panscan": _("16:10 PanScan"),
+			"16_9_letterbox": _("16:9 Letterbox")},
+			default = "16_9")
 	config.av.aspect = ConfigSelection(choices={
 			"4:3": _("4:3"),
 			"16:9": _("16:9"),
@@ -463,43 +436,17 @@ def InitAVSwitch():
 			policy_choices.update({"auto": _("Auto")})
 		f.close()
 	config.av.policy_43 = ConfigSelection(choices=policy_choices, default = "panscan")
+	config.av.tvsystem = ConfigSelection(choices = {"pal": _("PAL"), "ntsc": _("NTSC"), "multinorm": _("multinorm")}, default="pal")
+	config.av.wss = ConfigEnableDisable(default = True)
 	config.av.generalAC3delay = ConfigSelectionNumber(-1000, 1000, 5, default = 0)
 	config.av.generalPCMdelay = ConfigSelectionNumber(-1000, 1000, 5, default = 0)
+	config.av.vcrswitch = ConfigEnableDisable(default = False)
 
 	config.av.aspect.setValue('16:9')
 	config.av.aspect.addNotifier(iAVSwitch.setAspect)
 	config.av.wss.addNotifier(iAVSwitch.setWss)
 	config.av.policy_43.addNotifier(iAVSwitch.setPolicy43)
 	config.av.policy_169.addNotifier(iAVSwitch.setPolicy169)
-	
-	def setColorFormat(configElement):
-		map = {"cvbs": 0, "rgb": 1, "svideo": 2, "yuv": 3}
-		iAVSwitch.setColorFormat(map[configElement.value])
-
-	def setAspectRatio(configElement):
-		map = {"4_3_letterbox": 0, "4_3_panscan": 1, "16_9": 2, "16_9_always": 3, "16_10_letterbox": 4, "16_10_panscan": 5, "16_9_letterbox" : 6}
-		iAVSwitch.setAspectRatio(map[configElement.value])
-
-	def setSystem(configElement):
-		map = {"pal": 0, "ntsc": 1, "multinorm" : 2}
-		iAVSwitch.setSystem(map[configElement.value])
-
-	def setWSS(configElement):
-		iAVSwitch.setAspectWSS()
-
-	try:
-		have_analog_output = open("/proc/stb/video/mode_choices", "r").read()[:-1].find("PAL") != -1
-	except:
-		have_analog_output = False
-
-	SystemInfo["AnalogOutput"] = have_analog_output
-
-	if have_analog_output:
-		# this will call the "setup-val" initial
-		config.av.colorformat.addNotifier(setColorFormat)
-		config.av.aspectratio.addNotifier(setAspectRatio)
-		config.av.tvsystem.addNotifier(setSystem)
-		config.av.wss.addNotifier(setWSS)
 
 	def setHDMIColorspace(configElement):
 		try:
@@ -608,7 +555,6 @@ def InitAVSwitch():
 		except IOError:
 			print "[VideoHardware] couldn't write pep_scaler_sharpness"
 
-	
 	def setColorFormat(configElement):
 		if config.av.videoport and config.av.videoport.value in ("YPbPr", "Scart-YPbPr"):
 			iAVSwitch.setColorFormat(3)
diff --git a/lib/python/Components/Console.py b/lib/python/Components/Console.py
index 430f16f..7c7536a 100644
--- a/lib/python/Components/Console.py
+++ b/lib/python/Components/Console.py
@@ -1,4 +1,4 @@
-import enigma
+import enigma, os
 
 class ConsoleItem:
 	def __init__(self, containers, cmd, callback, extra_args):
@@ -23,6 +23,14 @@ class ConsoleItem:
 		retval = self.container.execute(*cmd)
 		if retval:
 			self.finishedCB(retval)
+		if callback is None:
+			pid = self.container.getPID()
+			print "[Console] pid = %s" %pid
+			try:
+				os.waitpid(pid, 0)
+			except OSError:
+				pass
+
 	def dataAvailCB(self, data):
 		self.appResults.append(data)
 	def finishedCB(self, retval):
diff --git a/lib/python/Components/Converter/ConditionalShowHide.py b/lib/python/Components/Converter/ConditionalShowHide.py
index 868d348..311790c 100644
--- a/lib/python/Components/Converter/ConditionalShowHide.py
+++ b/lib/python/Components/Converter/ConditionalShowHide.py
@@ -14,6 +14,10 @@ class ConditionalShowHide(Converter, object):
 		else:
 			self.timer = None
 
+	# Make ConditionalShowHide transparent to upstream attribute requests
+	def __getattr__(self, name):
+		return getattr(self.source, name)
+
 	def blinkFunc(self):
 		if self.blinking:
 			for x in self.downstream_elements:
@@ -47,6 +51,7 @@ class ConditionalShowHide(Converter, object):
 		else:
 			for x in self.downstream_elements:
 				x.visible = vis
+		super(Converter, self).changed(what)
 
 	def connectDownstream(self, downstream):
 		Converter.connectDownstream(self, downstream)
diff --git a/lib/python/Components/Converter/FrontendInfo.py b/lib/python/Components/Converter/FrontendInfo.py
index 7e20cc9..776af80 100644
--- a/lib/python/Components/Converter/FrontendInfo.py
+++ b/lib/python/Components/Converter/FrontendInfo.py
@@ -2,8 +2,10 @@ from Components.Converter.Converter import Converter
 from Components.Element import cached
 from Components.config import config
 from Components.NimManager import nimmanager
+from skin import parameters
+from Tools.Hex2strColor import Hex2strColor
 
-class FrontendInfo(Converter, object):
+class FrontendInfo(Converter):
 	BER = 0
 	SNR = 1
 	AGC = 2
@@ -44,6 +46,7 @@ class FrontendInfo(Converter, object):
 		assert self.type not in (self.LOCK, self.SLOT_NUMBER), "the text output of FrontendInfo cannot be used for lock info"
 		percent = None
 		swapsnr = config.usage.swap_snr_on_osd.value
+		colors = parameters.get("FrontendInfoColors", (0x0000FF00, 0x00FFFF00, 0x007F7F7F)) # tuner active, busy, available colors
 		if self.type == self.BER: # as count
 			count = self.source.ber
 			if count is not None:
@@ -54,23 +57,23 @@ class FrontendInfo(Converter, object):
 			percent = self.source.agc
 		elif (self.type == self.SNR and not swapsnr) or (self.type == self.SNRdB and swapsnr):
 			percent = self.source.snr
-		elif self.type  == self.SNR or self.type == self.SNRdB:
+		elif self.type == self.SNR or self.type == self.SNRdB:
 			if self.source.snr_db is not None:
 				return _("%3.01f dB") % (self.source.snr_db / 100.0)
 			elif self.source.snr is not None: #fallback to normal SNR...
 				percent = self.source.snr
 		elif self.type == self.TUNER_TYPE:
-			return self.source.frontend_type and self.frontend_type or "Unknown"
+			return self.source.frontend_type or _("Unknown")
 		elif self.type == self.STRING:
 			string = ""
 			for n in nimmanager.nim_slots:
 				if n.type:
 					if n.slot == self.source.slot_number:
-						color = "\c0000??00"
+						color = Hex2strColor(colors[0])
 					elif self.source.tuner_mask & 1 << n.slot:
-						color = "\c00????00"
+						color = Hex2strColor(colors[1])
 					elif len(nimmanager.nim_slots) <= self.space_for_tuners or self.show_all_non_link_tuners and not (n.isFBCLink() or n.internally_connectable):
-						color = "\c007?7?7?"
+						color = Hex2strColor(colors[2])
 					else:
 						continue
 					if string and len(nimmanager.nim_slots) <= self.space_for_tuners_with_spaces:
@@ -82,14 +85,14 @@ class FrontendInfo(Converter, object):
 			for n in nimmanager.nim_slots:
 				if n.type:
 					if n.slot == self.source.slot_number:
-						color = "\c0000??00"
+						color = Hex2strColor(colors[0])
 					elif self.source.tuner_mask & 1 << n.slot:
-						color = "\c00????00"
+						color = Hex2strColor(colors[1])
 					else:
 						continue
 					if string:
 						string += " "
-					string += color + chr(ord("A")+n.slot)
+					string += color + chr(ord("A") + n.slot)
 			return string
 		if percent is None:
 			return _("N/A")
diff --git a/lib/python/Components/Converter/PliExtraInfo.py b/lib/python/Components/Converter/PliExtraInfo.py
index 639d194..209a84e 100755
--- a/lib/python/Components/Converter/PliExtraInfo.py
+++ b/lib/python/Components/Converter/PliExtraInfo.py
@@ -7,7 +7,9 @@ from Components.Element import cached
 from Components.config import config
 from Tools.Transponder import ConvertToHumanReadable, getChannelNumber
 from Tools.GetEcmInfo import GetEcmInfo
+from Tools.Hex2strColor import Hex2strColor
 from Poll import Poll
+from skin import parameters
 
 caid_data = (
 	("0x1700", "0x17ff", "BetaCrypt",        "B",     True ),
@@ -120,24 +122,25 @@ class PliExtraInfo(Poll, Converter, object):
 	def createCryptoBar(self, info):
 		res = ""
 		available_caids = info.getInfoObject(iServiceInformation.sCAIDs)
+		colors = parameters.get("PliExtraInfoColors", (0x0000FF00, 0x00FFFF00, 0x007F7F7F, 0x00FFFFFF)) # "found", "not found", "available", "default" colors
 
 		for caid_entry in caid_data:
 			if int(caid_entry[0], 16) <= int(self.current_caid, 16) <= int(caid_entry[1], 16):
-				color="\c0000??00"
+				color = Hex2strColor(colors[0]) # green
 			else:
-				color = "\c007?7?7?"
+				color = Hex2strColor(colors[2]) # grey
 				try:
 					for caid in available_caids:
 						if int(caid_entry[0], 16) <= caid <= int(caid_entry[1], 16):
-							color="\c00????00"
+							color = Hex2strColor(colors[1]) # yellow
 				except:
 					pass
 
-			if color != "\c007?7?7?" or caid_entry[4]:
+			if color != Hex2strColor(colors[2]) or caid_entry[4]:
 				if res: res += " "
 				res += color + caid_entry[3]
 
-		res += "\c00??????"
+		res += Hex2strColor(colors[3]) # white (this acts like a color "reset" for following strings
 		return res
 
 
@@ -207,7 +210,7 @@ class PliExtraInfo(Poll, Converter, object):
 		return str(video_width) + "x" + str(video_height) + video_pol + fps + addspace(gamma)
 
 	def createVideoCodec(self, info):
-		return codec_data.get(info.getInfo(iServiceInformation.sVideoType), "N/A")
+		return codec_data.get(info.getInfo(iServiceInformation.sVideoType), _("N/A"))
 
 	def createServiceRef(self, info):
 		return info.getInfoString(iServiceInformation.sServiceref)
@@ -546,6 +549,9 @@ class PliExtraInfo(Poll, Converter, object):
 		if self.type == "TerrestrialChannelNumber":
 			return self.createChannelNumber(fedata, feraw)
 
+		if self.type == "TransponderInfoMisPls":
+			return self.createMisPls(fedata)
+
 		return _("invalid type")
 
 	text = property(getText)
diff --git a/lib/python/Components/Converter/TemplatedMultiContent.py b/lib/python/Components/Converter/TemplatedMultiContent.py
index 3f590a4..9321444 100644
--- a/lib/python/Components/Converter/TemplatedMultiContent.py
+++ b/lib/python/Components/Converter/TemplatedMultiContent.py
@@ -2,23 +2,22 @@ from Components.Converter.StringList import StringList
 
 class TemplatedMultiContent(StringList):
 	"""Turns a python tuple list into a multi-content list which can be used in a listbox renderer."""
+
 	def __init__(self, args):
 		StringList.__init__(self, args)
-		from enigma import eListboxPythonMultiContent, gFont, RT_HALIGN_LEFT, RT_HALIGN_CENTER, RT_HALIGN_RIGHT, RT_VALIGN_TOP, RT_VALIGN_CENTER, RT_VALIGN_BOTTOM, RT_WRAP, BT_SCALE
+		from enigma import BT_SCALE, RT_HALIGN_CENTER, RT_HALIGN_LEFT, RT_HALIGN_RIGHT, RT_VALIGN_BOTTOM, RT_VALIGN_CENTER, RT_VALIGN_TOP, RT_WRAP, eListboxPythonMultiContent, gFont
 		from skin import parseFont
-		from Components.MultiContent import MultiContentEntryText, MultiContentEntryPixmap, MultiContentEntryPixmapAlphaTest, MultiContentEntryPixmapAlphaBlend, MultiContentTemplateColor, MultiContentEntryProgress, MultiContentEntryProgressPixmap 
-		l = locals()
-		del l["self"] # cleanup locals a bit
-		del l["args"]
-
+		from Components.MultiContent import MultiContentEntryPixmap, MultiContentEntryPixmapAlphaBlend, MultiContentEntryPixmapAlphaTest, MultiContentEntryProgress, MultiContentEntryProgressPixmap, MultiContentEntryText, MultiContentTemplateColor
+		loc = locals()
+		del loc["self"]  # Cleanup locals a bit.
+		del loc["args"]
 		self.active_style = None
-		self.template = eval(args, {}, l)
+		self.template = eval(args, {}, loc)
 		assert "fonts" in self.template
 		assert "itemHeight" in self.template
 		assert "template" in self.template or "templates" in self.template
-		assert "template" in self.template or "default" in self.template["templates"] # we need to have a default template
-
-		if not "template" in self.template: # default template can be ["template"] or ["templates"]["default"]
+		assert "template" in self.template or "default" in self.template["templates"]  # We need to have a default template.
+		if "template" not in self.template:  # Default template can be ["template"] or ["templates"]["default"].
 			self.template["template"] = self.template["templates"]["default"][1]
 			self.template["itemHeight"] = self.template["template"][0]
 
@@ -26,44 +25,32 @@ class TemplatedMultiContent(StringList):
 		if not self.content:
 			from enigma import eListboxPythonMultiContent
 			self.content = eListboxPythonMultiContent()
-
-			# also setup fonts (also given by source)
-			index = 0
-			for f in self.template["fonts"]:
-				self.content.setFont(index, f)
-				index += 1
-
-		# if only template changed, don't reload list
-		if what[0] == self.CHANGED_SPECIFIC and what[1] == "style":
+			for index, font in enumerate(self.template["fonts"]):  # Setup fonts (also given by source).
+				self.content.setFont(index, font)
+		if what[0] == self.CHANGED_SPECIFIC and what[1] == "style":  # If only template changed, don't reload list.
 			pass
 		elif self.source:
 			self.content.setList(self.source.list)
-
 		self.setTemplate()
 		self.downstream_elements.changed(what)
 
 	def setTemplate(self):
 		if self.source:
 			style = self.source.style
-
 			if style == self.active_style:
 				return
-
-			# if skin defined "templates", that means that it defines multiple styles in a dict. template should still be a default
-			templates = self.template.get("templates")
+			templates = self.template.get("templates")  # If skin defined "templates", that means that it defines multiple styles in a dict. template should still be a default.
 			template = self.template.get("template")
 			itemheight = self.template["itemHeight"]
 			selectionEnabled = self.template.get("selectionEnabled", True)
 			scrollbarMode = self.template.get("scrollbarMode", "showOnDemand")
-
-			if templates and style and style in templates: # if we have a custom style defined in the source, and different templates in the skin, look it up
+			if templates and style and style in templates:  # If we have a custom style defined in the source, and different templates in the skin, look it up
 				template = templates[style][1]
 				itemheight = templates[style][0]
 				if len(templates[style]) > 2:
 					selectionEnabled = templates[style][2]
 				if len(templates[style]) > 3:
 					scrollbarMode = templates[style][3]
-
 			self.content.setTemplate(template)
 			self.content.setItemHeight(itemheight)
 			self.selectionEnabled = selectionEnabled
diff --git a/lib/python/Components/EpgList.py b/lib/python/Components/EpgList.py
index 25b8f53..59347f6 100644
--- a/lib/python/Components/EpgList.py
+++ b/lib/python/Components/EpgList.py
@@ -1,19 +1,10 @@
-import skin
-from time import localtime, time, strftime
+from enigma import eRect
 
-from enigma import eEPGCache, eListbox, eListboxPythonMultiContent, loadPNG, gFont, getDesktop, eRect, eSize, RT_HALIGN_LEFT, RT_HALIGN_RIGHT, RT_HALIGN_CENTER, RT_VALIGN_CENTER, RT_VALIGN_TOP, RT_WRAP, BT_SCALE, BT_KEEP_ASPECT_RATIO, BT_ALIGN_CENTER
-
-from GUIComponent import GUIComponent
-from Components.MultiContent import MultiContentEntryText, MultiContentEntryPixmapAlphaBlend, MultiContentEntryPixmapAlphaTest
-from Components.Renderer.Picon import getPiconName
-from skin import parseColor, parseFont
-from Tools.Alternatives import CompareWithAlternatives
-from Tools.LoadPixmap import LoadPixmap
-from Components.config import config
-from ServiceReference import ServiceReference
-from Tools.Directories import resolveFilename, SCOPE_ACTIVE_SKIN
-from Tools.TextBoundary import getTextBoundarySize
+from config import config
+from Components.EpgListSingle import EPGListSingle
+import Screens.InfoBar
 
+# Keep const values for backward compatibility with plugins.
 EPG_TYPE_SINGLE = 0
 EPG_TYPE_MULTI = 1
 EPG_TYPE_SIMILAR = 2
@@ -22,8 +13,8 @@ EPG_TYPE_INFOBAR = 4
 EPG_TYPE_GRAPH = 5
 EPG_TYPE_INFOBARGRAPH = 7
 
-MAX_TIMELINES = 6
 
+# Keep for backward compatibility, some plugins import this.
 class Rect:
 	def __init__(self, x, y, width, height):
 		self.x = x
@@ -31,7 +22,6 @@ class Rect:
 		self.w = width
 		self.h = height
 
-	# silly, but backward compatible
 	def left(self):
 		return self.x
 
@@ -44,1876 +34,69 @@ class Rect:
 	def width(self):
 		return self.w
 
-# Various value are in minutes, while others are in seconds.
-# Use this to remind us what is going on...
-#
-SECS_IN_MIN = 60
-
-class EPGList(GUIComponent):
-	def __init__(self, type = EPG_TYPE_SINGLE, selChangedCB = None, timer = None, time_epoch = 120, overjump_empty = False, graphic=False):
-		self.cur_event = None
-		self.cur_service = None
-		self.time_focus = time() # default to now
-		self.time_base = None
-		self.time_epoch = time_epoch
-		self.select_rect = None
-		self.event_rect = None
-		self.service_rect = None
-		self.currentlyPlaying = None
-		self.showPicon = False
-		self.showServiceTitle = True
-		self.showServiceNumber = False
-		self.screenwidth = getDesktop(0).size().width()
-		self.overjump_empty = overjump_empty
-		self.timer = timer
-		self.onSelChanged = [ ]
-		if selChangedCB is not None:
-			self.onSelChanged.append(selChangedCB)
-		GUIComponent.__init__(self)
-		self.type = type
-		self.graphic = graphic
-		self.l = eListboxPythonMultiContent()
-
-		if type == EPG_TYPE_SINGLE or type == EPG_TYPE_ENHANCED or type == EPG_TYPE_INFOBAR:
-			self.l.setBuildFunc(self.buildSingleEntry)
-		elif type == EPG_TYPE_MULTI:
-			self.l.setBuildFunc(self.buildMultiEntry)
-		elif type == EPG_TYPE_GRAPH or type == EPG_TYPE_INFOBARGRAPH:
-			self.l.setBuildFunc(self.buildGraphEntry)
-			if self.type == EPG_TYPE_GRAPH:
-				value = config.epgselection.graph_servicetitle_mode.value
-				round_by = int(config.epgselection.graph_roundto.value)
-			elif self.type == EPG_TYPE_INFOBARGRAPH:
-				value = config.epgselection.infobar_servicetitle_mode.value
-				round_by = int(config.epgselection.infobar_roundto.value)
-			self.round_by_secs = round_by * SECS_IN_MIN
-			self.time_epoch_secs = time_epoch * SECS_IN_MIN
-			self.showServiceNumber = "servicenumber" in value
-			self.showServiceTitle = "servicename" in value
-			self.showPicon = "picon" in value
-		else:
-			assert(type == EPG_TYPE_SIMILAR)
-			self.l.setBuildFunc(self.buildSimilarEntry)
-		self.epgcache = eEPGCache.getInstance()
-
-		# Common clock icons
-		add = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'icons/epgclock_add.png'))
-		pre = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'icons/epgclock_pre.png'))
-		clock = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'icons/epgclock.png'))
-		zap = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'icons/epgclock_zap.png'))
-		zaprec = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'icons/epgclock_zaprec.png'))
-		prepost = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'icons/epgclock_prepost.png'))
-		post = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'icons/epgclock_post.png'))
-		self.clocks = [
-			add, pre, clock, prepost, post,
-			add, pre, zap, prepost, post,
-			add, pre, zaprec, prepost, post,
-			add, pre, clock, prepost, post]
-
-		# Common selected clock icons
-		pre = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'icons/epgclock_selpre.png'))
-		prepost = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'icons/epgclock_selprepost.png'))
-		post = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'icons/epgclock_selpost.png'))
-		self.selclocks = [
-			add, pre, clock, prepost, post,
-			add, pre, zap, prepost, post,
-			add, pre, zaprec, prepost, post]
-
-		self.autotimericon = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'icons/epgclock_autotimer.png'))
-
-		self.nowEvPix = None
-		self.nowSelEvPix = None
-		self.othEvPix = None
-		self.selEvPix = None
-		self.othServPix = None
-		self.nowServPix = None
-		self.recEvPix = None
-		self.recSelEvPix = None
-		self.zapEvPix = None
-		self.zapSelEvPix = None
-
-		self.borderTopPix = None
-		self.borderBottomPix = None
-		self.borderLeftPix = None
-		self.borderRightPix = None
-		self.borderSelectedTopPix = None
-		self.borderSelectedLeftPix = None
-		self.borderSelectedBottomPix = None
-		self.borderSelectedRightPix = None
-		self.InfoPix = None
-		self.selInfoPix = None
-		self.graphicsloaded = False
-
-		self.borderColor = 0xC0C0C0
-		self.borderColorService = 0xC0C0C0
-
-		self.foreColor = 0xffffff
-		self.foreColorSelected = 0xffffff
-		self.backColor = 0x2D455E
-		self.backColorSelected = 0xd69600
-		self.foreColorService = 0xffffff
-		self.backColorService = 0x2D455E
-		self.foreColorNow = 0xffffff
-		self.foreColorNowSelected = 0xffffff
-		self.backColorNow = 0x00825F
-		self.backColorNowSelected = 0xd69600
-		self.foreColorServiceNow = 0xffffff
-		self.backColorServiceNow = 0x00825F
-
-		self.foreColorRecord = 0xffffff
-		self.backColorRecord = 0xd13333
-		self.foreColorRecordSelected = 0xffffff
-		self.backColorRecordSelected = 0x9e2626
-		self.foreColorZap = 0xffffff
-		self.backColorZap = 0x669466
-		self.foreColorZapSelected = 0xffffff
-		self.backColorZapSelected = 0x436143
-
-		self.serviceFontNameGraph = "Regular"
-		self.eventFontNameGraph = "Regular"
-		self.eventFontNameSingle = "Regular"
-		self.eventFontNameMulti = "Regular"
-		self.serviceFontNameInfobar = "Regular"
-		self.eventFontNameInfobar = "Regular"
-
-		if self.screenwidth and self.screenwidth == 1920:
-			self.serviceFontSizeGraph = 28
-			self.eventFontSizeGraph = 28
-			self.eventFontSizeSingle = 28
-			self.eventFontSizeMulti = 28
-			self.serviceFontSizeInfobar = 28
-			self.eventFontSizeInfobar = 28
-		else:
-			self.serviceFontSizeGraph = 20
-			self.eventFontSizeGraph = 20
-			self.eventFontSizeSingle = 20
-			self.eventFontSizeMulti = 20
-			self.serviceFontSizeInfobar = 20
-			self.eventFontSizeInfobar = 20
-
-		self.listHeight = None
-		self.listWidth = None
-		self.serviceBorderWidth = 1
-		self.serviceNamePadding = 3
-		self.serviceNumberPadding = 9
-		self.eventBorderWidth = 1
-		self.eventNamePadding = 3
-		self.NumberOfRows = None
-		self.serviceNumberWidth = 0
-
-	def applySkin(self, desktop, screen):
-		if self.skinAttributes is not None:
-			attribs = [ ]
-			for (attrib, value) in self.skinAttributes:
-				if attrib == "ServiceFontGraphical":
-					font = parseFont(value, ((1,1),(1,1)) )
-					self.serviceFontNameGraph = font.family
-					self.serviceFontSizeGraph = font.pointSize
-				elif attrib == "EntryFontGraphical":
-					font = parseFont(value, ((1,1),(1,1)) )
-					self.eventFontNameGraph = font.family
-					self.eventFontSizeGraph = font.pointSize
-				elif attrib == "ServiceFontInfobar":
-					font = parseFont(value, ((1,1),(1,1)) )
-					self.serviceFontNameInfobar = font.family
-					self.serviceFontSizeInfobar = font.pointSize
-				elif attrib == "EventFontInfobar":
-					font = parseFont(value, ((1,1),(1,1)) )
-					self.eventFontNameInfobar = font.family
-					self.eventFontSizeInfobar = font.pointSize
-				elif attrib == "EventFontSingle":
-					font = parseFont(value, ((1,1),(1,1)) )
-					self.eventFontNameSingle = font.family
-					self.eventFontSizeSingle = font.pointSize
-
-				elif attrib == "ServiceForegroundColor":
-					self.foreColorService = parseColor(value).argb()
-				elif attrib == "ServiceForegroundColorNow":
-					self.foreColorServiceNow = parseColor(value).argb()
-				elif attrib == "ServiceBackgroundColor":
-					self.backColorService = parseColor(value).argb()
-				elif attrib == "ServiceBackgroundColorNow":
-					self.backColorServiceNow = parseColor(value).argb()
-
-				elif attrib == "EntryForegroundColor":
-					self.foreColor = parseColor(value).argb()
-				elif attrib == "EntryForegroundColorSelected":
-					self.foreColorSelected = parseColor(value).argb()
-				elif attrib == "EntryBackgroundColor":
-					self.backColor = parseColor(value).argb()
-				elif attrib == "EntryBackgroundColorSelected":
-					self.backColorSelected = parseColor(value).argb()
-				elif attrib == "EntryBackgroundColorNow":
-					self.backColorNow = parseColor(value).argb()
-				elif attrib == "EntryBackgroundColorNowSelected":
-					self.backColorNowSelected = parseColor(value).argb()
-				elif attrib == "EntryForegroundColorNow":
-					self.foreColorNow = parseColor(value).argb()
-				elif attrib == "EntryForegroundColorNowSelected":
-					self.foreColorNowSelected = parseColor(value).argb()
-
-				elif attrib == "ServiceBorderColor":
-					self.borderColorService = parseColor(value).argb()
-				elif attrib == "ServiceBorderWidth":
-					self.serviceBorderWidth = int(value)
-				elif attrib == "ServiceNamePadding":
-					self.serviceNamePadding = int(value)
-				elif attrib == "ServiceNumberPadding":
-					self.serviceNumberPadding = int(value)
-				elif attrib == "EntryBorderColor":
-					self.borderColor = parseColor(value).argb()
-				elif attrib == "EventBorderWidth":
-					self.eventBorderWidth = int(value)
-				elif attrib == "EventNamePadding":
-					self.eventNamePadding = int(value)
-
-				elif attrib == "RecordForegroundColor":
-					self.foreColorRecord = parseColor(value).argb()
-				elif attrib == "RecordForegroundColorSelected":
-					self.foreColorRecordSelected = parseColor(value).argb()
-				elif attrib == "RecordBackgroundColor":
-					self.backColorRecord = parseColor(value).argb()
-				elif attrib == "RecordBackgroundColorSelected":
-					self.backColorRecordSelected = parseColor(value).argb()
-				elif attrib == "ZapForegroundColor":
-					self.foreColorZap = parseColor(value).argb()
-				elif attrib == "ZapBackgroundColor":
-					self.backColorZap = parseColor(value).argb()
-				elif attrib == "ZapForegroundColorSelected":
-					self.foreColorZapSelected = parseColor(value).argb()
-				elif attrib == "ZapBackgroundColorSelected":
-					self.backColorZapSelected = parseColor(value).argb()
-				elif attrib == "NumberOfRows":
-					self.NumberOfRows = int(value)
-				else:
-					attribs.append((attrib,value))
-			self.skinAttributes = attribs
-		rc = GUIComponent.applySkin(self, desktop, screen)
-		self.listHeight = self.instance.size().height()
-		self.listWidth = self.instance.size().width()
-		self.setItemsPerPage()
-		self.setFontsize()
-
-		# cache service number width
-		if self.showServiceNumber:
-			font_conf = None
-			if self.type == EPG_TYPE_GRAPH:
-				font_conf = config.epgselection.graph_servfs.value
-			elif self.type == EPG_TYPE_INFOBARGRAPH:
-				font_conf = config.epgselection.infobar_servfs.value
-			if font_conf != None:
-				font = gFont(self.serviceFontNameGraph, self.serviceFontSizeGraph + font_conf)
-				self.serviceNumberWidth = getTextBoundarySize(self.instance, font, self.instance.size(), "0000" ).width()
 
-		return rc
-
-	def getCurrentChangeCount(self):
-		if self.type == EPG_TYPE_MULTI and self.l.getCurrentSelection() is not None:
-			return self.l.getCurrentSelection()[0]
-		return 0
-
-	def isSelectable(self, service, service_name, events, picon, channel):
-		return (events and len(events) and True) or False
-
-	def setTimeFocus(self, time_focus):
-		self.time_focus = time_focus
-
-	def setOverjump_Empty(self, overjump_empty):
-		if overjump_empty:
-			self.l.setSelectableFunc(self.isSelectable)
-		else:
-			self.l.setSelectableFunc(None)
-
-	def setTimeEpoch(self, epoch):
-		self.time_epoch = epoch
-		self.time_epoch_secs = epoch * SECS_IN_MIN
-		self.fillGraphEPG(None)
-
-	def getTimeEpoch(self):
-		return self.time_epoch
-
-	def setCurrentlyPlaying(self, serviceref):
-		self.currentlyPlaying = serviceref
-
-	def getEventFromId(self, service, eventid):
-		event = None
-		if self.epgcache is not None and eventid is not None:
-			event = self.epgcache.lookupEventId(service.ref, eventid)
-		return event
-
-	def getIndexFromService(self, serviceref):
-		if serviceref is not None:
-			for x in range(len(self.list)):
-				if CompareWithAlternatives(self.list[x][0], serviceref):
-					return x
-				if CompareWithAlternatives(self.list[x][1], serviceref):
-					return x
-		return None
-
-	def getCurrentIndex(self):
-		return self.instance.getCurrentIndex()
-
-	def moveToService(self, serviceref):
-		if not serviceref:
-			return
-		newIdx = self.getIndexFromService(serviceref)
-		if newIdx is None:
-			newIdx = 0
-		self.setCurrentIndex(newIdx)
-
-	def setCurrentIndex(self, index):
-		if self.instance is not None:
-			self.instance.moveSelectionTo(index)
-
-	def moveTo(self, dir):
-		if self.instance is not None:
-			self.instance.moveSelection(dir)
-
-	def getCurrent(self):
-		if self.type == EPG_TYPE_GRAPH or self.type == EPG_TYPE_INFOBARGRAPH:
-			if self.cur_service is None:
-				return None, None
-			events = self.cur_service[2]
-			refstr = self.cur_service[0]
-			if self.cur_event is None or not events or (self.cur_event and events and self.cur_event > len(events)-1):
-				return None, ServiceReference(refstr)
-			event = events[self.cur_event] #(event_id, event_title, begin_time, duration)
-			eventid = event[0]
-			service = ServiceReference(refstr)
-			event = self.getEventFromId(service, eventid) # get full event info
-			return event, service
-		else:
-			idx = 0
-			if self.type == EPG_TYPE_MULTI:
-				idx += 1
-			tmp = self.l.getCurrentSelection()
-			if tmp is None:
-				return None, None
-			eventid = tmp[idx+1]
-			service = ServiceReference(tmp[idx])
-			event = self.getEventFromId(service, eventid)
-			return event, service
-
-	def connectSelectionChanged(func):
-		if not self.onSelChanged.count(func):
-			self.onSelChanged.append(func)
-
-	def disconnectSelectionChanged(func):
-		self.onSelChanged.remove(func)
-
-	def serviceChanged(self):
-		cur_sel = self.l.getCurrentSelection()
-		if cur_sel:
-			self.selectEventFromTime()
-			self.selEntry(0)
-
-	def selectEventFromTime(self):
-		cur_service = self.cur_service = self.l.getCurrentSelection()
-		if cur_service:
-			self.cur_event = None
-			events = cur_service[2]
-			if events and len(events):
-				self.cur_event = 0
-				if self.time_focus >= events[0][2]:
-					for event in events: #iterate all events
-						ev_time = event[2]
-						ev_end_time = ev_time + event[3]
-						self.cur_event += 1
-						if ev_time <= self.time_focus < ev_end_time:
-							break
-					self.cur_event -= 1
-
-	def setTimeFocusFromEvent(self, cur_event):
-		cur_service = self.l.getCurrentSelection()
-		if cur_service:
-			events = cur_service[2]
-			if events and len(events):
-				self.cur_event = max(min(len(events) - 1, cur_event), 0)
-				event = events[self.cur_event]
-
-				# clip the selected event times to the current screen
-				time_base = self.getTimeBase()
-				ev_time = max(time_base, event[2])
-				ev_end_time = min(event[2] + event[3], time_base + self.time_epoch_secs)
-				if ev_time <= time() < ev_end_time:
-					# selected event contains the current time, user is interested in current things
-					self.time_focus = time()
-				else:
-					# user is looking at things roughly around the middle of the selected event
-					self.time_focus = ev_time + (ev_end_time - ev_time) / 2
-		else:
-			self.cur_event = None
-		self.selEntry(0)
-
-	def selectionChanged(self):
-		for x in self.onSelChanged:
-			if x is not None:
-				x()
-
-	GUI_WIDGET = eListbox
-
-	def setItemsPerPage(self):
-		if self.type == EPG_TYPE_GRAPH or self.type == EPG_TYPE_INFOBARGRAPH:
-			if self.type == EPG_TYPE_GRAPH:
-				if self.listHeight > 0:
-					itemHeight = self.listHeight / config.epgselection.graph_itemsperpage.value
-				else:
-					itemHeight = 54 # some default (270/5)
-				if config.epgselection.graph_heightswitch.value:
-					if ((self.listHeight / config.epgselection.graph_itemsperpage.value) / 3) >= 27:
-						tmp_itemHeight = ((self.listHeight / config.epgselection.graph_itemsperpage.value) / 3)
-					elif ((self.listHeight / config.epgselection.graph_itemsperpage.value) / 2) >= 27:
-						tmp_itemHeight = ((self.listHeight / config.epgselection.graph_itemsperpage.value) / 2)
-					else:
-						tmp_itemHeight = 27
-					if tmp_itemHeight < itemHeight:
-						itemHeight = tmp_itemHeight
-					else:
-						if ((self.listHeight / config.epgselection.graph_itemsperpage.value) * 3) <= 45:
-							itemHeight = ((self.listHeight / config.epgselection.graph_itemsperpage.value) * 3)
-						elif ((self.listHeight / config.epgselection.graph_itemsperpage.value) * 2) <= 45:
-							itemHeight = ((self.listHeight / config.epgselection.graph_itemsperpage.value) * 2)
-						else:
-							itemHeight = 45
-				if self.NumberOfRows:
-					config.epgselection.graph_itemsperpage.default = self.NumberOfRows
-			elif self.type == EPG_TYPE_INFOBARGRAPH:
-				if self.NumberOfRows:
-					config.epgselection.infobar_itemsperpage.default = self.NumberOfRows
-				if self.listHeight > 0:
-					itemHeight = self.listHeight / config.epgselection.infobar_itemsperpage.value
-				else:
-					itemHeight = 54 # some default (270/5)
-			self.l.setItemHeight(itemHeight)
-			self.instance.resize(eSize(self.listWidth, self.listHeight / itemHeight * itemHeight))
-			self.listHeight = self.instance.size().height()
-			self.listWidth = self.instance.size().width()
-			self.itemHeight = itemHeight
-
-		elif self.type == EPG_TYPE_ENHANCED or self.type == EPG_TYPE_SINGLE or self.type == EPG_TYPE_SIMILAR:
-			if self.NumberOfRows:
-				config.epgselection.enhanced_itemsperpage.default = self.NumberOfRows
-			if self.listHeight > 0:
-				itemHeight = self.listHeight / config.epgselection.enhanced_itemsperpage.value
-			else:
-				itemHeight = 32
-			if itemHeight < 20:
-				itemHeight = 20
-			self.l.setItemHeight(itemHeight)
-			self.instance.resize(eSize(self.listWidth, self.listHeight / itemHeight * itemHeight))
-			self.listHeight = self.instance.size().height()
-			self.listWidth = self.instance.size().width()
-			self.itemHeight = itemHeight
-		elif self.type == EPG_TYPE_MULTI:
-			if self.NumberOfRows:
-				config.epgselection.multi_itemsperpage.default = self.NumberOfRows
-			if self.listHeight > 0:
-				itemHeight = self.listHeight / config.epgselection.multi_itemsperpage.value
-			else:
-				itemHeight = 32
-			if itemHeight < 20:
-				itemHeight = 20
-			self.l.setItemHeight(itemHeight)
-			self.instance.resize(eSize(self.listWidth, self.listHeight / itemHeight * itemHeight))
-			self.listHeight = self.instance.size().height()
-			self.listWidth = self.instance.size().width()
-			self.itemHeight = itemHeight
-		elif self.type == EPG_TYPE_INFOBAR:
-			if self.NumberOfRows:
-				config.epgselection.infobar_itemsperpage.default = self.NumberOfRows
-			if self.listHeight > 0:
-				itemHeight = self.listHeight / config.epgselection.infobar_itemsperpage.value
-			else:
-				itemHeight = 32
-			if itemHeight < 20:
-				itemHeight = 20
-			self.l.setItemHeight(int(itemHeight))
-			self.instance.resize(eSize(self.listWidth, self.listHeight / itemHeight * itemHeight))
-			self.listHeight = self.instance.size().height()
-			self.listWidth = self.instance.size().width()
-			self.itemHeight = itemHeight
-
-	def setFontsize(self):
-		if self.type == EPG_TYPE_GRAPH:
-			self.l.setFont(0, gFont(self.serviceFontNameGraph, self.serviceFontSizeGraph + config.epgselection.graph_servfs.value))
-			self.l.setFont(1, gFont(self.eventFontNameGraph, self.eventFontSizeGraph + config.epgselection.graph_eventfs.value))
-		elif self.type == EPG_TYPE_ENHANCED or self.type == EPG_TYPE_SINGLE or self.type == EPG_TYPE_SIMILAR:
-			self.l.setFont(0, gFont(self.eventFontNameSingle, self.eventFontSizeSingle + config.epgselection.enhanced_eventfs.value))
-		elif self.type == EPG_TYPE_MULTI:
-			self.l.setFont(0, gFont(self.eventFontNameMulti, self.eventFontSizeMulti + config.epgselection.multi_eventfs.value))
-			self.l.setFont(1, gFont(self.eventFontNameMulti, self.eventFontSizeMulti - 4 + config.epgselection.multi_eventfs.value))
-		elif self.type == EPG_TYPE_INFOBAR:
-			self.l.setFont(0, gFont(self.eventFontNameInfobar, self.eventFontSizeInfobar + config.epgselection.infobar_eventfs.value))
-		elif self.type == EPG_TYPE_INFOBARGRAPH:
-			self.l.setFont(0, gFont(self.serviceFontNameInfobar, self.serviceFontSizeInfobar + config.epgselection.infobar_servfs.value))
-			self.l.setFont(1, gFont(self.eventFontNameInfobar, self.eventFontSizeInfobar + config.epgselection.infobar_eventfs.value))
-
-	def postWidgetCreate(self, instance):
-		if self.type == EPG_TYPE_GRAPH or self.type == EPG_TYPE_INFOBARGRAPH:
-			self.setOverjump_Empty(self.overjump_empty)
-			instance.setWrapAround(True)
-			instance.selectionChanged.get().append(self.serviceChanged)
-			instance.setContent(self.l)
-			self.l.setSelectionClip(eRect(0,0,0,0), False)
-		else:
-			instance.setWrapAround(False)
-			instance.selectionChanged.get().append(self.selectionChanged)
-			instance.setContent(self.l)
-
-	def preWidgetRemove(self, instance):
-		if self.type == EPG_TYPE_GRAPH or self.type == EPG_TYPE_INFOBARGRAPH:
-			instance.selectionChanged.get().remove(self.serviceChanged)
-			instance.setContent(None)
-		else:
-			instance.selectionChanged.get().remove(self.selectionChanged)
-			instance.setContent(None)
-
-	def selectionEnabled(self, enabled):
-		if self.instance is not None:
-			self.instance.setSelectionEnable(enabled)
+# Keep for backwards compatibility with plugins, including the parameter naming.
+class EPGList(EPGListSingle):
+	def __init__(self, type=EPG_TYPE_SINGLE, selChangedCB=None, timer=None, time_epoch=120, overjump_empty=False, graphic=False):
+		if type != EPG_TYPE_SINGLE:
+			print "[EPGList] Warning: EPGList no longer supports", {
+				"infobar": "EPG_TYPE_INFOBAR",
+				"enhanced": "EPG_TYPE_ENHANCED",
+				"graph": "EPG_TYPE_GRAPH",
+				"infobargraph": "EPG_TYPE_INFOBARGRAPH",
+				"multi": "EPG_TYPE_MULTI",
+				None: "EPGtype == None"
+			}.get(type, type)
+			print "          attempting to continue in single EPG mode"
+		EPGListSingle.__init__(self, Screens.InfoBar.InfoBar.instance.session, config.epgselection.single, selChangedCB)
+
+		# Attributes for backwards compatibility.
+		self.eventFontSizeSingle = self.eventFontSize
+
+	# For backwards compatibility.
+	def buildSingleEntry(self, service, eventId, beginTime, duration, eventName):
+		return EPGListSingle.buildEntry(self, service, eventId, beginTime, duration, eventName)
 
 	def recalcEntrySize(self):
-		esize = self.l.getItemSize()
-		width = esize.width()
-		height = esize.height()
-		if self.type == EPG_TYPE_MULTI:
-			fontSize = self.eventFontSizeMulti + config.epgselection.multi_eventfs.value
-			servScale, timeScale, durScale, wideScale = skin.parameters.get("EPGMultiColumnScales", (13.1, 6.2, 4.5, 0.5))
-			# servW = int((fontSize + 4) * servScale)  # Service font is 4 px larger
-			servW = int(fontSize * servScale)
-			timeW = int(fontSize * timeScale)
-			durW = int(fontSize * durScale)
-			left, servWidth, sepWidth, timeWidth, progHeight, breakWidth, durWidth, gapWidth = skin.parameters.get("EPGMultiColumnSpecs", (0, servW, 10, timeW, height - 12, 8, durW, 10))
-			if config.usage.time.wide.value:
-				timeWidth = int(timeWidth * wideScale)
-			self.service_rect = Rect(left, 0, servWidth, height)
-			left += servWidth + sepWidth
-			self.start_end_rect = Rect(left, 0, timeWidth, height)
-			progTop = int((height - progHeight) / 2)
-			self.progress_rect = Rect(left, progTop, timeWidth, progHeight)
-			left += timeWidth + breakWidth
-			self.duration_rect = Rect(left, 0, durWidth, height)
-			left += durWidth + gapWidth
-			self.descr_rect = Rect(left, 0, width - left, height)
-		elif self.type == EPG_TYPE_GRAPH or self.type == EPG_TYPE_INFOBARGRAPH:
-			servicew = 0
-			piconw = 0
-			channelw = 0
-			if self.type == EPG_TYPE_GRAPH:
-				if self.showServiceTitle:
-					servicew = config.epgselection.graph_servicewidth.value + 2*self.serviceNamePadding
-				if self.showPicon:
-					piconw = config.epgselection.graph_piconwidth.value
-				if self.showServiceNumber:
-					channelw = self.serviceNumberWidth + 2*self.serviceNumberPadding
-			elif self.type == EPG_TYPE_INFOBARGRAPH:
-				if self.showServiceTitle:
-					servicew = config.epgselection.infobar_servicewidth.value + 2*self.serviceNamePadding
-				if self.showPicon:
-					piconw = config.epgselection.infobar_piconwidth.value
-				if self.showServiceNumber:
-					channelw = self.serviceNumberWidth + 2*self.serviceNumberPadding
-			w = (channelw + piconw + servicew)
-			self.service_rect = Rect(0, 0, w, height)
-			self.event_rect = Rect(w, 0, width - w, height)
-			piconHeight = height - 2 * self.serviceBorderWidth
-			piconWidth = piconw
-			if piconWidth > w - 2 * self.serviceBorderWidth:
-				piconWidth = w - 2 * self.serviceBorderWidth
-			self.picon_size = eSize(piconWidth, piconHeight)
-		else:
-			fontSize = self.eventFontSizeSingle + config.epgselection.enhanced_eventfs.value
-			dateScale, timesScale, wideScale = skin.parameters.get("EPGSingleColumnScales", (5.7, 6.0, 1.5))
-			dateW = int(fontSize * dateScale)
-			timesW = int(fontSize * timesScale)
-			left, dateWidth, sepWidth, timesWidth, breakWidth = skin.parameters.get("EPGSingleColumnSpecs", (0, dateW, 5, timesW, 20))
-			if config.usage.time.wide.value:
-				timesWidth = int(timesWidth * wideScale)
-			self.weekday_rect = Rect(left, 0, dateWidth, height)
-			left += dateWidth + sepWidth
-			self.datetime_rect = Rect(left, 0, timesWidth, height)
-			left += timesWidth + breakWidth
-			self.descr_rect = Rect(left, 0, width - left, height)
-			self.showend = True  # This is not an unused variable. It is a flag used by EPGSearch plugin
-
-	def calcEntryPosAndWidthHelper(self, stime, duration, start, end, width):
-		xpos = (stime - start) * width / (end - start)
-		ewidth = (stime + duration - start) * width / (end - start)
-		ewidth -= xpos
-		if xpos < 0:
-			ewidth += xpos
-			xpos = 0
-		if (xpos + ewidth) > width:
-			ewidth = width - xpos
-		return xpos, ewidth
-
-	def calcEntryPosAndWidth(self, event_rect, time_base, time_epoch_secs, ev_start, ev_duration):
-		xpos, width = self.calcEntryPosAndWidthHelper(ev_start, ev_duration, time_base, time_base + time_epoch_secs, event_rect.width())
-		return xpos + event_rect.left(), width
+		EPGListSingle.recalcEntrySize(self)
 
 	def getPixmapForEntry(self, service, eventId, beginTime, duration):
-		if not beginTime:
-			return None
-		rec = self.timer.isInTimer(eventId, beginTime, duration, service)
-		if rec is not None:
-			self.wasEntryAutoTimer = rec[2]
-			return rec[1]
+		timer, matchType = self.session.nav.RecordTimer.isInTimer(service, beginTime, duration)
+		if timer is not None:
+			if matchType == 3:
+				# recording whole event
+				timerType = 2 if timer.always_zap else 1 if timer.justplay else 0
+				return matchType + timerType
+			self.wasEntryAutoTimer = timer.isAutoTimer
+			return matchType
 		else:
 			self.wasEntryAutoTimer = False
 			return None
 
-	def buildSingleEntry(self, service, eventId, beginTime, duration, EventName):
-		clock_types = self.getPixmapForEntry(service, eventId, beginTime, duration)
-		r1 = self.weekday_rect
-		r2 = self.datetime_rect
-		r3 = self.descr_rect
-		split = int(r2.w * 0.55)
-		t = localtime(beginTime)
-		et = localtime(beginTime + duration)
-		res = [
-			None, # no private data needed
-			(eListboxPythonMultiContent.TYPE_TEXT, r1.x, r1.y, r1.w, r1.h, 0, RT_HALIGN_LEFT | RT_VALIGN_CENTER, strftime(config.usage.date.dayshort.value, t)),
-			(eListboxPythonMultiContent.TYPE_TEXT, r2.x, r2.y, split, r2.h, 0, RT_HALIGN_RIGHT | RT_VALIGN_CENTER, strftime(config.usage.time.short.value + " -", t)),
-			(eListboxPythonMultiContent.TYPE_TEXT, r2.x + split, r2.y, r2.w - split, r2.h, 0, RT_HALIGN_RIGHT | RT_VALIGN_CENTER, strftime(config.usage.time.short.value, et))
-		]
-		if clock_types:
-			if self.wasEntryAutoTimer and clock_types in (2,7,12):
-				if self.screenwidth and self.screenwidth == 1920:
-					res.extend((
-						(eListboxPythonMultiContent.TYPE_PIXMAP_ALPHABLEND, r3.x+r3.w-25, (r3.h/2-13), 25, 25, self.clocks[clock_types]),
-						(eListboxPythonMultiContent.TYPE_PIXMAP_ALPHABLEND, r3.x+r3.w-52, (r3.h/2-13), 25, 25, self.autotimericon),
-						(eListboxPythonMultiContent.TYPE_TEXT, r3.x, r3.y, r3.w-52, r3.h, 0, RT_HALIGN_LEFT|RT_VALIGN_CENTER, EventName)
-						))
-				else:
-					res.extend((
-						(eListboxPythonMultiContent.TYPE_PIXMAP_ALPHABLEND, r3.x+r3.w-21, (r3.h/2-11), 21, 21, self.clocks[clock_types]),
-						(eListboxPythonMultiContent.TYPE_PIXMAP_ALPHABLEND, r3.x+r3.w-42, (r3.h/2-11), 21, 21, self.autotimericon),
-						(eListboxPythonMultiContent.TYPE_TEXT, r3.x, r3.y, r3.w-42, r3.h, 0, RT_HALIGN_LEFT|RT_VALIGN_CENTER, EventName)
-						))
-			else:
-				if self.screenwidth and self.screenwidth == 1920:
-					res.extend((
-						(eListboxPythonMultiContent.TYPE_PIXMAP_ALPHABLEND, r3.x+r3.w-25, (r3.h/2-13), 25, 25, self.clocks[clock_types]),
-						(eListboxPythonMultiContent.TYPE_TEXT, r3.x, r3.y, r3.w-25, r3.h, 0, RT_HALIGN_LEFT|RT_VALIGN_CENTER, EventName)
-						))
-				else:
-					res.extend((
-						(eListboxPythonMultiContent.TYPE_PIXMAP_ALPHABLEND, r3.x+r3.w-21, (r3.h/2-11), 21, 21, self.clocks[clock_types]),
-						(eListboxPythonMultiContent.TYPE_TEXT, r3.x, r3.y, r3.w-21, r3.h, 0, RT_HALIGN_LEFT|RT_VALIGN_CENTER, EventName)
-						))
-		else:
-			res.append((eListboxPythonMultiContent.TYPE_TEXT, r3.x, r3.y, r3.w, r3.h, 0, RT_HALIGN_LEFT|RT_VALIGN_CENTER, EventName))
-		return res
-
-	def buildSimilarEntry(self, service, eventId, beginTime, service_name, duration):
-		clock_types = self.getPixmapForEntry(service, eventId, beginTime, duration)
-		r1 = self.weekday_rect
-		r2 = self.datetime_rect
-		r3 = self.descr_rect
-		split = int(r2.w * 0.55)
-		t = localtime(beginTime)
-		et = localtime(beginTime + duration)
-		res = [
-			None,  # no private data needed
-			(eListboxPythonMultiContent.TYPE_TEXT, r1.x, r1.y, r1.w, r1.h, 0, RT_HALIGN_LEFT | RT_VALIGN_CENTER, strftime(config.usage.date.dayshort.value, t)),
-			(eListboxPythonMultiContent.TYPE_TEXT, r2.x, r2.y, split, r2.h, 0, RT_HALIGN_RIGHT | RT_VALIGN_CENTER, strftime(config.usage.time.short.value + " -", t)),
-			(eListboxPythonMultiContent.TYPE_TEXT, r2.x + split, r2.y, r2.w - split, r2.h, 0, RT_HALIGN_RIGHT | RT_VALIGN_CENTER, strftime(config.usage.time.short.value, et))
-		]
-		if clock_types:
-			if self.wasEntryAutoTimer and clock_types in (2,7,12):
-				if self.screenwidth and self.screenwidth == 1920:
-					res.extend((
-						(eListboxPythonMultiContent.TYPE_PIXMAP_ALPHABLEND, r3.x+r3.w-25, (r3.h/2-13), 25, 25, self.clocks[clock_types]),
-						(eListboxPythonMultiContent.TYPE_PIXMAP_ALPHABLEND, r3.x+r3.w-52, (r3.h/2-13), 25, 25, self.autotimericon),
-						(eListboxPythonMultiContent.TYPE_TEXT, r3.x, r3.y, r3.w-52, r3.h, 0, RT_HALIGN_LEFT|RT_VALIGN_CENTER, service_name)
-					))
-				else:
-					res.extend((
-						(eListboxPythonMultiContent.TYPE_PIXMAP_ALPHABLEND, r3.x+r3.w-21, (r3.h/2-11), 21, 21, self.clocks[clock_types]),
-						(eListboxPythonMultiContent.TYPE_PIXMAP_ALPHABLEND, r3.x+r3.w-42, (r3.h/2-11), 21, 21, self.autotimericon),
-						(eListboxPythonMultiContent.TYPE_TEXT, r3.x, r3.y, r3.w-42, r3.h, 0, RT_HALIGN_LEFT|RT_VALIGN_CENTER, service_name)
-					))
-			else:
-				if self.screenwidth and self.screenwidth == 1920:
-					res.extend((
-						(eListboxPythonMultiContent.TYPE_PIXMAP_ALPHABLEND, r3.x+r3.w-25, (r3.h/2-13), 25, 25, self.clocks[clock_types]),
-						(eListboxPythonMultiContent.TYPE_TEXT, r3.x, r3.y, r3.w-25, r3.h, 0, RT_HALIGN_LEFT|RT_VALIGN_CENTER, service_name)
-					))
-				else:
-					res.extend((
-						(eListboxPythonMultiContent.TYPE_PIXMAP_ALPHABLEND, r3.x+r3.w-21, (r3.h/2-11), 21, 21, self.clocks[clock_types]),
-						(eListboxPythonMultiContent.TYPE_TEXT, r3.x, r3.y, r3.w-21, r3.h, 0, RT_HALIGN_LEFT|RT_VALIGN_CENTER, service_name)
-					))
-		else:
-			res.append((eListboxPythonMultiContent.TYPE_TEXT, r3.x, r3.y, r3.w, r3.h, 0, RT_HALIGN_LEFT|RT_VALIGN_CENTER, service_name))
-		return res
-
-	def buildMultiEntry(self, changecount, service, eventId, beginTime, duration, EventName, nowTime, service_name):
-		r1 = self.service_rect
-		r2 = self.start_end_rect
-		r3 = self.progress_rect
-		r4 = self.duration_rect
-		r5 = self.descr_rect
-		res = [
-			None,  # no private data needed
-			(eListboxPythonMultiContent.TYPE_TEXT, r1.x, r1.y, r1.w, r1.h, 0, RT_HALIGN_LEFT | RT_VALIGN_CENTER, service_name)
-		]
-		if beginTime is not None:
-			fontSize = self.eventFontSizeMulti + config.epgselection.multi_eventfs.value
-			if nowTime < beginTime:
-				begin = localtime(beginTime)
-				end = localtime(beginTime + duration)
-				split = int(r2.w * 0.55)
-				res.extend((
-					(eListboxPythonMultiContent.TYPE_TEXT, r2.x, r2.y, split, r2.h, 0, RT_HALIGN_RIGHT | RT_VALIGN_CENTER, strftime(config.usage.time.short.value + " - ", begin)),
-					(eListboxPythonMultiContent.TYPE_TEXT, r2.x + split, r2.y, r2.w - split, r2.h, 0, RT_HALIGN_RIGHT | RT_VALIGN_CENTER, strftime(config.usage.time.short.value, end))
-				))
-				remaining = duration / SECS_IN_MIN
-				prefix = ""
-			else:
-				percent = (nowTime - beginTime) * 100 / duration
-				remaining = ((beginTime + duration) - int(time())) / SECS_IN_MIN
-				if remaining <= 0:
-					prefix = ""
-				else:
-					prefix = "+"
-				res.append((eListboxPythonMultiContent.TYPE_PROGRESS, r3.x, r3.y, r3.w, r3.h, percent))
-			res.append((eListboxPythonMultiContent.TYPE_TEXT, r4.x, r4.y, r4.w, r4.h, 0, RT_HALIGN_RIGHT | RT_VALIGN_CENTER, _("%s%d Min") % (prefix, remaining)))
-			width = r5.w
-			clock_types = self.getPixmapForEntry(service, eventId, beginTime, duration)
-			if clock_types:
-				clk_sz = 25 if self.screenwidth and self.screenwidth == 1920 else 21
-				width -= clk_sz / 2 if clock_types in (1, 6, 11) else clk_sz
-				res.append((eListboxPythonMultiContent.TYPE_PIXMAP_ALPHABLEND, r5.x + width, (r5.h - clk_sz) / 2, clk_sz, clk_sz, self.clocks[clock_types]))
-				if self.wasEntryAutoTimer and clock_types in (2, 7, 12):
-					width -= clk_sz + 1
-					res.append((eListboxPythonMultiContent.TYPE_PIXMAP_ALPHABLEND, r5.x + width, (r5.h - clk_sz) / 2, clk_sz, clk_sz, self.autotimericon))
-				width -= 5
-			res.append((eListboxPythonMultiContent.TYPE_TEXT, r5.x, r5.y, width, r5.h, 0, RT_HALIGN_LEFT | RT_VALIGN_CENTER, EventName))
-		return res
-
-	def buildGraphEntry(self, service, service_name, events, picon, channel):
-		r1 = self.service_rect
-		r2 = self.event_rect
-		left = r2.x
-		top = r2.y
-		width = r2.w
-		height = r2.h
-		selected = self.cur_service[0] == service
-		res = [ None ]
-
-		borderTopPix = None
-		borderLeftPix = None
-		borderBottomPix = None
-		borderRightPix = None
-
-		# Picon and Service name
-		serviceForeColor = self.foreColorService
-		serviceBackColor = self.backColorService
-		bgpng = self.othServPix
-		if CompareWithAlternatives(service, self.currentlyPlaying and self.currentlyPlaying):
-			serviceForeColor = self.foreColorServiceNow
-			serviceBackColor = self.backColorServiceNow
-			bgpng = self.nowServPix
-
-		if bgpng is not None and self.graphic:
-			serviceBackColor = None
-			res.append(MultiContentEntryPixmapAlphaBlend(
-					pos = (r1.x + self.serviceBorderWidth, r1.y + self.serviceBorderWidth),
-					size = (r1.w - 2 * self.serviceBorderWidth, r1.h - 2 * self.serviceBorderWidth),
-					png = bgpng,
-					flags = BT_SCALE))
-		else:
-			res.append(MultiContentEntryText(
-					pos  = (r1.x, r1.y),
-					size = (r1.w, r1.h),
-					font = 0, flags = RT_HALIGN_LEFT | RT_VALIGN_CENTER,
-					text = "",
-					color = serviceForeColor, color_sel = serviceForeColor,
-					backcolor = serviceBackColor, backcolor_sel = serviceBackColor,
-					border_width = self.serviceBorderWidth, border_color = self.borderColorService))
-
-		colX = r1.x + self.serviceBorderWidth
-		if self.showPicon:
-			if picon is None: # go find picon and cache its location
-				picon = getPiconName(service)
-				curIdx = self.l.getCurrentSelectionIndex()
-				self.list[curIdx] = (service, service_name, events, picon, channel)
-			piconWidth = self.picon_size.width()
-			piconHeight = self.picon_size.height()
-			displayPicon = None
-			if picon != "":
-				displayPicon = loadPNG(picon)
-			if displayPicon is not None:
-				res.append(MultiContentEntryPixmapAlphaBlend(
-					pos = (colX, r1.y + self.serviceBorderWidth),
-					size = (piconWidth, piconHeight),
-					png = displayPicon,
-					backcolor = None, backcolor_sel = None, flags = BT_SCALE | BT_KEEP_ASPECT_RATIO | BT_ALIGN_CENTER))
-				colX += piconWidth
-			elif not self.showServiceTitle:
-				# no picon so show servicename anyway in picon space
-				namefont = 1
-				namefontflag = int(config.epgselection.graph_servicename_alignment.value)
-				namewidth = piconWidth
-				res.append(MultiContentEntryText(
-					pos = (colX, r1.y + self.serviceBorderWidth),
-					size = (piconWidth, r1.h - 2 * self.serviceBorderWidth),
-					font = namefont, flags = namefontflag,
-					text = service_name,
-					color = serviceForeColor, color_sel = serviceForeColor,
-					backcolor = serviceBackColor, backcolor_sel = serviceBackColor))
-				colX += piconWidth
-
-		if self.showServiceNumber:
-			if not isinstance(channel, int):
-				channel = self.getChannelNumber(channel)
-
-			if channel:
-				namefont = 0
-				namefontflag = int(config.epgselection.graph_servicenumber_alignment.value)
-				font = gFont(self.serviceFontNameGraph, self.serviceFontSizeGraph + config.epgselection.graph_servfs.value)
-				channelWidth = getTextBoundarySize(self.instance, font, self.instance.size(), (channel < 10000) and "0000" or str(channel) ).width()
-				res.append(MultiContentEntryText(
-					pos = (colX + self.serviceNumberPadding, r1.y + self.serviceBorderWidth),
-					size = (channelWidth, r1.h - 2 * self.serviceBorderWidth),
-					font = namefont, flags = namefontflag,
-					text = str(channel),
-					color = serviceForeColor, color_sel = serviceForeColor,
-					backcolor = serviceBackColor, backcolor_sel = serviceBackColor))
-				colX += channelWidth + 2 * self.serviceNumberPadding
-
-		if self.showServiceTitle: # we have more space so reset parms
-			namefont = 0
-			namefontflag = int(config.epgselection.graph_servicename_alignment.value)
-			namewidth = r1.w - colX - 2 * self.serviceNamePadding - self.serviceBorderWidth
-			res.append(MultiContentEntryText(
-				pos = (colX + self.serviceNamePadding, r1.y + self.serviceBorderWidth),
-				size = (namewidth, r1.h - 2 * self.serviceBorderWidth),
-				font = namefont, flags = namefontflag,
-				text = service_name,
-				color = serviceForeColor, color_sel = serviceForeColor,
-				backcolor = serviceBackColor, backcolor_sel = serviceBackColor))
-
-		# Service Borders
-		if self.borderTopPix is not None and self.graphic:
-			res.append(MultiContentEntryPixmapAlphaTest(
-					pos = (r1.x, r1.y),
-					size = (r1.w, self.serviceBorderWidth),
-					png = self.borderTopPix,
-					flags = BT_SCALE))
-			res.append(MultiContentEntryPixmapAlphaTest(
-					pos = (r2.x, r2.y),
-					size = (r2.w, self.eventBorderWidth),
-					png = self.borderTopPix,
-					flags = BT_SCALE))
-		if self.borderBottomPix is not None and self.graphic:
-			res.append(MultiContentEntryPixmapAlphaTest(
-					pos = (r1.x, r1.h-self.serviceBorderWidth),
-					size = (r1.w, self.serviceBorderWidth),
-					png = self.borderBottomPix,
-					flags = BT_SCALE))
-			res.append(MultiContentEntryPixmapAlphaTest(
-					pos = (r2.x, r2.h-self.eventBorderWidth),
-					size = (r2.w, self.eventBorderWidth),
-					png = self.borderBottomPix,
-					flags = BT_SCALE))
-		if self.borderLeftPix is not None and self.graphic:
-			res.append(MultiContentEntryPixmapAlphaTest(
-					pos = (r1.x, r1.y),
-					size = (self.serviceBorderWidth, r1.h),
-					png = self.borderLeftPix,
-					flags = BT_SCALE))
-			res.append(MultiContentEntryPixmapAlphaTest(
-					pos = (r2.x, r2.y),
-					size = (self.eventBorderWidth, r2.h),
-					png = self.borderLeftPix,
-					flags = BT_SCALE))
-		if self.borderRightPix is not None and self.graphic:
-			res.append(MultiContentEntryPixmapAlphaTest(
-					pos = (r1.w-self.serviceBorderWidth, r1.x),
-					size = (self.serviceBorderWidth, r1.h),
-					png = self.borderRightPix,
-					flags = BT_SCALE))
-			res.append(MultiContentEntryPixmapAlphaTest(
-					pos = (r2.x + r2.w-self.eventBorderWidth, r2.y),
-					size = (self.eventBorderWidth, r2.h),
-					png = self.borderRightPix,
-					flags = BT_SCALE))
-
-		if self.graphic:
-			if not selected and self.othEvPix:
-				res.append(MultiContentEntryPixmapAlphaTest(
-					pos = (r2.x + self.eventBorderWidth, r2.y + self.eventBorderWidth),
-					size = (r2.w - 2 * self.eventBorderWidth, r2.h - 2 * self.eventBorderWidth),
-					png = self.othEvPix,
-					flags = BT_SCALE))
-			elif selected and self.selEvPix:
-				res.append(MultiContentEntryPixmapAlphaTest(
-					pos = (r2.x + self.eventBorderWidth, r2.y + self.eventBorderWidth),
-					size = (r2.w - 2 * self.eventBorderWidth, r2.h - 2 * self.eventBorderWidth),
-					png = self.selEvPix,
-					flags = BT_SCALE))
-		else:
-			res.append(MultiContentEntryText(
-				pos = (left, top), size = (width, height),
-				font = 1, flags = RT_HALIGN_LEFT | RT_VALIGN_CENTER,
-				text = "", color = None, color_sel = None,
-				backcolor = self.backColor, backcolor_sel = self.backColorSelected,
-				border_width = self.eventBorderWidth, border_color = self.borderColor))
-
-		# Events for service
-		if events:
-			start = self.time_base
-			end = start + self.time_epoch_secs
-
-			now = time()
-			for ev in events:  #(event_id, event_title, begin_time, duration)
-				stime = ev[2]
-				duration = ev[3]
-				xpos, ewidth = self.calcEntryPosAndWidthHelper(stime, duration, start, end, width)
-				clock_types = self.getPixmapForEntry(service, ev[0], stime, duration)
-
-				foreColor = self.foreColor
-				backColor = self.backColor
-				foreColorSel = self.foreColorSelected
-				backColorSel = self.backColorSelected
-				if clock_types is not None and clock_types == 2:
-					foreColor = self.foreColorRecord
-					backColor = self.backColorRecord
-					foreColorSel = self.foreColorRecordSelected
-					backColorSel = self.backColorRecordSelected
-				elif clock_types is not None and clock_types == 7:
-					foreColor = self.foreColorZap
-					backColor = self.backColorZap
-					foreColorSel = self.foreColorZapSelected
-					backColorSel = self.backColorZapSelected
-				elif stime <= now < (stime + duration) and config.epgselection.graph_highlight_current_events.value:
-					foreColor = self.foreColorNow
-					backColor = self.backColorNow
-					foreColorSel = self.foreColorNowSelected
-					backColorSel = self.backColorNowSelected
-
-				if selected and self.select_rect.x == xpos + left:
-					if clock_types is not None:
-						clocks = self.selclocks[clock_types]
-					borderTopPix = self.borderSelectedTopPix
-					borderLeftPix = self.borderSelectedLeftPix
-					borderBottomPix = self.borderSelectedBottomPix
-					borderRightPix = self.borderSelectedRightPix
-					infoPix = self.selInfoPix
-					if stime <= now < (stime + duration) and config.epgselection.graph_highlight_current_events.value:
-						bgpng = self.nowSelEvPix
-					else:
-						bgpng = self.selEvPix
-				else:
-					if clock_types is not None:
-						clocks = self.clocks[clock_types]
-					borderTopPix = self.borderTopPix
-					borderLeftPix = self.borderLeftPix
-					borderBottomPix = self.borderBottomPix
-					borderRightPix = self.borderRightPix
-					infoPix = self.InfoPix
-					bgpng = self.othEvPix
-					if clock_types is not None and clock_types == 2:
-						bgpng = self.recEvPix
-					elif clock_types is not None and clock_types == 7:
-						bgpng = self.zapEvPix
-					elif stime <= now < (stime + duration) and config.epgselection.graph_highlight_current_events.value:
-						bgpng = self.nowEvPix
-
-				# event box background
-				if bgpng is not None and self.graphic:
-					backColor = None
-					backColorSel = None
-					res.append(MultiContentEntryPixmapAlphaTest(
-						pos = (left + xpos + self.eventBorderWidth, top + self.eventBorderWidth),
-						size = (ewidth - 2 * self.eventBorderWidth, height - 2 * self.eventBorderWidth),
-						png = bgpng,
-						flags = BT_SCALE))
-				else:
-					res.append(MultiContentEntryText(
-						pos = (left + xpos, top), size = (ewidth, height),
-						font = 1, flags = RT_HALIGN_LEFT | RT_VALIGN_CENTER,
-						text = "", color = None, color_sel = None,
-						backcolor = backColor, backcolor_sel = backColorSel,
-						border_width = self.eventBorderWidth, border_color = self.borderColor))
-
-				# event text
-				evX = left + xpos + self.eventBorderWidth + self.eventNamePadding
-				evY = top + self.eventBorderWidth
-				evW = ewidth - 2 * (self.eventBorderWidth + self.eventNamePadding)
-				evH = height - 2 * self.eventBorderWidth
-				if self.type == EPG_TYPE_GRAPH:
-					infowidth = config.epgselection.graph_infowidth.value
-				elif self.type == EPG_TYPE_INFOBARGRAPH:
-					infowidth = config.epgselection.infobar_infowidth.value
-				if evW < infowidth and infoPix is not None:
-					res.append(MultiContentEntryPixmapAlphaBlend(
-						pos = (left + xpos + self.eventBorderWidth, evY), size = (ewidth - 2 * self.eventBorderWidth, evH),
-						png = infoPix, flags = BT_ALIGN_CENTER))
-				else:
-					res.append(MultiContentEntryText(
-						pos = (evX, evY), size = (evW, evH),
-						font = 1, flags = int(config.epgselection.graph_event_alignment.value),
-						text = ev[1],
-						color = foreColor, color_sel = foreColorSel,
-						backcolor = backColor, backcolor_sel = backColorSel))
-
-				# event box borders
-				if borderTopPix is not None and self.graphic:
-					res.append(MultiContentEntryPixmapAlphaTest(
-							pos = (left + xpos, top),
-							size = (ewidth, self.eventBorderWidth),
-							png = borderTopPix,
-							flags = BT_SCALE))
-				if borderBottomPix is not None and self.graphic:
-					res.append(MultiContentEntryPixmapAlphaTest(
-							pos = (left + xpos, height-self.eventBorderWidth),
-							size = (ewidth, self.eventBorderWidth),
-							png = borderBottomPix,
-							flags = BT_SCALE))
-				if borderLeftPix is not None and self.graphic:
-					res.append(MultiContentEntryPixmapAlphaTest(
-							pos = (left + xpos, top),
-							size = (self.eventBorderWidth, height),
-							png = borderLeftPix,
-							flags = BT_SCALE))
-				if borderRightPix is not None and self.graphic:
-					res.append(MultiContentEntryPixmapAlphaTest(
-							pos = (left + xpos + ewidth-self.eventBorderWidth, top),
-							size = (self.eventBorderWidth, height),
-							png = borderRightPix,
-							flags = BT_SCALE))
-
-				# recording icons
-				if clock_types is not None and ewidth > 23:
-					if config.epgselection.graph_rec_icon_height.value != "hide":
-						if config.epgselection.graph_rec_icon_height.value == "middle":
-							RecIconHDheight = top+(height/2)-11
-							RecIconFHDheight = top+(height/2)-13
-						elif config.epgselection.graph_rec_icon_height.value == "top":
-							RecIconHDheight = top+3
-							RecIconFHDheight = top+3
-						else:
-							RecIconHDheight = top+height-22
-							RecIconFHDheight = top+height-26
-						if clock_types in (1,6,11):
-							if self.screenwidth and self.screenwidth == 1920:
-								pos = (left+xpos+ewidth-15, RecIconFHDheight)
-							else:
-								pos = (left+xpos+ewidth-13, RecIconHDheight)
-						elif clock_types in (5,10,15):
-							if self.screenwidth and self.screenwidth == 1920:
-								pos = (left+xpos-26, RecIconFHDheight)
-							else:
-								pos = (left+xpos-22, RecIconHDheight)
-						else:
-							if self.screenwidth and self.screenwidth == 1920:
-								pos = (left+xpos+ewidth-26, RecIconFHDheight)
-							else:
-								pos = (left+xpos+ewidth-22, RecIconHDheight)
-						if self.screenwidth and self.screenwidth == 1920:
-							res.append(MultiContentEntryPixmapAlphaBlend(
-								pos = pos, size = (25, 25),
-								png = clocks))
-						else:
-							res.append(MultiContentEntryPixmapAlphaBlend(
-								pos = pos, size = (21, 21),
-								png = clocks))
-						if self.wasEntryAutoTimer and clock_types in (2,7,12):
-							if self.screenwidth and self.screenwidth == 1920:
-								res.append(MultiContentEntryPixmapAlphaBlend(
-									pos = (pos[0]-25,pos[1]), size = (25, 25),
-									png = self.autotimericon))
-							else:
-								res.append(MultiContentEntryPixmapAlphaBlend(
-									pos = (pos[0]-21,pos[1]), size = (21, 21),
-									png = self.autotimericon))
-		return res
-
-	def getSelectionPosition(self,serviceref):
-
-		if self.type == EPG_TYPE_GRAPH:
-			selx = self.select_rect.x+self.select_rect.w
-			itemsperpage = config.epgselection.graph_itemsperpage.value
-		elif self.type == EPG_TYPE_INFOBARGRAPH:
-			selx = self.select_rect.x+self.select_rect.w
-			itemsperpage = config.epgselection.infobar_itemsperpage.value
-		elif self.type == EPG_TYPE_ENHANCED or self.type == EPG_TYPE_SINGLE or self.type == EPG_TYPE_SIMILAR:
-			selx = self.listWidth
-			itemsperpage = config.epgselection.enhanced_itemsperpage.value
-		elif self.type == EPG_TYPE_MULTI:
-			selx = self.listWidth
-			itemsperpage = config.epgselection.multi_itemsperpage.value
-		elif self.type == EPG_TYPE_INFOBAR:
-			selx = self.listWidth
-			itemsperpage = config.epgselection.infobar_itemsperpage.value
-
-# Adjust absolute indx to indx in displayed view
-#
-		indx = int(self.l.getCurrentSelectionIndex())
-		while indx+1 > itemsperpage:
-			indx = indx - itemsperpage
-		pos = self.instance.position().y()
-		sely = int(pos)+(int(self.itemHeight)*int(indx))
-		temp = int(self.instance.position().y())+int(self.listHeight)
-		if int(sely) >= temp:
-			sely = int(sely) - int(self.listHeight)
-		return int(selx), int(sely)
-
-# This method function is a little odd...
-# When it is called with a non-zero dir it runs through the code in the
-# dir != 0 part (at the top).  If this results in it moving screen-page
-# that code calls fillGraphEPG()/fillGraphEPGNoRefresh(), which makes a
-# call back here with dir=0, so the rest of the code gets run.
-#
-	def selEntry(self, dir, visible = True):
-		cur_service = self.cur_service    #(service, service_name, events, picon)
-		self.recalcEntrySize()
-		valid_event = self.cur_event is not None
-		if cur_service:
-			update = True
-			entries = cur_service[2]
-
-			abs_time_focus = None
-			if dir == 0: #current
-				update = False
-
-			elif (dir > 0): # Move forward
-				if dir == +1:   # Next event
-					if valid_event and self.cur_event + 1 < len(entries):
-						self.setTimeFocusFromEvent(self.cur_event + 1)
-						self.l.invalidateEntry(self.l.getCurrentSelectionIndex())
-						return False    # Same page
-# Next event is on next page, so we need to move to it
-					incr = self.time_epoch_secs
-					fevent = 0
-					norefresh = True
-				elif dir == +2: # Next page
-					incr = self.time_epoch_secs
-					fevent = None
-					norefresh = False
-				elif dir == +24: # Next day
-					incr = 86400
-					fevent = None
-					norefresh = False
-			else:           # Move back (dir < 0)
-				if dir == -1:   # Prev event
-					if valid_event and self.cur_event - 1 >= 0:
-						self.setTimeFocusFromEvent(self.cur_event - 1)
-						self.l.invalidateEntry(self.l.getCurrentSelectionIndex())
-						return False    # Same page
-# Prev event is on prev page, so move to it iff it exists
-# It won't exists if time_base is less than time()
-					if time() > self.time_base:
-						return False    # Nothing to do
-					incr = -self.time_epoch_secs
-					fevent = 65535
-					norefresh = True
-				else:           # Prev page or Prev day
-					fevent = None
-					norefresh = False
-					if dir == -2: # Prev page
-						target = self.time_base - self.time_epoch_secs
-					else:         # Prev day
-						target = self.time_base - 86400
-# Work out the earliest we can go back to
-					abs0 = int(time() - int(config.epg.histminutes.value) * SECS_IN_MIN)
-					abs0 = abs0 - abs0 % self.round_by_secs
-					if target >= abs0:
-						incr = target - self.time_base
-					else:
-						incr = abs0 - self.time_base
-# If we go back to square one with prev page/day then set the focus on
-# now, rather than start of page
-						abs_time_focus = time()
-# If we are still here and moving - do the move now and return True to
-# indicate we've changed pages
-#
-			if dir != 0:
-				self.time_base += incr
-				if abs_time_focus:
-					self.time_focus = abs_time_focus
-				else:
-					self.time_focus += incr
-				if norefresh:
-					self.fillGraphEPGNoRefresh()
-				else:
-					self.fillGraphEPG(None)
-				if fevent != None:
-					self.setTimeFocusFromEvent(fevent)
-				return True
-
-		if cur_service and valid_event and (self.cur_event+1 <= len(entries)):
-			entry = entries[self.cur_event] #(event_id, event_title, begin_time, duration)
-			xpos, width = self.calcEntryPosAndWidth(self.event_rect, self.time_base, self.time_epoch_secs, entry[2], entry[3])
-			self.select_rect = Rect(xpos ,0, width, self.event_rect.height)
-			self.l.setSelectionClip(eRect(xpos, 0, width, self.event_rect.h), visible and update)
-		else:
-			self.select_rect = self.event_rect
-			self.l.setSelectionClip(eRect(self.event_rect.x, self.event_rect.y, self.event_rect.w, self.event_rect.h), False)
-		self.selectionChanged()
-		return False
-
-	def queryEPG(self, list, buildFunc=None):
-		if self.epgcache is not None:
-			if buildFunc is not None:
-				return self.epgcache.lookupEvent(list, buildFunc)
-			else:
-				return self.epgcache.lookupEvent(list)
-		return [ ]
-
-	def fillSimilarList(self, refstr, event_id):
-		# search similar broadcastings
-		t = time()
-		if event_id is None:
-			return
-		self.list = self.epgcache.search(('RIBND', 1024, eEPGCache.SIMILAR_BROADCASTINGS_SEARCH, refstr, event_id))
-		if self.list and len(self.list):
-			self.list.sort(key=lambda x: x[2])
-		self.l.setList(self.list)
-		self.recalcEntrySize()
-		self.selectionChanged()
-
-	def fillSingleEPG(self, service):
-		t = time()
-		epg_time = t - config.epg.histminutes.value*SECS_IN_MIN
-		test = [ 'RIBDT', (service.ref.toString(), 0, epg_time, -1) ]
-		self.list = self.queryEPG(test)
-
-		odds = chr(0xc2) + chr(0x86)
-		odde = chr(0xc2) + chr(0x87)
-# Assume that events *might* have leading 0xC2+0x86 chars and
-# trailing 0xC2+0x87 ones, which need to be removed...(probably from
-# now and next?).
-# Just step through the list until we don't modify one whose start
-# time is after "now".
-# NOTE: that the list is a list of tuples, so we can't modify just the
-#       Title, but have to replace it with a modified tuple.
-#
-		for i in range(0, len(self.list)):
-			if self.list[i][4][:2] == odds and self.list[i][4][-2:] == odde:
-				tlist = list(self.list[i])
-				tlist[4] = tlist[4][2:-2]
-#DEBUG				print "Stripped >%s< to >%s<" % (self.list[i][4], tlist[4])
-				self.list[i] = tuple(tlist)
-			else:
-				if self.list[i][2] > t:
-					break
-		# Add explicit gaps if data isn't available.
-		for i in range(len(self.list) - 1, 0, -1):
-			this_beg = self.list[i][2]
-			prev_end = self.list[i-1][2] + self.list[i-1][3]
-			if prev_end + 5 * SECS_IN_MIN < this_beg:
-				self.list.insert(i, (self.list[i][0], None, prev_end, this_beg - prev_end, None))
-		self.l.setList(self.list)
-		self.recalcEntrySize()
-		if t != epg_time:
-			idx = 0
-			for x in self.list:
-				idx += 1
-				if t < x[2]+x[3]:
-					break
-			self.instance.moveSelectionTo(idx-1)
-		self.selectionChanged()
-
-	def fillMultiEPG(self, services, stime=None):
-		test = [ (service.ref.toString(), 0, stime) for service in services ]
-		test.insert(0, 'X0RIBDTCn')
-		self.list = self.queryEPG(test)
-		self.l.setList(self.list)
-		self.recalcEntrySize()
-		self.selectionChanged()
-
-	def updateMultiEPG(self, direction):
-		test = [ x[3] and (x[1], direction, x[3]) or (x[1], direction, 0) for x in self.list ]
-		test.insert(0, 'XRIBDTCn')
-		epg_data = self.queryEPG(test)
-		cnt = 0
-		for x in epg_data:
-			changecount = self.list[cnt][0] + direction
-			if changecount >= 0:
-				if x[2] is not None:
-					self.list[cnt] = (changecount, x[0], x[1], x[2], x[3], x[4], x[5], x[6])
-			cnt+=1
-		self.l.setList(self.list)
-		self.recalcEntrySize()
-		self.selectionChanged()
-
-	def getCurrentCursorLocation(self):
-		return self.time_base
-
-	def fillGraphEPG(self, services, stime = None):
-		self.fillGraphEPGNoRefresh(services, stime)
-		self.selEntry(0)
-
-	def fillGraphEPGNoRefresh(self, services = None, stime = None):
-		if (self.type == EPG_TYPE_GRAPH or self.type == EPG_TYPE_INFOBARGRAPH) and not self.graphicsloaded:
-			if self.graphic:
-				self.nowEvPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/CurrentEvent.png'))
-				self.nowSelEvPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/SelectedCurrentEvent.png'))
-				self.othEvPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/OtherEvent.png'))
-				self.selEvPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/SelectedEvent.png'))
-				self.othServPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/OtherService.png'))
-				self.nowServPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/CurrentService.png'))
-				self.recEvPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/RecordEvent.png'))
-				self.recSelEvPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/SelectedRecordEvent.png'))
-				self.zapEvPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/ZapEvent.png'))
-				self.zapSelEvPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/SelectedZapEvent.png'))
-
-				self.borderTopPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/BorderTop.png'))
-				self.borderBottomPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/BorderBottom.png'))
-				self.borderLeftPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/BorderLeft.png'))
-				self.borderRightPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/BorderRight.png'))
-				self.borderSelectedTopPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/SelectedBorderTop.png'))
-				self.borderSelectedBottomPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/SelectedBorderBottom.png'))
-				self.borderSelectedLeftPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/SelectedBorderLeft.png'))
-				self.borderSelectedRightPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/SelectedBorderRight.png'))
-
-			self.InfoPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/information.png'))
-			self.selInfoPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/SelectedInformation.png'))
-
-			self.graphicsloaded = True
-
-		if stime is not None:
-			self.time_base = int(stime)
-		if services is None:
-			test = [ (service[0], 0, self.time_base, self.time_epoch) for service in self.list ]
-			serviceList = self.list
-			piconIdx = 3
-			channelIdx = 4
-		else:
-			self.cur_event = None
-			self.cur_service = None
-			test = [ (service.ref.toString(), 0, self.time_base, self.time_epoch) for service in services ]
-			serviceList = services
-			piconIdx = 0
-			channelIdx = None
-
-		test.insert(0, 'XRnITBD') #return record, service ref, service name, event id, event title, begin time, duration
-		epg_data = self.queryEPG(test)
-		self.list = [ ]
-		tmp_list = None
-		service = ""
-		sname = ""
-
-		serviceIdx = 0
-		for x in epg_data:
-			if service != x[0]:
-				if tmp_list is not None:
-					picon = None if piconIdx == 0 else serviceList[serviceIdx][piconIdx]
-					# We pass the serviceref if we don't have the channel number yet, so it can be grabbed
-					channel = serviceList[serviceIdx] if (channelIdx == None) else serviceList[serviceIdx][channelIdx]
-					self.list.append((service, sname, tmp_list[0][0] is not None and tmp_list or None, picon, channel))
-					serviceIdx += 1
-				service = x[0]
-				sname = x[1]
-				tmp_list = [ ]
-			tmp_list.append((x[2], x[3], x[4], x[5])) #(event_id, event_title, begin_time, duration)
-		if tmp_list and len(tmp_list):
-			picon = None if piconIdx == 0 else serviceList[serviceIdx][piconIdx]
-			channel = serviceList[serviceIdx] if (channelIdx == None) else serviceList[serviceIdx][channelIdx]
-			self.list.append((service, sname, tmp_list[0][0] is not None and tmp_list or None, picon, channel))
-			serviceIdx += 1
-
-		self.l.setList(self.list)
-		self.recalcEntrySize()
-		self.selectEventFromTime()
-
-	def sortSingleEPG(self, type):
-		list = self.list
-		if list:
-			event_id = self.getSelectedEventId()
-			if type == 1:
-				list.sort(key=lambda x: (x[4] and x[4].lower(), x[2]))
-			else:
-				assert(type == 0)
-				list.sort(key=lambda x: x[2])
-			self.l.invalidate()
-			self.moveToEventId(event_id)
-
-	def getChannelNumber(self,service):
-		if hasattr(service, "ref") and service.ref and '0:0:0:0:0:0:0:0:0' not in service.ref.toString():
-			numservice = service.ref
-			num = numservice and numservice.getChannelNum() or None
-			if num is not None:
-				return num
-		return None
-
-	def getEventRect(self):
-		rc = self.event_rect
-		return Rect( rc.left() + (self.instance and self.instance.position().x() or 0), rc.top(), rc.width(), rc.height() )
-
-	def getServiceRect(self):
-		rc = self.service_rect
-		return Rect( rc.left() + (self.instance and self.instance.position().x() or 0), rc.top(), rc.width(), rc.height() )
-
-	def getTimeBase(self):
-		return self.time_base
-
-# This used to set the (now gone) self.offs = 0
-# Can be removed at some future time.
-	def resetOffset(self):
-		pass
-
-	def getSelectedEventId(self):
-		x = self.l.getCurrentSelection()
-		return x and x[1]
-
-	def moveToEventId(self, eventId):
-		if not eventId:
-			return
-		index = 0
-		for x in self.list:
-			if x[1] == eventId:
-				self.instance.moveSelectionTo(index)
-				break
-			index += 1
-
-class TimelineText(GUIComponent):
-	def __init__(self, type = EPG_TYPE_GRAPH, graphic=False):
-		GUIComponent.__init__(self)
-		self.type = type
-		self.graphic = graphic
-		self.l = eListboxPythonMultiContent()
-		self.l.setSelectionClip(eRect(0,0,0,0))
-		self.itemHeight = 30
-		self.TlDate = None
-		self.TlTime = None
-		self.foreColor = 0xffc000
-		self.borderColor = 0x000000
-		self.backColor = 0x000000
-		self.borderWidth = 1
-		self.time_base = 0
-		self.time_epoch = 0
-		self.timelineFontName = "Regular"
-		self.timelineFontSize = 20
-		self.datefmt = ""
-
-	GUI_WIDGET = eListbox
-
-	def applySkin(self, desktop, screen):
-		if self.skinAttributes is not None:
-			attribs = [ ]
-			for (attrib, value) in self.skinAttributes:
-				if attrib == "foregroundColor":
-					self.foreColor = parseColor(value).argb()
-				elif attrib == "borderColor":
-					self.borderColor = parseColor(value).argb()
-				elif attrib == "backgroundColor":
-					self.backColor = parseColor(value).argb()
-				elif attrib == "borderWidth":
-					self.borderWidth = int(value)
-				elif attrib == "TimelineFont":
-					font = parseFont(value, ((1,1),(1,1)) )
-					self.timelineFontName = font.family
-					self.timelineFontSize = font.pointSize
-				elif attrib == "itemHeight":
-					self.itemHeight = int(value)
-				else:
-					attribs.append((attrib,value))
-			self.skinAttributes = attribs
-		rc = GUIComponent.applySkin(self, desktop, screen)
-		self.listHeight = self.instance.size().height()
-		self.listWidth = self.instance.size().width()
-		self.setTimeLineFontsize()
-		self.l.setItemHeight(self.itemHeight)
-		if self.graphic:
-			self.TlDate = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/TimeLineDate.png'))
-			self.TlTime = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/TimeLineTime.png'))
-		return rc
-
-	def setTimeLineFontsize(self):
-		font_conf = None
-		if self.type == EPG_TYPE_GRAPH:
-			font_conf= config.epgselection.graph_timelinefs.value
-		elif self.type == EPG_TYPE_INFOBARGRAPH:
-			font_conf = config.epgselection.infobar_timelinefs.value
-		if font_conf != None:
-			self.l.setFont(0, gFont(self.timelineFontName, self.timelineFontSize + font_conf))
-
-	def postWidgetCreate(self, instance):
-		self.setTimeLineFontsize()
-		instance.setContent(self.l)
-
-	def setEntries(self, l, timeline_now, time_lines, force):
-		event_rect = l.getEventRect()
-		time_epoch = l.getTimeEpoch()
-		time_base = l.getTimeBase()
-
-		if event_rect is None or time_epoch is None or time_base is None:
-			return
-
-		eventLeft = event_rect.left()
-
-		res = [ None ]
-
-		# Note: event_rect and service_rect are relative to the timeline_text position
-		# while the time lines are relative to the GraphEPG screen position!
-		if self.time_base != time_base or self.time_epoch != time_epoch or force:
-			service_rect = l.getServiceRect()
-			time_steps = 60 if time_epoch > 180 else 30
-			num_lines = time_epoch / time_steps
-			incWidth = event_rect.width() / num_lines
-			timeStepsCalc = time_steps * SECS_IN_MIN
-
-			nowTime = localtime(time())
-			begTime = localtime(time_base)
-			serviceWidth = service_rect.width()
-			if nowTime.tm_year == begTime.tm_year and nowTime.tm_yday == begTime.tm_yday:
-				datestr = _("Today")
-			else:
-				if serviceWidth > 179:
-					date_fmt = config.usage.date.daylong.value
-				elif serviceWidth > 129:
-					date_fmt = config.usage.date.dayshort.value
-				elif serviceWidth > 79:
-					date_fmt = config.usage.date.daysmall.value
-				else:
-					date_fmt = "%a"
-				datestr = strftime(date_fmt, begTime)
-
-			foreColor = self.foreColor
-			backColor = self.backColor
-			bgpng = self.TlDate
-			if bgpng is not None and self.graphic:
-				backColor = None
-				backColorSel = None
-				res.append(MultiContentEntryPixmapAlphaTest(
-					pos = (0, 0),
-					size = (service_rect.width(), self.listHeight),
-					png = bgpng,
-					flags = BT_SCALE))
-			else:
-				res.append( MultiContentEntryText(
-					pos = (0, 0),
-					size = (service_rect.width(), self.listHeight),
-					color = foreColor,
-					backcolor = backColor,
-					border_width = self.borderWidth, border_color = self.borderColor))
-
-			res.append(MultiContentEntryText(
-				pos = (5, 0),
-				size = (service_rect.width()-15, self.listHeight),
-				font = 0, flags = int(config.epgselection.graph_timelinedate_alignment.value),
-				text = _(datestr),
-				color = foreColor,
-				backcolor = backColor))
-
-			bgpng = self.TlTime
-			xpos = 0 # eventLeft
-			if bgpng is not None and self.graphic:
-				backColor = None
-				backColorSel = None
-				res.append(MultiContentEntryPixmapAlphaTest(
-					pos = (service_rect.width(), 0),
-					size = (event_rect.width(), self.listHeight),
-					png = bgpng,
-					flags = BT_SCALE))
-			else:
-				res.append( MultiContentEntryText(
-					pos = (service_rect.width(), 0),
-					size = (event_rect.width(), self.listHeight),
-					color = foreColor,
-					backcolor = backColor,
-					border_width = self.borderWidth, border_color = self.borderColor))
-
-			for x in range(0, num_lines):
-				ttime = localtime(time_base + (x * timeStepsCalc))
-				if config.usage.time.enabled.value:
-					timetext = strftime(config.usage.time.short.value, ttime)
-				else:
-					if (self.type == EPG_TYPE_GRAPH and config.epgselection.graph_timeline24h.value) or (self.type == EPG_TYPE_INFOBARGRAPH and config.epgselection.infobar_timeline24h.value):
-						timetext = strftime("%H:%M", ttime)
-					else:
-						if int(strftime("%H", ttime)) > 12:
-							timetext = strftime("%-I:%M", ttime) + _('pm')
-						else:
-							timetext = strftime("%-I:%M", ttime) + _('am')
-				res.append(MultiContentEntryText(
-					pos = (service_rect.width() + xpos, 0),
-					size = (incWidth, self.listHeight),
-					font = 0, flags = RT_HALIGN_LEFT | RT_VALIGN_CENTER,
-					text = timetext,
-					color = foreColor,
-					backcolor = backColor))
-				line = time_lines[x]
-				old_pos = line.position
-				line.setPosition(xpos + eventLeft, old_pos[1])
-				line.visible = True
-				xpos += incWidth
-			for x in range(num_lines, MAX_TIMELINES):
-				time_lines[x].visible = False
-			self.l.setList([res])
-			self.time_base = time_base
-			self.time_epoch = time_epoch
-
-		now = time()
-		if time_base <= now < (time_base + time_epoch * SECS_IN_MIN):
-			xpos = int((((now - time_base) * event_rect.width()) / (time_epoch * SECS_IN_MIN)) - (timeline_now.instance.size().width() / 2))
-			old_pos = timeline_now.position
-			new_pos = (xpos + eventLeft, old_pos[1])
-			if old_pos != new_pos:
-				timeline_now.setPosition(new_pos[0], new_pos[1])
-			timeline_now.visible = True
-		else:
-			timeline_now.visible = False
-
-class EPGBouquetList(GUIComponent):
-	def __init__(self, graphic=False):
-		GUIComponent.__init__(self)
-		self.graphic = graphic
-		self.l = eListboxPythonMultiContent()
-		self.l.setBuildFunc(self.buildEntry)
-
-		self.onSelChanged = [ ]
-
-		self.foreColor = 0xffffff
-		self.foreColorSelected = 0xffffff
-		self.backColor = 0x2D455E
-		self.backColorSelected = 0xd69600
-
-		self.borderColor = 0xC0C0C0
-		self.BorderWidth = 1
-
-		self.othPix = None
-		self.selPix = None
-		self.graphicsloaded = False
-
-		self.bouquetFontName = "Regular"
-		self.bouquetFontSize = 20
-
-		self.itemHeight = 31
-		self.listHeight = None
-		self.listWidth = None
-
-		self.bouquetNamePadding = 3
-		self.bouquetNameAlign = 'left'
-		self.bouquetNameWrap = 'no'
-
-	def applySkin(self, desktop, screen):
-		if self.skinAttributes is not None:
-			attribs = [ ]
-			for (attrib, value) in self.skinAttributes:
-				if attrib == "font":
-					font = parseFont(value, ((1,1),(1,1)) )
-					self.bouquetFontName = font.family
-					self.bouquetFontSize = font.pointSize
-				elif attrib == "foregroundColor":
-					self.foreColor = parseColor(value).argb()
-				elif attrib == "backgroundColor":
-					self.backColor = parseColor(value).argb()
-				elif attrib == "foregroundColorSelected":
-					self.foreColorSelected = parseColor(value).argb()
-				elif attrib == "backgroundColorSelected":
-					self.backColorSelected = parseColor(value).argb()
-				elif attrib == "borderColor":
-					self.borderColor = parseColor(value).argb()
-				elif attrib == "borderWidth":
-					self.BorderWidth = int(value)
-				elif attrib == "itemHeight":
-					self.itemHeight = int(value)
-				else:
-					attribs.append((attrib,value))
-			self.skinAttributes = attribs
-		rc = GUIComponent.applySkin(self, desktop, screen)
-		self.setBouquetFontsize()
-		self.listHeight = self.instance.size().height()
-		self.listWidth = self.instance.size().width()
-		self.l.setItemHeight(self.itemHeight)
-		return rc
-
-	GUI_WIDGET = eListbox
-
-	def getCurrentBouquet(self):
-		return self.l.getCurrentSelection()[0]
-
-	def getCurrentBouquetService(self):
-		return self.l.getCurrentSelection()[1]
-
-	def setCurrentBouquet(self, CurrentBouquetService):
-		self.CurrentBouquetService = CurrentBouquetService
-
-	def selectionChanged(self):
-		for x in self.onSelChanged:
-			if x is not None:
-				x()
-
-	def getIndexFromService(self, serviceref):
-		if serviceref is not None:
-			for x in range(len(self.bouquetslist)):
-				if CompareWithAlternatives(self.bouquetslist[x][1], serviceref):
-					return x
-		return None
-
-	def moveToService(self, serviceref):
-		newIdx = self.getIndexFromService(serviceref)
-		if newIdx is None:
-			newIdx = 0
-		self.setCurrentIndex(newIdx)
-
-	def setCurrentIndex(self, index):
-		if self.instance is not None:
-			self.instance.moveSelectionTo(index)
-
-	def moveTo(self, dir):
-		if self.instance is not None:
-			self.instance.moveSelection(dir)
-
-	def setBouquetFontsize(self):
-		self.l.setFont(0, gFont(self.bouquetFontName, self.bouquetFontSize))
-
-	def postWidgetCreate(self, instance):
-		self.l.setSelectableFunc(True)
-		instance.setWrapAround(True)
-		instance.selectionChanged.get().append(self.selectionChanged)
-		instance.setContent(self.l)
-		# self.l.setSelectionClip(eRect(0,0,0,0), False)
-		self.setBouquetFontsize()
-
-	def preWidgetRemove(self, instance):
-		instance.selectionChanged.get().append(self.selectionChanged)
-		instance.setContent(None)
-
-	def selectionEnabled(self, enabled):
-		if self.instance is not None:
-			self.instance.setSelectionEnable(enabled)
-
-	def recalcEntrySize(self):
-		esize = self.l.getItemSize()
-		width = esize.width()
-		height = esize.height()
-		self.bouquet_rect = Rect(0, 0, width, height)
-
-	def getBouquetRect(self):
-		rc = self.bouquet_rect
-		return Rect( rc.left() + (self.instance and self.instance.position().x() or 0), rc.top(), rc.width(), rc.height() )
-
-	def buildEntry(self, name, func):
-		r1 = self.bouquet_rect
-		left = r1.x
-		top = r1.y
-		# width = (len(name)+5)*8
-		width = r1.w
-		height = r1.h
-		selected = self.CurrentBouquetService == func
-
-		if self.bouquetNameAlign.lower() == 'left':
-			if self.bouquetNameWrap.lower() == 'yes':
-				alignnment = RT_HALIGN_LEFT | RT_VALIGN_CENTER | RT_WRAP
-			else:
-				alignnment = RT_HALIGN_LEFT | RT_VALIGN_CENTER
-		else:
-			if self.bouquetNameWrap.lower() == 'yes':
-				alignnment = RT_HALIGN_CENTER | RT_VALIGN_CENTER | RT_WRAP
-			else:
-				alignnment = RT_HALIGN_CENTER | RT_VALIGN_CENTER
-
-		res = [ None ]
-
-		if selected:
-			if self.graphic:
-				borderTopPix = self.borderSelectedTopPix
-				borderLeftPix = self.borderSelectedLeftPix
-				borderBottomPix = self.borderSelectedBottomPix
-				borderRightPix = self.borderSelectedRightPix
-			foreColor = self.foreColor
-			backColor = self.backColor
-			foreColorSel = self.foreColorSelected
-			backColorSel = self.backColorSelected
-			bgpng = self.selPix
-			if bgpng is not None and self.graphic:
-				backColor = None
-				backColorSel = None
-		else:
-			if self.graphic:
-				borderTopPix = self.borderTopPix
-				borderLeftPix = self.borderLeftPix
-				borderBottomPix = self.borderBottomPix
-				borderRightPix = self.borderRightPix
-			backColor = self.backColor
-			foreColor = self.foreColor
-			foreColorSel = self.foreColorSelected
-			backColorSel = self.backColorSelected
-			bgpng = self.othPix
-			if bgpng is not None and self.graphic:
-				backColor = None
-				backColorSel = None
-
-		# box background
-		if bgpng is not None and self.graphic:
-			res.append(MultiContentEntryPixmapAlphaTest(
-				pos = (left + self.BorderWidth, top + self.BorderWidth),
-				size = (width - 2 * self.BorderWidth, height - 2 * self.BorderWidth),
-				png = bgpng,
-				flags = BT_SCALE))
-		else:
-			res.append(MultiContentEntryText(
-				pos = (left , top), size = (width, height),
-				font = 0, flags = RT_HALIGN_LEFT | RT_VALIGN_CENTER,
-				text = "", color = None, color_sel = None,
-				backcolor = backColor, backcolor_sel = backColorSel,
-				border_width = self.BorderWidth, border_color = self.borderColor))
-
-		evX = left + self.BorderWidth + self.bouquetNamePadding
-		evY = top + self.BorderWidth
-		evW = width - 2 * (self.BorderWidth + self.bouquetNamePadding)
-		evH = height - 2 * self.BorderWidth
-
-		res.append(MultiContentEntryText(
-			pos = (evX, evY), size = (evW, evH),
-			font = 0, flags = alignnment,
-			text = name,
-			color = foreColor, color_sel = foreColorSel,
-			backcolor = backColor, backcolor_sel = backColorSel))
-
-		# Borders
-		if self.graphic:
-			if borderTopPix is not None:
-				res.append(MultiContentEntryPixmapAlphaTest(
-						pos = (left, r1.y),
-						size = (r1.w, self.BorderWidth),
-						png = borderTopPix,
-						flags = BT_SCALE))
-			if borderBottomPix is not None:
-				res.append(MultiContentEntryPixmapAlphaTest(
-						pos = (left, r1.h-self.BorderWidth),
-						size = (r1.w, self.BorderWidth),
-						png = borderBottomPix,
-						flags = BT_SCALE))
-			if borderLeftPix is not None:
-				res.append(MultiContentEntryPixmapAlphaTest(
-						pos = (left, r1.y),
-						size = (self.BorderWidth, r1.h),
-						png = borderLeftPix,
-						flags = BT_SCALE))
-			if borderRightPix is not None:
-				res.append(MultiContentEntryPixmapAlphaTest(
-						pos = (r1.w-self.BorderWidth, left),
-						size = (self.BorderWidth, r1.h),
-						png = borderRightPix,
-						flags = BT_SCALE))
-
-		return res
-
-	def fillBouquetList(self, bouquets):
-		if self.graphic and not self.graphicsloaded:
-			self.othPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/OtherEvent.png'))
-			self.selPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/SelectedCurrentEvent.png'))
-
-			self.borderTopPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/BorderTop.png'))
-			self.borderBottomPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/BorderLeft.png'))
-			self.borderLeftPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/BorderBottom.png'))
-			self.borderRightPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/BorderRight.png'))
-			self.borderSelectedTopPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/SelectedBorderTop.png'))
-			self.borderSelectedLeftPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/SelectedBorderLeft.png'))
-			self.borderSelectedBottomPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/SelectedBorderBottom.png'))
-			self.borderSelectedRightPix = loadPNG(resolveFilename(SCOPE_ACTIVE_SKIN, 'epg/SelectedBorderRight.png'))
-
-			self.graphicsloaded = True
-		self.bouquetslist = bouquets
-		self.l.setList(self.bouquetslist)
-		self.recalcEntrySize()
-		self.selectionChanged()
-		self.CurrentBouquetService = self.getCurrentBouquetService()
+	# These properties are expected to be Rect not eRect.
+	@property
+	def weekday_rect(self):
+		r = self._weekdayRect
+		return Rect(r.left(), r.top(), r.width(), r.height())
+
+	@weekday_rect.setter
+	def weekday_rect(self, r):
+		self._weekdayRect = eRect(r.x, r.y, r.w, r.h)
+
+	@property
+	def descr_rect(self):
+		r = self._descrRect
+		return Rect(r.left(), r.top(), r.width(), r.height())
+
+	@descr_rect.setter
+	def descr_rect(self, r):
+		self._descrRect = eRect(r.x, r.y, r.w, r.h)
+
+	@property
+	def datetime_rect(self):
+		r = self._datetimeRect
+		return Rect(r.left(), r.top(), r.width(), r.height())
+
+	@datetime_rect.setter
+	def datetime_rect(self, r):
+		self._datetimeRect = eRect(r.x, r.y, r.w, r.h)
diff --git a/lib/python/Components/GUIComponent.py b/lib/python/Components/GUIComponent.py
index 8452b26..a6a85a3 100644
--- a/lib/python/Components/GUIComponent.py
+++ b/lib/python/Components/GUIComponent.py
@@ -10,7 +10,7 @@ class GUIComponent(object):
 		self.onVisibilityChange = [ ]
 		self.__visible = False
 		self.visible = True
-		self.skinAttributes = None
+		self.skinAttributes = []
 		self.deprecationInfo = None
 
 	def execBegin(self):
@@ -33,11 +33,10 @@ class GUIComponent(object):
 		if not self.visible:
 			self.instance.hide()
 
-		if self.skinAttributes is None:
-			return False
-
-		skin.applyAllAttributes(self.instance, desktop, self.skinAttributes, parent.scale)
-		return True
+		if self.skinAttributes:
+			skin.applyAllAttributes(self.instance, desktop, self.skinAttributes, parent.scale)
+			return True
+		return False
 
 	def move(self, x, y = None):
 		# we assume, that x is already an ePoint
diff --git a/lib/python/Components/Harddisk.py b/lib/python/Components/Harddisk.py
index 540c7fa..59eb619 100644
--- a/lib/python/Components/Harddisk.py
+++ b/lib/python/Components/Harddisk.py
@@ -1,120 +1,202 @@
+import errno
 import os
-import time
+import re
+import Task
+
+from boxbranding import getMachineBuild, getMachineMtdRoot
+from enigma import eTimer
+from fcntl import ioctl
+from time import sleep, time
+
+from Components.SystemInfo import SystemInfo
 from Tools.CList import CList
-from SystemInfo import SystemInfo
-from Components.Console import Console
 from Tools.HardwareInfo import HardwareInfo
-from boxbranding import getMachineBuild, getMachineMtdRoot
-import Task
-import re
+
+# DEBUG: REMINDER: This comment needs to be expanded for the benefit of readers.
+# Removable if 1 --> With motor
+# Internal if 1 --> SATA disk
+# Rotational if 0 --> SSD or MMC, 1 --> HDD
+# SDMMC if True --> MMC/CF
+
+# List of Linux major device numbers for devices that will not be handled
+# by Enigma2.
+#
+blacklistedDisks = [
+	1,  # RAM disk (/dev/ram0=0, /dev/initrd=250 [250=Initial RAM disk for old systems, new systems use 0])
+	7,  # Loopback devices (/dev/loop0=0)
+	31,  # ROM/flash memory card (/dev/rom0=0, /dev/rrom0=8, /dev/flash0=16, /dev/rflash0=24 [r=Read Only])
+	240,  # ROM/flash memory card (/dev/rom0=0, /dev/rrom0=8, /dev/flash0=16, /dev/rflash0=24 [r=Read Only])
+	253,  # LOCAL/EXPERIMENTAL USE
+	254,  # LOCAL/EXPERIMENTAL USE
+	259  # MMC block devices (/dev/mmcblk0=0, /dev/mmcblk0p1=1, /dev/mmcblk1=8)
+]
+
+# List of Linux major device numbers that represent optical drives.
+#
+opticalDisks = [
+	3,  # First MFM, RLL and IDE hard disk/CD-ROM interface
+	11,  # SCSI CD-ROM devices
+	15,  # Sony CDU-31A/CDU-33A CD-ROM
+	16,  # GoldStar CD-ROM
+	17,  # Optics Storage CD-ROM
+	18,  # Sanyo CD-ROM
+	20,  # Hitachi CD-ROM (under development)
+	22,  # Second IDE hard disk/CD-ROM interface
+	23,  # Mitsumi proprietary CD-ROM
+	24,  # Sony CDU-535 CD-ROM
+	25,  # First Matsushita (Panasonic/SoundBlaster) CD-ROM
+	26,  # Second Matsushita (Panasonic/SoundBlaster) CD-ROM
+	27,  # Third Matsushita (Panasonic/SoundBlaster) CD-ROM
+	28,  # Fourth Matsushita (Panasonic/SoundBlaster) CD-ROM
+	29,  # Aztech/Orchid/Okano/Wearnes CD-ROM
+	30,  # Philips LMS CM-205 CD-ROM
+	32,  # Philips LMS CM-206 CD-ROM
+	33,  # Third IDE hard disk/CD-ROM interface
+	34,  # Fourth IDE hard disk/CD-ROM interface
+	46,  # Parallel port ATAPI CD-ROM devices
+	56,  # Fifth IDE hard disk/CD-ROM interface
+	57,  # Sixth IDE hard disk/CD-ROM interface
+	88,  # Seventh IDE hard disk/CD-ROM interface
+	89,  # Eighth IDE hard disk/CD-ROM interface
+	90,  # Ninth IDE hard disk/CD-ROM interface
+	91,  # Tenth IDE hard disk/CD-ROM interface
+	113  # IBM iSeries virtual CD-ROM
+]
 
 def readFile(filename):
-	file = open(filename)
-	data = file.read().strip()
-	file.close()
+	try:
+		with open(filename, "r") as fd:
+			data = fd.read().strip()
+	except (IOError, OSError) as err:
+		if err.errno != errno.ENOENT:  # No such file or directory.
+			print "[Harddisk] Error: Failed to read file! ", err
+		data = None
 	return data
 
+def runCommand(command):
+	print "[Harddisk] Command: '%s'." % command
+	exitStatus = os.system(command)
+	exitStatus = exitStatus >> 8
+	if exitStatus:
+		print "[Harddisk] Error: Command '%s' returned error code %d!" % (command, exitStatus)
+	return exitStatus
+
 def getProcMounts():
 	try:
-		mounts = open("/proc/mounts", 'r')
-		result = []
-		tmp = [line.strip().split(' ') for line in mounts]
-		mounts.close()
-		for item in tmp:
-			# Spaces are encoded as \040 in mounts
-			item[1] = item[1].replace('\\040', ' ')
-			result.append(item)
-		return result
-	except IOError, ex:
-		print "[Harddisk] Failed to open /proc/mounts", ex
+		with open("/proc/mounts", "r") as fd:
+			lines = fd.readlines()
+	except (IOError, OSError) as err:
+		print "[Harddisk] Error: Failed to open '/proc/mounts':", err
 		return []
+	result = [line.strip().split(" ") for line in lines]
+	for item in result:
+		item[1] = item[1].replace("\\040", " ")  # Spaces are encoded as \040 in mounts.
+	return result
 
 def isFileSystemSupported(filesystem):
 	try:
-		file = open('/proc/filesystems', 'r')
-		for fs in file:
-			if fs.strip().endswith(filesystem):
-				file.close()
-				return True
-		file.close()
-		return False
-	except Exception, ex:
-		print "[Harddisk] Failed to read /proc/filesystems:", ex
+		with open("/proc/filesystems", "r") as fd:
+			for line in fd.readlines():
+				if line.strip().endswith(filesystem):
+					return True
+	except (IOError, OSError) as err:
+		print "[Harddisk] Error: Failed to read '/proc/filesystems':", err
+	return False
 
 def findMountPoint(path):
-	"""Example: findMountPoint("/media/hdd/some/file") returns "/media/hdd\""""
+	'Example: findMountPoint("/media/hdd/some/file") returns "/media/hdd"'
 	path = os.path.abspath(path)
 	while not os.path.ismount(path):
 		path = os.path.dirname(path)
 	return path
 
+def internalHDDNotSleeping():
+	if harddiskmanager.HDDCount():
+		for hdd in harddiskmanager.HDDList():
+			if ("sata" in hdd[1].phys_path or "pci" in hdd[1].phys_path or "ahci" in hdd[1].phys_path) and hdd[1].max_idle_time and not hdd[1].isSleeping():
+				return True
+	return False
+
+def addInstallTask(job, package):
+	task = Task.LoggingTask(job, _("Update packages..."))
+	task.setTool("opkg")
+	task.args.append("update")
+	task = Task.LoggingTask(job, _("Install '%s'") % package)
+	task.setTool("opkg")
+	task.args.append("install")
+	task.args.append(package)
 
-DEVTYPE_UDEV = 0
-DEVTYPE_DEVFS = 1
 
-class Harddisk:
-	def __init__(self, device, removable = False):
-		self.device = device
+SystemInfo["ext4"] = isFileSystemSupported("ext4")
 
-		if os.access("/dev/.udev", 0):
-			self.type = DEVTYPE_UDEV
-		elif os.access("/dev/.devfsd", 0):
-			self.type = DEVTYPE_DEVFS
-		else:
-			print "[Harddisk] Unable to determine structure of /dev, defaulting to UDEV"
-			self.type = DEVTYPE_UDEV
 
+class Harddisk:
+	def __init__(self, device, removable=False):
+		self.device = device
+		self.removable = removable
+		self.sdmmc = False
 		self.max_idle_time = 0
 		self.idle_running = False
-		self.last_access = time.time()
+		self.last_access = time()
 		self.last_stat = 0
 		self.timer = None
 		self.is_sleeping = False
-
-		self.dev_path = ''
-		self.disk_path = ''
+		self.dev_path = ""
+		self.disk_path = ""
 		self.mount_path = None
 		self.mount_device = None
-		self.phys_path = os.path.realpath(self.sysfsPath('device'))
-
-		if self.type == DEVTYPE_UDEV:
-			self.dev_path = '/dev/' + self.device
+		self.phys_path = os.path.realpath(self.sysfsPath("device"))
+		data = readFile(os.path.join("/sys/block", device, "queue/rotational"))
+		self.rotational = True if data is None else int(data)  # Rotational if 0 --> SSD or MMC, 1 --> HDD.
+		(self.internal, self.busType) = self.deviceState(device)
+		if SystemInfo["Udev"]:
+			self.dev_path = os.path.join("/dev", self.device)
 			self.disk_path = self.dev_path
-
-		elif self.type == DEVTYPE_DEVFS:
-			tmp = readFile(self.sysfsPath('dev')).split(':')
-			s_major = int(tmp[0])
-			s_minor = int(tmp[1])
-			for disc in os.listdir("/dev/discs"):
-				dev_path = os.path.realpath('/dev/discs/' + disc)
-				disk_path = dev_path + '/disc'
-				try:
-					rdev = os.stat(disk_path).st_rdev
-				except OSError:
-					continue
-				if s_major == os.major(rdev) and s_minor == os.minor(rdev):
-					self.dev_path = dev_path
-					self.disk_path = disk_path
-					break
-
-		print "[Harddisk] new Harddisk", self.device, '->', self.dev_path, '->', self.disk_path
-		if not removable:
+			self.sdmmc = "mmc" in self.busType
+		else:
+			tmp = readFile(self.sysfsPath("dev"))
+			if tmp is None:
+				self.sdmmc = None
+			else:
+				tmp = tmp.split(":")
+				s_major = int(tmp[0])
+				s_minor = int(tmp[1])
+				for disc in os.listdir("/dev/discs"):
+					dev_path = os.path.realpath(os.path.join("/dev/discs", disc))
+					disk_path = os.path.join(dev_path, "disc")
+					try:
+						rdev = os.stat(disk_path).st_rdev
+					except (IOError, OSError):
+						continue
+					if s_major == os.major(rdev) and s_minor == os.minor(rdev):
+						self.dev_path = dev_path
+						self.disk_path = disk_path
+						break
+				self.sdmmc = self.device[:2] == "hd" and "host0" not in self.dev_path
+		if (self.internal or not removable) and not self.sdmmc:
+			msg = " (Start Idle)"
 			self.startIdle()
+		else:
+			msg = ""
+		print "[Harddisk] Device '%s' (%s - %s) -> '%s' -> '%s'%s." % (self.device, self.bus(), self.model(), self.dev_path, self.disk_path, msg)
+
+	def __str__(self):
+		return "Harddisk(device=%s, devPath=%s, diskPath=%s, physPath=%s, internal=%s, rotational=%s, removable=%s)" % (self.device, self.dev_path, self.disk_path, self.phys_path, self.internal, self.rotational, self.removable)
 
 	def __lt__(self, ob):
 		return self.device < ob.device
 
+	def sysfsPath(self, filename):
+		return os.path.join("/sys/block", self.device, filename)
+
 	def partitionPath(self, n):
-		if self.type == DEVTYPE_UDEV:
-			if self.dev_path.startswith('/dev/mmcblk'):
-				return self.dev_path + "p" + n
+		if SystemInfo["Udev"]:
+			if self.dev_path.startswith("/dev/mmcblk"):
+				return "%sp%s" % (self.dev_path, n)
 			else:
-				return self.dev_path + n
-		elif self.type == DEVTYPE_DEVFS:
-			return self.dev_path + '/part' + n
-
-	def sysfsPath(self, filename):
-		return os.path.join('/sys/block/', self.device, filename)
+				return "%s%s" % (self.dev_path, n)
+		else:
+			return os.path.join(self.dev_path, "part%s" % n)
 
 	def stop(self):
 		if self.timer:
@@ -122,38 +204,33 @@ class Harddisk:
 			self.timer.callback.remove(self.runIdle)
 
 	def bus(self):
-		ret = _("External")
-		# SD/MMC(F1 specific)
-		if self.type == DEVTYPE_UDEV:
-			card = "sdhci" in self.phys_path
-			type_name = " (SD/MMC)"
-
-		hw_type = HardwareInfo().get_device_name()
-		if hw_type == 'elite' or hw_type == 'premium' or hw_type == 'premium+' or hw_type == 'ultra' :
-			internal = "ide" in self.phys_path
+		if self.internal:
+			busName = _("Internal")
+			if self.rotational == 0:
+				busName = "%s%s" % (busName, " (SSD)")
+			else:
+				busName = "%s%s" % (busName, " (HDD)")
 		else:
-			internal = ("pci" or "ahci") in self.phys_path
-
-		if card:
-			ret += type_name
-		elif internal:
-			ret = _("Internal")
-		return ret
+			busName = _("External")
+			busName = "%s (%s)" % (busName, self.busType)
+		return busName
 
 	def diskSize(self):
-		cap = 0
-		try:
-			line = readFile(self.sysfsPath('size'))
-			cap = int(line)
-		except:
+		data = readFile(self.sysfsPath("size"))
+		if data is None:
 			dev = self.findMount()
 			if dev:
-				stat = os.statvfs(dev)
-				cap = int(stat.f_blocks * stat.f_bsize)
-				return cap / 1000 / 1000
+				try:
+					stat = os.statvfs(dev)
+					cap = int(stat.f_blocks * stat.f_bsize) / 1000 / 1000
+				except (IOError, OSError) as err:
+					print "[Harddisk] Error: Failed to get disk size for '%s':" % dev, err
+					cap = 0
 			else:
-				return cap
-		return cap / 1000 * 512 / 1000
+				cap = 0
+		else:
+			cap = int(data) / 1000 * 512 / 1000
+		return cap
 
 	def capacity(self):
 		cap = self.diskSize()
@@ -161,55 +238,71 @@ class Harddisk:
 			return ""
 		if cap < 1000:
 			return _("%03d MB") % cap
-		return _("%d.%03d GB") % (cap/1000, cap%1000)
+		return _("%d.%03d GB") % (cap / 1000, cap % 1000)
 
 	def model(self):
-		try:
-			if self.device[:2] == "hd":
-				return readFile('/proc/ide/' + self.device + '/model')
-			elif self.device[:2] == "sd":
-				vendor = readFile(self.phys_path + '/vendor')
-				model = readFile(self.phys_path + '/model')
-				return vendor + '(' + model + ')'
-			elif self.device.startswith('mmcblk'):
-				return readFile(self.sysfsPath('device/name'))
-			else:
-				raise Exception, "no hdX or sdX or mmcX"
-		except Exception, e:
-			print "[Harddisk] Failed to get model:", e
-			return "-?-"
+		data = None
+		msg = ""
+		if self.device[:2] == "hd":
+			data = readFile(os.path.join("/proc/ide", self.device, "model"))
+		elif self.device[:2] == "sd":
+			vendor = readFile(os.path.join(self.phys_path, "vendor"))
+			model = readFile(os.path.join(self.phys_path, "model"))
+			if vendor or model and vendor != model:
+				data = "%s (%s)" % (vendor, model)
+		elif self.device.startswith("mmcblk"):
+			data = readFile(self.sysfsPath("device/name"))
+		else:
+			msg = "  Device not hdX or sdX or mmcX."
+		if data is None:
+			print "[Harddisk] Error: Failed to get model!%s:" % msg
+			return "Unknown"
+		return data
 
-	def free(self):
-		dev = self.findMount()
+	def free(self, dev=None):
+		if dev is None:
+			dev = self.findMount()
 		if dev:
 			try:
 				stat = os.statvfs(dev)
-				return (stat.f_bfree/1000) * (stat.f_bsize/1000)
-			except:
-				pass
+				return (stat.f_bfree / 1000) * (stat.f_bsize / 1000)
+			except (IOError, OSError):
+				print "[Harddisk] Error: Failed to get free space for '%s':" % dev, err
 		return -1
 
+	def totalFree(self):
+		mediapath = []
+		freetot = 0
+		for parts in getProcMounts():
+			if os.path.realpath(parts[0]).startswith(self.dev_path):
+				mediapath.append(parts[1])
+		for mpath in mediapath:
+			free = self.free(mpath)
+			if free > 0:
+				freetot += free
+		return freetot
+
+	def Totalfree(self):
+		return self.totalFree()
+
 	def numPartitions(self):
 		numPart = -1
-		if self.type == DEVTYPE_UDEV:
+		if SystemInfo["Udev"]:
 			try:
-				devdir = os.listdir('/dev')
-			except OSError:
+				for filename in os.listdir("/dev"):
+					if filename.startswith(self.device):
+						numPart += 1
+			except (IOError, OSError):
 				return -1
-			for filename in devdir:
-				if filename.startswith(self.device):
-					numPart += 1
-
-		elif self.type == DEVTYPE_DEVFS:
+		else:
 			try:
-				idedir = os.listdir(self.dev_path)
-			except OSError:
+				for filename in os.listdir(self.dev_path):
+					if filename.startswith("disc"):
+						numPart += 1
+					if filename.startswith("part"):
+						numPart += 1
+			except (IOError, OSError):
 				return -1
-			for filename in idedir:
-				if filename.startswith("disc"):
-					numPart += 1
-				if filename.startswith("part"):
-					numPart += 1
 		return numPart
 
 	def mountDevice(self):
@@ -218,6 +311,7 @@ class Harddisk:
 				self.mount_device = parts[0]
 				self.mount_path = parts[1]
 				return parts[1]
+		return None
 
 	def enumMountDevices(self):
 		for parts in getProcMounts():
@@ -232,187 +326,158 @@ class Harddisk:
 	def unmount(self):
 		dev = self.mountDevice()
 		if dev is None:
-			# not mounted, return OK
-			return 0
-		cmd = 'umount ' + dev
-		print "[Harddisk]", cmd
-		res = os.system(cmd)
-		return res >> 8
+			return 0  # Not mounted, return OK.
+		return runCommand("umount %s" % dev)
 
 	def createPartition(self):
-		cmd = 'printf "8,\n;0,0\n;0,0\n;0,0\ny\n" | sfdisk -f -uS ' + self.disk_path
-		res = os.system(cmd)
-		return res >> 8
+		return runCommand("printf \"8,\n;0,0\n;0,0\n;0,0\ny\n\" | sfdisk -f -uS %s" % self.disk_path)
 
 	def mkfs(self):
-		# No longer supported, use createInitializeJob instead
-		return 1
+		return 1  # No longer supported, use createInitializeJob instead.
 
 	def mount(self):
-		# try mounting through fstab first
-		if self.mount_device is None:
+		if self.mount_device is None:  # Try mounting through fstab first.
 			dev = self.partitionPath("1")
 		else:
-			# if previously mounted, use the same spot
-			dev = self.mount_device
+			dev = self.mount_device  # If previously mounted, use the same spot.
 		try:
-			fstab = open("/etc/fstab")
-			lines = fstab.readlines()
-			fstab.close()
-		except IOError:
+			with open("/etc/fstab", "r") as fd:
+				for line in fd.readlines():
+					parts = line.strip().split(" ")
+					fspath = os.path.realpath(parts[0])
+					if fspath == dev:
+						return runCommand("mount -t auto %s" % fspath)
+		except (IOError, OSError):
 			return -1
-		for line in lines:
-			parts = line.strip().split(" ")
-			fspath = os.path.realpath(parts[0])
-			if fspath == dev:
-				print "[Harddisk] mounting:", fspath
-				cmd = "mount -t auto " + fspath
-				res = os.system(cmd)
-				return res >> 8
-		# device is not in fstab
-		res = -1
-		if self.type == DEVTYPE_UDEV:
-			# we can let udev do the job, re-read the partition table
-			res = os.system('hdparm -z ' + self.disk_path)
-			# give udev some time to make the mount, which it will do asynchronously
-			from time import sleep
-			sleep(3)
-		return res >> 8
+		exitCode = -1  # Device is not in fstab.
+		if SystemInfo["Udev"]:
+			exitCode = runCommand("hdparm -z %s" % self.disk_path)  # We can let udev do the job, re-read the partition table.
+			sleep(3)  # Give udev some time to make the mount, which it will do asynchronously.
+		return exitCode
 
 	def fsck(self):
-		# No longer supported, use createCheckJob instead
-		return 1
+		return 1  # No longer supported, use createCheckJob instead.
 
 	def killPartitionTable(self):
-		zero = 512 * '\0'
-		h = open(self.dev_path, 'wb')
-		# delete first 9 sectors, which will likely kill the first partition too
-		for i in range(9):
-			h.write(zero)
-		h.close()
+		zero = 512 * "\0"
+		try:
+			with open(self.dev_path, "wb") as fd:
+				for i in range(9):  # Delete first 9 sectors, which will likely kill the first partition too.
+					fd.write(zero)
+		except (IOError, OSError) as err:
+			print "[Harddisk] Error: Failed to wipe partition table on '%s':" % self.dev_path, err
 
 	def killPartition(self, n):
-		zero = 512 * '\0'
-		part = self.partitionPath(n)
-		h = open(part, 'wb')
-		for i in range(3):
-			h.write(zero)
-		h.close()
+		zero = 512 * "\0"
+		partition = self.partitionPath(n)
+		try:
+			with open(partition, "wb") as fd:
+				for i in range(3):
+					fd.write(zero)
+		except (IOError, OSError) as err:
+			print "[Harddisk] Error: Failed to wipe partition on '%s':" % partition, err
 
 	def createInitializeJob(self):
-		job = Task.Job(_("Initialising storage device..."))
+		print "[Harddisk] Initializing storage device..."
+		job = Task.Job(_("Initializing storage device..."))
 		size = self.diskSize()
-		print "[Harddisk] [HD] size: %s MB" % size
-
+		print "[Harddisk] Disk size: %s MB." % size
 		task = UnmountTask(job, self)
-
-		task = Task.PythonTask(job, _("Removing partition table"))
+		task = Task.PythonTask(job, _("Removing partition table."))
 		task.work = self.killPartitionTable
 		task.weighting = 1
-
-		task = Task.LoggingTask(job, _("Rereading partition table"))
+		task = Task.LoggingTask(job, _("Rereading partition table."))
 		task.weighting = 1
-		task.setTool('hdparm')
-		task.args.append('-z')
+		task.setTool("hdparm")
+		task.args.append("-z")
 		task.args.append(self.disk_path)
-		print "Waiting for partition"
-		task = Task.ConditionTask(job, _("Waiting for partition"), timeoutCount=20)
+		task = Task.ConditionTask(job, _("Waiting for partition."), timeoutCount=20)
 		task.check = lambda: not os.path.exists(self.partitionPath("1"))
 		task.weighting = 1
-
-		if os.path.exists('/usr/sbin/parted'):
+		if os.path.exists("/usr/sbin/parted"):
 			use_parted = True
 		else:
 			if size > 2097151:
-				addInstallTask(job, 'parted')
+				addInstallTask(job, "parted")
 				use_parted = True
 			else:
 				use_parted = False
-
-		print "Creating partition"
-		task = Task.LoggingTask(job, _("Creating partition"))
+		print "[Harddisk] Creating partition."
+		task = Task.LoggingTask(job, _("Creating partition."))
 		task.weighting = 5
 		if use_parted:
-			task.setTool('parted')
+			task.setTool("parted")
 			if size < 1024:
-				# On very small devices, align to block only
-				alignment = 'min'
+				alignment = "min"  # On very small devices, align to block only.
 			else:
-				# Prefer optimal alignment for performance
-				alignment = 'opt'
-			task.args += ['-a', alignment, '-s', self.disk_path, 'mklabel', 'gpt', 'mkpart', 'primary', '0%', '100%']
+				alignment = "opt"  # Prefer optimal alignment for performance.
+			task.args += ["-a", alignment, "-s", self.disk_path, "mklabel", "gpt", "mkpart", "primary", "0%", "100%"]
 		else:
-			task.setTool('sfdisk')
-			task.args.append('-f')
-			task.args.append('-uS')
+			task.setTool("sfdisk")
+			task.args.append("-f")
+			task.args.append("-uS")
 			task.args.append(self.disk_path)
 			if size > 128000:
-				# Start at sector 8 to better support 4k aligned disks
-				print "[Harddisk] [HD] Detected >128GB disk, using 4k alignment"
-				task.initial_input = "8,\n;0,0\n;0,0\n;0,0\ny\n"
+				print "[Harddisk] Detected >128GB disk, using 4k alignment."
+				task.initial_input = "8,\n;0,0\n;0,0\n;0,0\ny\n"  # Start at sector 8 to better support 4k aligned disks.
 			else:
-				# Smaller disks (CF cards, sticks etc) don't need that
-				task.initial_input = "0,\n;\n;\n;\ny\n"
-
-		print "Waiting for partition"
-		task = Task.ConditionTask(job, _("Waiting for partition"))
+				task.initial_input = "0,\n;\n;\n;\ny\n"  # Smaller disks (CF cards, sticks etc) don't need that.
+		task = Task.ConditionTask(job, _("Waiting for partition."))
 		task.check = lambda: os.path.exists(self.partitionPath("1"))
 		task.weighting = 1
-
-		print "Creating filesystem"
-		task = MkfsTask(job, _("Creating filesystem"))
+		print "[Harddisk] Creating filesystem."
+		task = MkfsTask(job, _("Creating filesystem."))
 		big_o_options = ["dir_index"]
-		if isFileSystemSupported("ext4"):
+		if SystemInfo["ext4"]:
 			task.setTool("mkfs.ext4")
 		else:
 			task.setTool("mkfs.ext3")
 		if size > 250000:
-			# No more than 256k i-nodes (prevent problems with fsck memory requirements)
-			task.args += ["-T", "largefile", "-N", "262144"]
+			task.args += ["-T", "largefile", "-N", "262144"]  # No more than 256k i-nodes (prevent problems with fsck memory requirements).
 			big_o_options.append("sparse_super")
 		elif size > 16384:
-			# between 16GB and 250GB: 1 i-node per megabyte
-			task.args += ["-T", "largefile"]
+			task.args += ["-T", "largefile"]  # Between 16GB and 250GB: 1 i-node per megabyte.
 			big_o_options.append("sparse_super")
 		elif size > 2048:
-			# Over 2GB: 32 i-nodes per megabyte
-			task.args += ["-T", "largefile", "-N", str(size * 32)]
+			task.args += ["-T", "largefile", "-N", str(size * 32)]  # Over 2GB: 32 i-nodes per megabyte.
 		task.args += ["-m0", "-O", ",".join(big_o_options), self.partitionPath("1")]
-
 		task = MountTask(job, self)
 		task.weighting = 3
-
-		task = Task.ConditionTask(job, _("Waiting for mount"), timeoutCount=20)
+		print "[Harddisk] Mounting storage device."
+		task = Task.ConditionTask(job, _("Waiting for mount."), timeoutCount=20)
 		task.check = self.mountDevice
 		task.weighting = 1
-
+		print "[Harddisk] Initialization complete."
 		return job
 
 	def initialize(self):
-		# no longer supported
-		return -5
+		return -5  # No longer supported.
 
 	def check(self):
-		# no longer supported
-		return -5
+		return -5  # No longer supported.
 
 	def createCheckJob(self):
+		print "[Harddisk] Checking filesystem..."
 		job = Task.Job(_("Checking filesystem..."))
 		if self.findMount():
-			# Create unmount task if it was not mounted
-			UnmountTask(job, self)
+			UnmountTask(job, self)  # Create unmount task if it was not mounted.
 			dev = self.mount_device
 		else:
-			# otherwise, assume there is one partition
-			dev = self.partitionPath("1")
-		task = Task.LoggingTask(job, "fsck")
-		task.setTool('fsck.ext3')
-		task.args.append('-f')
-		task.args.append('-p')
+			dev = self.partitionPath("1")  # Otherwise, assume there is one partition.
+		partType = "ext4"
+		for parts in getProcMounts():
+			if os.path.realpath(parts[0]).startswith(dev):
+				partType = parts[2]
+		print "[Harddisk] Filesystem type is '%s'." % partType
+		task = Task.LoggingTask(job, _("Checking disk."))  # "fsck"
+		task.setTool("fsck.%s" % partType)
+		task.args.append("-f")
+		task.args.append("-p")
 		task.args.append(dev)
 		MountTask(job, self)
-		task = Task.ConditionTask(job, _("Waiting for mount"))
+		task = Task.ConditionTask(job, _("Waiting for mount."))
 		task.check = self.mountDevice
+		print "[Harddisk] Check complete."
 		return job
 
 	def getDeviceDir(self):
@@ -421,59 +486,80 @@ class Harddisk:
 	def getDeviceName(self):
 		return self.disk_path
 
-	# the HDD idle poll daemon.
-	# as some harddrives have a buggy standby timer, we are doing this by hand here.
-	# first, we disable the hardware timer. then, we check every now and then if
-	# any access has been made to the disc. If there has been no access over a specifed time,
-	# we set the hdd into standby.
+	# HDD idle poll daemon.
+	# As some harddrives have a buggy standby timer, we are doing this
+	# by hand here.  First, we disable the hardware timer. then, we check
+	# every now and then if any access has been made to the disc.  If
+	# there has been no access over a specifed time, we set the hdd into
+	# standby.
+	#
+	# The /sys/block/<dev>/stat file provides several statistics about the
+	# state of block device <dev>.  It consists of a single line of text
+	# containing 11 decimal values separated by whitespace:
+	#
+	# Name            units         description
+	# ----            -----         -----------
+	# read I/Os       requests      number of read I/Os processed
+	# read merges     requests      number of read I/Os merged with in-queue I/O
+	# read sectors    sectors       number of sectors read
+	# read ticks      milliseconds  total wait time for read requests
+	# write I/Os      requests      number of write I/Os processed
+	# write merges    requests      number of write I/Os merged with in-queue I/O
+	# write sectors   sectors       number of sectors written
+	# write ticks     milliseconds  total wait time for write requests
+	# in_flight       requests      number of I/Os currently in flight
+	# io_ticks        milliseconds  total time this block device has been active
+	# time_in_queue   milliseconds  total wait time for all requests
+	# These additional values appear in some documentation!
+	# discard I/Os    requests      number of discard I/Os processed
+	# discard merges  requests      number of discard I/Os merged with in-queue I/O
+	# discard sectors sectors       number of sectors discarded
+	# discard ticks   milliseconds  total wait time for discard requests
+	#
 	def readStats(self):
-		if os.path.exists("/sys/block/%s/stat" % self.device):
-			f = open("/sys/block/%s/stat" % self.device)
-			l = f.read()
-			f.close()
-			data = l.split(None,5)
-			return int(data[0]), int(data[4])
-		else:
-			return -1,-1
+		filename = os.path.join("/sys/block", self.device, "stat")
+		data = readFile(filename)
+		if data is None:
+			print "[Harddisk] Error: Failed to read '%s' stats!" % filename
+			return -1, -1
+		data = data.split()
+		return int(data[0]), int(data[4])  # Return read I/Os, write I/Os.
 
 	def startIdle(self):
-		from enigma import eTimer
-
-		# disable HDD standby timer
-		if self.bus() == _("External"):
-			Console().ePopen(("sdparm", "sdparm", "--set=SCT=0", self.disk_path))
+		# Disable HDD standby timer.
+		if self.internal:
+			runCommand("hdparm -S0 %s" % self.disk_path)
 		else:
-			Console().ePopen(("hdparm", "hdparm", "-S0", self.disk_path))
+			exitCode = runCommand("sdparm --set=SCT=0 %s" % self.disk_path)
+			if exitCode:
+				runCommand("hdparm -S0 %s" % self.disk_path)
 		self.timer = eTimer()
 		self.timer.callback.append(self.runIdle)
 		self.idle_running = True
-		self.setIdleTime(self.max_idle_time) # kick the idle polling loop
+		self.setIdleTime(self.max_idle_time)  # Kick the idle polling loop.
 
 	def runIdle(self):
 		if not self.max_idle_time:
 			return
-		t = time.time()
-
-		idle_time = t - self.last_access
-
-		stats = self.readStats()
-		l = sum(stats)
-
-		if l != self.last_stat and l >= 0: # access
-			self.last_stat = l
-			self.last_access = t
+		now = time()
+		idle_time = now - self.last_access
+		stats = sum(self.readStats())
+		if stats != self.last_stat and stats >= 0:  # There has been disk access.
+			self.last_stat = stats
+			self.last_access = now
 			idle_time = 0
 			self.is_sleeping = False
-
 		if idle_time >= self.max_idle_time and not self.is_sleeping:
 			self.setSleep()
 			self.is_sleeping = True
 
 	def setSleep(self):
-		if self.bus() == _("External"):
-			Console().ePopen(("sdparm", "sdparm", "--flexible", "--readonly", "--command=stop", self.disk_path))
+		if self.internal:
+			runCommand("hdparm -y %s" % self.disk_path)
 		else:
-			Console().ePopen(("hdparm", "hdparm", "-y", self.disk_path))
+			exitCode = runCommand("sdparm --flexible --readonly --command=stop %s" % self.disk_path)
+			if exitCode:
+				runCommand("hdparm -y %s" % self.disk_path)
 
 	def setIdleTime(self, idle):
 		self.max_idle_time = idle
@@ -481,68 +567,85 @@ class Harddisk:
 			if not idle:
 				self.timer.stop()
 			else:
-				self.timer.start(idle * 100, False)  # poll 10 times per period.
+				self.timer.start(idle * 100, False)  # Poll 10 times per period.
 
 	def isSleeping(self):
 		return self.is_sleeping
 
+	def deviceState(self, device):
+		hotplugBuses = ("usb", "mmc", "pcmcia", "ieee1394", "firewire")
+		if not self.phys_path.startswith("/sys/devices/platform/"):
+			return (False, "ERROR")
+		match = None
+		for bus in hotplugBuses:
+			if "/%s" % bus in self.phys_path:
+				match = bus
+				break
+		if match:
+			# print "[Harddisk] DEBUG: Device is removable.  (device='%s', match='%s')" % (device, match)
+			return (False, match)
+		else:
+			# print "[Harddisk] DEBUG: Device is not removable.  (device='%s', No bus)" % (device)
+			return (True, "ATA")
+
+
 class Partition:
-	# for backward compatibility, force_mounted actually means "hotplug"
-	def __init__(self, mountpoint, device = None, description = "", force_mounted = False):
+	# For backward compatibility, force_mounted actually means "hotplug".
+	def __init__(self, mountpoint, device=None, description="", force_mounted=False):
 		self.mountpoint = mountpoint
+		self.device = device
 		self.description = description
 		self.force_mounted = mountpoint and force_mounted
-		self.is_hotplug = force_mounted # so far; this might change.
-		self.device = device
+		self.is_hotplug = force_mounted  # So far; this might change.
+
 	def __str__(self):
-		return "Partition(mountpoint=%s,description=%s,device=%s)" % (self.mountpoint,self.description,self.device)
+		return "Partition(mountpoint=%s, description=%s, device=%s)" % (self.mountpoint, self.description, self.device)
 
 	def stat(self):
 		if self.mountpoint:
 			return os.statvfs(self.mountpoint)
 		else:
-			raise OSError, "Device %s is not mounted" % self.device
+			raise OSError("Device '%s' is not mounted!" % self.device)
 
 	def free(self):
 		try:
-			s = self.stat()
-			return s.f_bavail * s.f_bsize
-		except OSError:
+			status = self.stat()
+			return status.f_bavail * status.f_bsize
+		except (IOError, OSError):
 			return None
 
 	def total(self):
 		try:
-			s = self.stat()
-			return s.f_blocks * s.f_bsize
-		except OSError:
+			status = self.stat()
+			return status.f_blocks * status.f_bsize
+		except (IOError, OSError):
 			return None
 
 	def tabbedDescription(self):
-		if self.mountpoint.startswith('/media/net') or self.mountpoint.startswith('/media/autofs'):
-			# Network devices have a user defined name
-			return self.description
-		return self.description + '\t' + self.mountpoint
+		if self.mountpoint.startswith("/media/net") or self.mountpoint.startswith("/media/autofs"):
+			return self.description  # Network devices have a user defined name.
+		return "%s\t%s" % (self.description, self.mountpoint)
 
-	def mounted(self, mounts = None):
+	def mounted(self, mounts=None):
 		# THANK YOU PYTHON FOR STRIPPING AWAY f_fsid.
-		# TODO: can os.path.ismount be used?
+		# TODO: Can os.path.ismount be used?
 		if self.force_mounted:
 			return True
 		if self.mountpoint:
 			if mounts is None:
 				mounts = getProcMounts()
 			for parts in mounts:
-				if self.mountpoint.startswith(parts[1]): # use startswith so a mount not ending with '/' is also detected.
+				if self.mountpoint.startswith(parts[1]):  # Use startswith so a mount not ending with "/" is also detected.
 					return True
 		return False
 
-	def filesystem(self, mounts = None):
+	def filesystem(self, mounts=None):
 		if self.mountpoint:
 			if mounts is None:
 				mounts = getProcMounts()
 			for fields in mounts:
-				if self.mountpoint.endswith('/') and not self.mountpoint == '/':
-					if fields[1] + '/' == self.mountpoint:
+				if self.mountpoint.endswith(os.sep) and not self.mountpoint == os.sep:
+					if "%s%s" % (fields[1], os.sep) == self.mountpoint:
 						return fields[2]
 				else:
 					if fields[1] == self.mountpoint:
@@ -571,355 +674,387 @@ DEVICEDB = \
 		"/devices/pci0000:00/0000:00:14.1/ide0/0.0": "Internal Harddisk"
 	}
 	}
-
-def addInstallTask(job, package):
-	task = Task.LoggingTask(job, "update packages")
-	task.setTool('opkg')
-	task.args.append('update')
-	task = Task.LoggingTask(job, "Install " + package)
-	task.setTool('opkg')
-	task.args.append('install')
-	task.args.append(package)
+		return ""
 
 class HarddiskManager:
 	def __init__(self):
-		self.hdd = [ ]
+		self.hdd = []
+		self.partitions = []
 		self.cd = ""
-		self.partitions = [ ]
-		self.devices_scanned_on_init = [ ]
 		self.on_partition_list_change = CList()
 		self.enumerateBlockDevices()
 		self.enumerateNetworkMounts()
-		# Find stuff not detected by the enumeration
-		p = [("/", _("Internal flash"))]
-		self.partitions.extend([ Partition(mountpoint = x[0], description = x[1]) for x in p ])
-
-	def getBlockDevInfo(self, blockdev):
-		devpath = "/sys/block/" + blockdev
-		error = False
-		removable = False
-		z = open('/proc/cmdline', 'r').read()
-		BLACKLIST=[]
-		if SystemInfo["HasMMC"]:
-			BLACKLIST=["%s" %(getMachineMtdRoot()[0:7])]
-		if SystemInfo["HasMMC"] and "root=/dev/mmcblk0p1" in z:
-			BLACKLIST=["mmcblk0p1"]
-		blacklisted = False
-		if blockdev[:7] in BLACKLIST:
-			blacklisted = True
-		if blockdev.startswith("mmcblk") and (re.search(r"mmcblk\dboot", blockdev) or re.search(r"mmcblk\drpmb", blockdev)):
-			blacklisted = True
-		is_cdrom = False
-		partitions = []
-		try:
-			if os.path.exists(devpath + "/removable"):
-				removable = bool(int(readFile(devpath + "/removable")))
-			if os.path.exists(devpath + "/dev"):
-				dev = int(readFile(devpath + "/dev").split(':')[0])
-			else:
-				dev = None
-			blacklisted = dev in [1, 7, 31, 253, 254] + (SystemInfo["HasMMC"] and [179] or []) #ram, loop, mtdblock, romblock, ramzswap, mmc
-			if blockdev == "mmcblk1" and "mmcblk1" not in BLACKLIST:
-				blacklisted = False
-			if blockdev[0:2] == 'sr':
-				is_cdrom = True
-			if blockdev[0:2] == 'hd':
-				try:
-					media = readFile("/proc/ide/%s/media" % blockdev)
-					if "cdrom" in media:
-						is_cdrom = True
-				except IOError:
-					error = True
-			# check for partitions
-			if not is_cdrom and os.path.exists(devpath):
-				for partition in os.listdir(devpath):
-					if partition[0:len(blockdev)] != blockdev:
-						continue
-					if dev == 179 and not re.search(r"mmcblk\dp\d+", partition):
-						continue
-					partitions.append(partition)
-			else:
-				self.cd = blockdev
-		except IOError:
-			error = True
-		# check for medium
-		medium_found = True
-		try:
-			if os.path.exists("/dev/" + blockdev):
-				open("/dev/" + blockdev).close()
-		except IOError, err:
-			if err.errno == 159: # no medium present
-				medium_found = False
-
-		return error, blacklisted, removable, is_cdrom, partitions, medium_found
 
 	def enumerateBlockDevices(self):
-		print "[Harddisk] enumerating block devices..."
-		for blockdev in os.listdir("/sys/block"):
-			error, blacklisted, removable, is_cdrom, partitions, medium_found = self.addHotplugPartition(blockdev)
-			if not error and not blacklisted and medium_found:
-				for part in partitions:
-					self.addHotplugPartition(part)
-				self.devices_scanned_on_init.append((blockdev, removable, is_cdrom, medium_found))
+		print "[Harddisk] Enumerating block devices..."
+		self.partitions.append(Partition(mountpoint="/", description=_("Internal flash")))  # Add the root device.
+		# print "[Harddisk] DEBUG: Partition(mountpoint=%s, description=%s)" % ("/", _("Internal flash"))
+		try:
+			rootDev = os.stat("/").st_dev
+			rootMajor = os.major(rootDev)
+			rootMinor = os.minor(rootDev)
+		except (IOError, OSError):
+			rootMajor = None
+			rootMinor = None
+		# print "[Harddisk] DEBUG: rootMajor='%s', rootMinor='%s'" % (rootMajor, rootMinor)
+		for device in sorted(os.listdir("/sys/block")):
+			try:
+				physicalDevice = os.path.realpath(os.path.join("/sys/block", device, "device"))
+			except (IOError, OSError) as err:
+				print "[Harddisk] Error: Couldn't determine physicalDevice for device '%s':" % device, err
+				continue
+			devicePath = os.path.join("/sys/block/", device)
+			data = readFile(os.path.join(devicePath, "dev"))  # This is the device's major and minor device numbers.
+			if data is None:
+				print "[Harddisk] Error: Device '%s' (%s) does not appear to have valid device numbers!" % (device, physicalDevice)
+				continue
+			devMajor = int(data.split(":")[0])
+			if devMajor in blacklistedDisks:
+				# print "[Harddisk] DEBUG: Major device number '%s' for device '%s' (%s) is blacklisted." % (devMajor, device, physicalDevice)
+				continue
+			if devMajor == 179 and not SystemInfo["HasSDnomount"]:
+				# print "[Harddisk] DEBUG: Major device number '%s' for device '%s' (%s) doesn't have 'HasSDnomount' set." % (devMajor, device, physicalDevice)
+				continue
+			if devMajor == 179 and devMajor == rootMajor and not SystemInfo["HasSDnomount"][0]:
+				# print "[Harddisk] DEBUG: Major device number '%s' for device '%s' (%s) is the root disk." % (devMajor, device, physicalDevice)
+				continue
+			if SystemInfo["HasSDnomount"] and device.startswith("%s" % (SystemInfo["HasSDnomount"][1])) and SystemInfo["HasSDnomount"][0]:
+				# print "[Harddisk] DEBUG: Major device number '%s' for device '%s' (%s) starts with 'mmcblk0' and has 'HasSDnomount' set." % (devMajor, device, physicalDevice)
+				continue
+			description = self.getUserfriendlyDeviceName(device, physicalDevice)
+			isCdrom = devMajor in opticalDisks or device.startswith("sr")
+			if isCdrom:
+				self.cd = devicePath
+				self.partitions.append(Partition(mountpoint=self.getMountpoint(device), description=description, force_mounted=True, device=device))
+				# print "[Harddisk] DEBUG: Partition(mountpoint=%s, description=%s, force_mounted=True, device=%s)" % (self.getMountpoint(device), description, device)
+				print "[Harddisk] Found optical disk '%s' (%s)." % (device, physicalDevice)
+			data = readFile(os.path.join(devicePath, "removable"))
+			removable = False if data is None else bool(int(data))
+			# if removable:
+			# 	print "[Harddisk] DEBUG: Device '%s' (%s) has removable media." % (device, physicalDevice)
+			try:
+				open(os.path.join("/dev", device), "r").close()
+				mediumFound = True  # Check for medium.
+			except (IOError, OSError) as err:
+				if err.errno in (123, 159):  # ENOMEDIUM - No medium found.  (123=Common Linux, 159=MIPS Linux)
+					mediumFound = False
+				else:
+					print "[Harddisk] Error: Device '%s' (%s) media availability test failed:" % (device, physicalDevice), err
+					continue
+			# if mediumFound:
+			# 	print "[Harddisk] DEBUG: Device '%s' (%s) has media." % (device, physicalDevice)
+			# print "[Harddisk] DEBUG: device='%s', physicalDevice='%s', devMajor='%s', description='%s'" % (device, physicalDevice, devMajor, description)
+			if not isCdrom and os.path.exists(devicePath):
+				partitions = [partition for partition in sorted(os.listdir(devicePath)) if partition.startswith(device)]  # Add HDD check for partitions.
+				if len(partitions) == 0:  # Add HDD check for HDD with no partitions (unformatted).
+					print "[Harddisk] Found storage device '%s' (Removable=%s) NoPartitions = %s." % (device, removable, len(partitions))
+					self.hdd.append(Harddisk(device, removable))
+					SystemInfo["Harddisk"] = True
+				else:
+					if SystemInfo["HasHiSi"] and devMajor == 8 and len(partitions) >= 4:
+						partitions = partitions[4:]
+					print "[Harddisk] len partitions = %s, device = %s" % (len(partitions), device)
+					if len(partitions) != 0:
+						print "[Harddisk] Found storage device '%s' (Removable=%s) NoPartitions = %s." % (device, removable, len(partitions))
+						self.hdd.append(Harddisk(device, removable))
+						SystemInfo["Harddisk"] = True
+						# self.partitions.append(Partition(mountpoint=self.getMountpoint(device), description=description, force_mounted, device=device))
+						# print "[Harddisk] DEBUG: Partition(mountpoint=%s, description=%s, force_mounted=True, device=%s)" % (self.getMountpoint(device), description, device)
+						for partition in partitions:
+							description = self.getUserfriendlyDeviceName(partition, physicalDevice)
+							print "[Harddisk] Found partition '%s', description='%s', device='%s'." % (partition, description, physicalDevice)
+							part = Partition(mountpoint=self.getMountpoint(partition), description=description, force_mounted=True, device=partition)
+							self.partitions.append(part)
+							# print "[Harddisk] DEBUG: Partition(mountpoint=%s, description=%s, force_mounted=True, device=%s)" % (self.getMountpoint(partition), description, partition)
+							self.on_partition_list_change("add", part)
+							# print "[Harddisk] DEBUG: on_partition_list_change('add', Partition(mountpoint=%s, description=%s, force_mounted=True, device=%s))" % (self.getMountpoint(partition), description, partition)
+		self.hdd.sort()
+		print "[Harddisk] Enumerating block devices complete."
 
 	def enumerateNetworkMounts(self):
-		print "[Harddisk] enumerating network mounts..."
-		netmount = (os.path.exists('/media/net') and os.listdir('/media/net')) or ""
-		if len(netmount) > 0:
-			for fil in netmount:
-				if os.path.ismount('/media/net/' + fil):
-					print "[Harddisk] new Network Mount", fil, '->', os.path.join('/media/net/',fil)
-					self.partitions.append(Partition(mountpoint = os.path.join('/media/net/',fil + '/'), description = fil))
-		autofsmount = (os.path.exists('/media/autofs') and os.listdir('/media/autofs')) or ""
-		if len(autofsmount) > 0:
-			for fil in autofsmount:
-				if os.path.ismount('/media/autofs/' + fil) or os.path.exists('/media/autofs/' + fil):
-					print "[Harddisk] new Network Mount", fil, '->', os.path.join('/media/autofs/',fil)
-					self.partitions.append(Partition(mountpoint = os.path.join('/media/autofs/',fil + '/'), description = fil))
-		if os.path.ismount('/media/hdd') and '/media/hdd/' not in [p.mountpoint for p in self.partitions]:
+		print "[Harddisk] Enumerating network mounts..."
+		for entry in sorted(os.listdir("/media")):
+			mountEntry = os.path.join("/media", entry)
+			mounts = os.listdir(mountEntry)
+			if len(mounts) > 0:
+				for mount in mounts:
+					mountDir = os.path.join(mountEntry, mount, "")
+					# print "[Harddisk] enumerateNetworkMountsNew DEBUG: mountDir='%s', isMount='%s'" % (mountDir, os.path.ismount(mountDir))
+					if os.path.ismount(mountDir) and mountDir not in [partition.mountpoint for partition in self.partitions]:
+						print "[Harddisk] Found network mount (%s) '%s' -> '%s'." % (entry, mount, mountDir)
+						self.partitions.append(Partition(mountpoint=mountDir, description=mount))
+						# print "[Harddisk] DEBUG: Partition(mountpoint=%s, description=%s)" % (mountDir, mount)
+					elif "/media/net" in mountEntry and os.path.exists(mountDir) and mountDir not in [partition.mountpoint for partition in self.partitions]:
+						print "[Harddisk] Found network mount (%s) '%s' -> '%s'." % (entry, mount, mountDir)
+						self.partitions.append(Partition(mountpoint=mountDir, description=mount))
+		if os.path.ismount("/media/hdd") and "/media/hdd/" not in [partition.mountpoint for partition in self.partitions]:
 			print "[Harddisk] new Network Mount being used as HDD replacement -> /media/hdd/"
-			self.partitions.append(Partition(mountpoint = '/media/hdd/', description = '/media/hdd'))
+			self.partitions.append(Partition(mountpoint = "/media/hdd/", description = "/media/hdd"))
+		print "[Harddisk] Enumerating network mounts complete."
+
+	def getUserfriendlyDeviceName(self, device, physicalDevice):
+		dev, part = self.splitDeviceName(device)
+		description = readFile(os.path.join(physicalDevice, "model"))
+		if description is None:
+			description = readFile(os.path.join(physicalDevice, "name"))
+			if description is None:
+				# print "[Harddisk] Error: Couldn't read harddisk model on '%s' ('%s')!" % (device, physicalDevice)
+				description = _("Device %s") % dev
+		if part:  # and part != 1:  # Not wholedisk and not partition 1.
+			description = "%s %s" % (description, _("(Partition %d)") % part)
+		return description
+
+	def splitDeviceName(self, devName):
+		devNameLen = len(devName)
+		device = devName.rstrip("0123456789")
+		deviceLen = len(device)
+		if devName.startswith("mmcblk"):  # This works for devices in the form: mmcblk0pX
+			if device.endswith("p") and deviceLen < devNameLen:
+				device = devName[0:deviceLen - 1]
+				partition = int(devName[deviceLen:])
+			else:
+				device = devName
+				partition = 0
+		else:  # This works for devices in the form: sdaX, hdaX, srX or any device that has a numeric suffix.
+			partition = int(devName[deviceLen:]) if deviceLen < devNameLen else 0
+		# print "[Harddisk] splitDeviceName DEBUG: devName='%s', device='%s', partition='%d'" % (devName, device, partition)
+		return device, partition
 
 	def getAutofsMountpoint(self, device):
-		r = self.getMountpoint(device)
-		if r is None:
-			return "/media/" + device
-		return r
+		mnt = self.getMountpoint(device)
+		if mnt is None:
+			return os.path.join("/media", device)
+		return mnt
 
 	def getMountpoint(self, device):
-		dev = "/dev/%s" % device
+		dev = os.path.join("/dev", device)
 		for item in getProcMounts():
 			if item[0] == dev:
-				return item[1] + '/'
+				return os.path.join(item[1], "")
 		return None
 
-	def addHotplugPartition(self, device, physdev = None):
-		# device is the device name, without /dev
-		# physdev is the physical device path, which we (might) use to determine the userfriendly name
-		if not physdev:
-			dev, part = self.splitDeviceName(device)
-			try:
-				physdev = os.path.realpath('/sys/block/' + dev + '/device')[4:]
-			except OSError:
-				physdev = dev
-				print "[Harddisk] couldn't determine blockdev physdev for device", device
-		error, blacklisted, removable, is_cdrom, partitions, medium_found = self.getBlockDevInfo(self.splitDeviceName(device)[0])
-		hw_type = HardwareInfo().get_device_name()
-		if hw_type == 'elite' or hw_type == 'premium' or hw_type == 'premium+' or hw_type == 'ultra' :
-			if device[0:3] == "hda": blacklisted = True
-		if not blacklisted and medium_found:
-			description = self.getUserfriendlyDeviceName(device, physdev)
-			p = Partition(mountpoint = self.getMountpoint(device), description = description, force_mounted = True, device = device)
-			self.partitions.append(p)
-			if p.mountpoint: # Plugins won't expect unmounted devices
-				self.on_partition_list_change("add", p)
-			# see if this is a harddrive
-			l = len(device)
-			if l and (not device[l-1].isdigit() or (device.startswith('mmcblk') and not re.search(r"mmcblk\dp\d+", device))):
-				self.hdd.append(Harddisk(device, removable))
-				self.hdd.sort()
-				SystemInfo["Harddisk"] = True
-		return error, blacklisted, removable, is_cdrom, partitions, medium_found
+	# device - Hotplug passed partition name, without /dev e.g. mmcblk1p1.
+	# physDevice - Hotplug passed incorrect device path e.g. /block/mmcblk1/device - Not much use!
+	# physicalDevice is the physical device path e.g. sys/block/mmcblk1/device.
+	# devicePath in def is e.g. /sys/block/mmcblk1.
+	# hddDev is the hdd device name e.g. mmcblk1.
+	#
+	def addHotplugPartition(self, device, physDevice=None):
+		print "[Harddisk] Evaluating hotplug connected device..."
+		print "[Harddisk] DEBUG: device='%s', physDevice='%s'" % (device, physDevice)
+		HDDin = error = removable = isCdrom = blacklisted = False
+		mediumFound = True
+		hddDev, part = self.splitDeviceName(device)
+		devicePath = "/sys/block/%s" % hddDev
+		try:
+			physicalDevice = os.path.realpath(os.path.join("/sys/block", hddDev, "device"))
+		except (IOError, OSError):
+			print "[Harddisk] Error: Couldn't determine physical device for device '%s'!" % hddDev
+			physicalDevice = hddDev
+		description = self.getUserfriendlyDeviceName(device, physicalDevice)
+		# print "[Harddisk] DEBUG: Hotplug description='%s', devicePath='%s', hddDev='%s'." % (description, devicePath, hddDev)
+		data = readFile(os.path.join(devicePath, "dev"))  # This is the device's major and minor device numbers.
+		if data is not None:
+			devMajor = int(data.split(":")[0])
+			isCdrom = devMajor in opticalDisks or device.startswith("sr")
+			if isCdrom:
+				print "[Harddisk] Found optical disk '%s' (%s)." % (device, physicalDevice)
+				self.cd = devicePath
+				self.partitions.append(Partition(mountpoint=self.getMountpoint(hddDev), description=description, force_mounted=True, device=hddDev))
+			else:  # Lets get to work on real HDD.
+				data = readFile(os.path.join(devicePath, "removable"))
+				removable = False if data is None else bool(int(data))
+				for hdd in self.hdd:  # Perhaps the disk has not been removed, so don't add it again.
+					# print "[Harddisk] DEBUG hddDev in hddlist. (hdd='%s', hdd.device='%s', hddDev='%s')" % (hdd, hdd.device, hddDev)
+					if hdd.device == hddDev:
+						HDDin = True
+						break
+				partitions = [partition for partition in sorted(os.listdir(devicePath)) if partition.startswith(hddDev)]
+				if SystemInfo["HasHiSi"] and devMajor == 8 and len(partitions) >= 4:
+					partitions = partitions[4:]
+				if HDDin is False and len(partitions) != 0:
+					print "[Harddisk] Found storage device '%s' (Removable=%s)." % (device, removable)
+					self.hdd.append(Harddisk(hddDev, removable))
+					# print "[Harddisk] DEBUG: Add hotplug HDD device in hddlist. (device='%s', hdd.device='%s', hddDev='%s')" % (device, hdd.device, hddDev)
+					self.hdd.sort()
+					SystemInfo["Harddisk"] = True
+				# self.partitions.append(Partition(mountpoint=self.getMountpoint(hddDev), description=description, force_mounted=True, device=hddDev))
+				# print "[Harddisk] DEBUG add hddDev: Partition(mountpoint=%s, description=%s, force_mounted=True, hddDev=%s)" % (self.getMountpoint(device), description, hddDev)
+				for partition in partitions:
+					description = self.getUserfriendlyDeviceName(partition, physicalDevice)
+					print "[Harddisk] Found partition '%s', description='%s', device='%s'." % (partition, description, physicalDevice)
+					part = Partition(mountpoint=self.getMountpoint(partition), description=description, force_mounted=True, device=partition)  # add in partition
+					# print "[Harddisk] DEBUG add partition: Part(mountpoint=%s, description=%s, force_mounted=True, device=%s)" % (self.getMountpoint(partition), description, partition)
+					self.partitions.append(part)
+					if part.mountpoint:  # Plugins won't expect unmounted devices.
+						self.on_partition_list_change("add", part)
+						# print "[Harddisk] DEBUG: on_partition_list_change('add', Partition(mountpoint=%s, description=%s, force_mounted=True, device=%s))" % (self.getMountpoint(partition), description, partition)
+		print "[Harddisk] Hotplug connection complete."
+		return error, blacklisted, removable, isCdrom, self.partitions, mediumFound  # Return for hotplug legacy code.
 
 	def removeHotplugPartition(self, device):
-		for x in self.partitions[:]:
-			if x.device == device:
-				self.partitions.remove(x)
-				if x.mountpoint: # Plugins won't expect unmounted devices
-					self.on_partition_list_change("remove", x)
-		l = len(device)
-		if l and (not device[l-1].isdigit() or (device.startswith('mmcblk') and not re.search(r"mmcblk\dp\d+", device))):
-			for hdd in self.hdd:
-				if hdd.device == device:
-					hdd.stop()
-					self.hdd.remove(hdd)
-					break
-			SystemInfo["Harddisk"] = len(self.hdd) > 0
+		print "[Harddisk] Evaluating hotplug disconnected device..."
+		hddDev, part = self.splitDeviceName(device)  # Separate the device from the partition.
+		for partition in self.partitions:
+			if partition.device is None:
+				continue
+			pDevice = partition.device
+			# print "[Harddisk] DEBUG: Partition is in self.partitions.  (partition.device='%s', device='%s')" % (pDevice, device)
+			if pDevice.startswith(hddDev):  # This is the disk's partition for which we are looking.
+				print "[Harddisk] Unmounting partition '%s'." % device
+				self.partitions.remove(partition)  # Remove partition.
+				if partition.mountpoint:  # Plugins won't expect unmounted devices.
+					self.on_partition_list_change("remove", partition)
+		for hdd in self.hdd:
+			if hdd.device == hddDev:  # This is the storage device for which we are looking.
+				print "[Harddisk] Removing storage device '%s'." % hddDev
+				# print "[Harddisk] DEBUG: Storage device is in self.hdd.  (hdd.device='%s', device='%s', hddDev='%s')" % (hdd.device, device, hddDev)
+				hdd.stop()  # Stop the disk.
+				self.hdd.remove(hdd)  # Remove the disk.
+				break
+		SystemInfo["Harddisk"] = len(self.hdd) > 0
+		print "[Harddisk] Hotplug disconnection complete."
 
 	def HDDCount(self):
 		return len(self.hdd)
 
 	def HDDList(self):
-		list = [ ]
+		list = []
 		for hd in self.hdd:
-			hdd = hd.model() + " - " + hd.bus()
+			hdd = "%s - %s" % (hd.model(), hd.bus())
 			cap = hd.capacity()
 			if cap != "":
-				hdd += " (" + cap + ")"
+				hdd += " (%s)" % cap
 			list.append((hdd, hd))
 		return list
 
 	def getCD(self):
 		return self.cd
 
-	def getMountedPartitions(self, onlyhotplug = False, mounts=None):
+	def getMountedPartitions(self, onlyhotplug=False, mounts=None):
 		if mounts is None:
 			mounts = getProcMounts()
-		parts = [x for x in self.partitions if (x.is_hotplug or not onlyhotplug) and x.mounted(mounts)]
-		devs = set([x.device for x in parts])
+		parts = [partition for partition in self.partitions if (partition.is_hotplug or not onlyhotplug) and partition.mounted(mounts)]
+		devs = set([partition.device for partition in parts])
 		for devname in devs.copy():
 			if not devname:
 				continue
 			dev, part = self.splitDeviceName(devname)
-			if part and dev in devs: # if this is a partition and we still have the wholedisk, remove wholedisk
+			if part and dev in devs:  # If this is a partition and we still have the wholedisk, remove wholedisk.
 				devs.remove(dev)
-
-		# return all devices which are not removed due to being a wholedisk when a partition exists
-		return [x for x in parts if not x.device or x.device in devs]
-
-	def splitDeviceName(self, devname):
-		if re.search(r"^mmcblk\d(?:p\d+$|$)", devname):
-			m = re.search(r"(?P<dev>mmcblk\d)p(?P<part>\d+)$", devname)
-			if m:
-				return m.group('dev'), m.group('part') and int(m.group('part')) or 0
-			else:
-				return devname, 0
-		else:
-			# this works for: sdaX, hdaX, sr0 (which is in fact dev="sr0", part=""). It doesn't work for other names like mtdblock3, but they are blacklisted anyway.
-			dev = devname[:3]
-			part = devname[3:]
-			for p in part:
-				if not p.isdigit():
-					return devname, 0
-			return dev, part and int(part) or 0
-
-	def getUserfriendlyDeviceName(self, dev, phys):
-		dev, part = self.splitDeviceName(dev)
-		description = _("External Storage %s") % dev
-		if os.path.exists('/sys' + phys + '/model'):
-			description = readFile("/sys" + phys + "/model")
-		elif os.path.exists('/sys' + phys + '/name'):
-			description = readFile("/sys" + phys + "/name")
-		else:
-			print "[Harddisk] couldn't read model: "
-
-		from Tools.HardwareInfo import HardwareInfo
-		for physdevprefix, pdescription in DEVICEDB.get(HardwareInfo().device_name,{}).items():
-			if phys.startswith(physdevprefix):
-				description = pdescription
-		# not wholedisk and not partition 1
-		if part and part != 1:
-			description += _(" (Partition %d)") % part
-		return description
+		# Return all devices which are not removed due to being a wholedisk when a partition exists.
+		return [partition for partition in parts if not partition.device or partition.device in devs]
 
 	def addMountedPartition(self, device, desc):
-		for x in self.partitions:
-			if x.mountpoint == device:
-				#already_mounted
-				return
+		for partition in self.partitions:
+			if partition.mountpoint == device:
+				return  # Already_mounted.
 		self.partitions.append(Partition(mountpoint=device, description=desc))
 
 	def removeMountedPartition(self, mountpoint):
-		for x in self.partitions[:]:
-			if x.mountpoint == mountpoint:
-				self.partitions.remove(x)
-				self.on_partition_list_change("remove", x)
-
-	def setDVDSpeed(self, device, speed = 0):
-		ioctl_flag=int(0x5322)
-		if not device.startswith('/'):
-			device = "/dev/" + device
+		for partition in self.partitions[:]:
+			if partition.mountpoint == mountpoint:
+				self.partitions.remove(partition)
+				self.on_partition_list_change("remove", partition)
+
+	def setDVDSpeed(self, device, speed=0):
+		if not device.startswith(os.sep):
+			device = os.path.join("/dev", device)
 		try:
-			from fcntl import ioctl
-			cd = open(device)
-			ioctl(cd.fileno(), ioctl_flag, speed)
-			cd.close()
-		except Exception, ex:
-			print "[Harddisk] Failed to set %s speed to %s" % (device, speed), ex
+			with open(device, "wb") as fd:
+				ioctl(fd.fileno(), int(0x5322), speed)
+		except (IOError, OSError) as err:
+			print "[Harddisk] Error: Failed to set '%s' speed to '%s':" % (device, speed), err
+
 
 class UnmountTask(Task.LoggingTask):
 	def __init__(self, job, hdd):
-		Task.LoggingTask.__init__(self, job, _("Unmount"))
+		Task.LoggingTask.__init__(self, job, _("Unmount."))
 		self.hdd = hdd
 		self.mountpoints = []
+
 	def prepare(self):
 		try:
-			dev = self.hdd.disk_path.split('/')[-1]
-			open('/dev/nomount.%s' % dev, "wb").close()
-		except Exception, e:
-			print "[UnmountTask] ERROR: Failed to create /dev/nomount file:", e
-		self.setTool('umount')
-		self.args.append('-f')
+			dev = self.hdd.disk_path.split(os.sep)[-1]
+			open("/dev/nomount.%s" % dev, "wb").close()
+		except (IOError, OSError) as err:
+			print "[Harddisk] UnmountTask - Error: Failed to create /dev/nomount file:", err
+		self.setTool("umount")
+		self.args.append("-f")
 		for dev in self.hdd.enumMountDevices():
 			self.args.append(dev)
 			self.postconditions.append(Task.ReturncodePostcondition())
 			self.mountpoints.append(dev)
 		if not self.mountpoints:
-			print "[UnmountTask] No mountpoints found?"
-			self.cmd = 'true'
+			print "[Harddisk] UnmountTask - No mountpoints found?"
+			self.cmd = "true"
 			self.args = [self.cmd]
+
 	def afterRun(self):
 		for path in self.mountpoints:
 			try:
 				os.rmdir(path)
-			except Exception, ex:
-				print "[UnmountTask] Failed to remove path '%s':" % path, ex
+			except (IOError, OSError) as err:
+				print "[Harddisk] UnmountTask - Error: Failed to remove path '%s':" % path, err
+
 
 class MountTask(Task.LoggingTask):
 	def __init__(self, job, hdd):
-		Task.LoggingTask.__init__(self, job, _("Mount"))
+		Task.LoggingTask.__init__(self, job, _("Mount."))
 		self.hdd = hdd
+
 	def prepare(self):
 		try:
-			dev = self.hdd.disk_path.split('/')[-1]
-			os.unlink('/dev/nomount.%s' % dev)
-		except Exception, e:
-			print "[MountTask] ERROR: Failed to remove /dev/nomount file:", e
-		# try mounting through fstab first
+			dev = self.hdd.disk_path.split(os.sep)[-1]
+			os.unlink("/dev/nomount.%s" % dev)
+		except (IOError, OSError) as err:
+			print "[Harddisk] MountTask - Error: Failed to remove '/dev/nomount' file:", err
 		if self.hdd.mount_device is None:
-			dev = self.hdd.partitionPath("1")
+			dev = self.hdd.partitionPath("1")  # Try mounting through fstab first.
 		else:
-			# if previously mounted, use the same spot
-			dev = self.hdd.mount_device
-		fstab = open("/etc/fstab")
-		lines = fstab.readlines()
-		fstab.close()
-		for line in lines:
-			parts = line.strip().split(" ")
-			fspath = os.path.realpath(parts[0])
-			if os.path.realpath(fspath) == dev:
-				self.setCmdline("mount -t auto " + fspath)
-				self.postconditions.append(Task.ReturncodePostcondition())
-				return
-		# device is not in fstab
-		if self.hdd.type == DEVTYPE_UDEV:
-			# we can let udev do the job, re-read the partition table
+			dev = self.hdd.mount_device  # If previously mounted, use the same spot.
+		try:
+			with open("/etc/fstab", "r") as fd:
+				for line in fd.readlines():
+					parts = line.strip().split(" ")
+					fspath = os.path.realpath(parts[0])
+					if os.path.realpath(fspath) == dev:
+						self.setCmdline("mount -t auto %s" % fspath)
+						self.postconditions.append(Task.ReturncodePostcondition())
+						return
+		except (IOError, OSError) as err:
+			print "[Harddisk] MountTask - Error: Failed to read '/etc/fstab' file:", err
+		if SystemInfo["Udev"]:  # Device is not in fstab.
+			# We can let udev do the job, re-read the partition table.
 			# Sorry for the sleep 2 hack...
-			self.setCmdline('sleep 2; hdparm -z ' + self.hdd.disk_path)
+			self.setCmdline("sleep 2; hdparm -z %s" % self.hdd.disk_path)
 			self.postconditions.append(Task.ReturncodePostcondition())
 
 
 class MkfsTask(Task.LoggingTask):
 	def prepare(self):
 		self.fsck_state = None
+
 	def processOutput(self, data):
-		print "[MkfsTask] [Mkfs]", data
-		if 'Writing inode tables:' in data:
-			self.fsck_state = 'inode'
-		elif 'Creating journal' in data:
-			self.fsck_state = 'journal'
+		print "[Harddisk] MkfsTask - [Mkfs]", data
+		if "Writing inode tables:" in data:
+			self.fsck_state = "inode"
+		elif "Creating journal" in data:
+			self.fsck_state = "journal"
 			self.setProgress(80)
-		elif 'Writing superblocks ' in data:
+		elif "Writing superblocks " in data:
 			self.setProgress(95)
-		elif self.fsck_state == 'inode':
-			if '/' in data:
+		elif self.fsck_state == "inode":
+			if "/" in data:
 				try:
-					d = data.strip(' \x08\r\n').split('/',1)
-					if '\x08' in d[1]:
-						d[1] = d[1].split('\x08',1)[0]
-					self.setProgress(80*int(d[0])/int(d[1]))
-				except Exception, e:
-					print "[MkfsTask] [Mkfs] E:", e
-				return # don't log the progess
+					d = data.strip(" \x08\r\n").split("/", 1)
+					if "\x08" in d[1]:
+						d[1] = d[1].split("\x08", 1)[0]
+					self.setProgress(80 * int(d[0]) / int(d[1]))
+				except Exception as err:
+					print "[Harddisk] MkfsTask - [Mkfs] Error:", err
+				return  # Don't log the progess.
 		self.log.append(data)
 
 
-def internalHDDNotSleeping():
-	if harddiskmanager.HDDCount():
-		for hdd in harddiskmanager.HDDList():
-			if ("pci" in hdd[1].phys_path or "ahci" in hdd[1].phys_path) and hdd[1].max_idle_time and not hdd[1].isSleeping():
-				return True
-	return False
-
 harddiskmanager = HarddiskManager()
-SystemInfo["ext4"] = isFileSystemSupported("ext4")
diff --git a/lib/python/Components/Ipkg.py b/lib/python/Components/Ipkg.py
index 5189bb8..5038ddc 100644
--- a/lib/python/Components/Ipkg.py
+++ b/lib/python/Components/Ipkg.py
@@ -1,6 +1,7 @@
 import os
 from enigma import eConsoleAppContainer
 from Components.Harddisk import harddiskmanager
+from Tools.Directories import resolveFilename, SCOPE_LIBDIR
 from boxbranding import getImageDistro
 
 opkgDestinations = []
@@ -27,7 +28,7 @@ def onPartitionChange(why, part):
 				opkgStatusPath = 'var/lib/opkg/status'
 				if not os.path.exists(os.path.join('/', opkgStatusPath)):
 					# older opkg versions
-					opkgStatusPath = 'usr/lib/opkg/status'
+					opkgStatusPath = resolveFilename(SCOPE_LIBDIR, 'opkg/status')
 			if os.path.exists(os.path.join(mountpoint, opkgStatusPath)):
 				opkgAddDestination(mountpoint)
 		elif why == 'remove':
@@ -71,13 +72,13 @@ class IpkgComponent:
 		self.currentCommand = command
 
 	def runCmdEx(self, cmd):
-		self.runCmd(opkgExtraDestinations() + ' ' + cmd)
+		self.runCmd("%s %s" % (opkgExtraDestinations(), cmd))
 
 	def runCmd(self, cmd):
 		print "[IPKG] executing", self.ipkg, cmd
 		self.cmd.appClosed.append(self.cmdFinished)
 		self.cmd.dataAvail.append(self.cmdData)
-		if self.cmd.execute(self.ipkg + " " + cmd):
+		if self.cmd.execute("%s %s" % (self.ipkg, cmd)):
 			self.cmdFinished(-1)
 
 	def startCmd(self, cmd, args = None):
@@ -90,7 +91,7 @@ class IpkgComponent:
 			append = ""
 			if args["test_only"]:
 				append = " -test"
-			self.runCmdEx("upgrade" + append)
+			self.runCmdEx("upgrade %s >/home/root/ipkgupgrade.log" % append)
 		elif cmd == self.CMD_LIST:
 			self.fetchedList = []
 			if args['installed_only']:
@@ -98,9 +99,9 @@ class IpkgComponent:
 			else:
 				self.runCmd("list")
 		elif cmd == self.CMD_INSTALL:
-			self.runCmd("install " + args['package'])
+			self.runCmd("install %s" % args['package'])
 		elif cmd == self.CMD_REMOVE:
-			self.runCmd("remove " + args['package'])
+			self.runCmd("remove %s" % args['package'])
 		elif cmd == self.CMD_UPGRADE_LIST:
 			self.fetchedList = []
 			self.runCmdEx("list-upgradable")
diff --git a/lib/python/Components/Keyboard.py b/lib/python/Components/Keyboard.py
index 2356f43..1901ec5 100644
--- a/lib/python/Components/Keyboard.py
+++ b/lib/python/Components/Keyboard.py
@@ -1,45 +1,58 @@
+from os import listdir
+
 from Components.Console import Console
-from os import listdir as os_listdir, path as os_path
-from re import compile as re_compile
-from enigma import eEnv
+# from Components.Language import language
+from Tools.Directories import SCOPE_KEYMAPS, pathExists, resolveFilename
+
 
 class Keyboard:
 	def __init__(self):
-		self.keyboardmaps = []
+		self.keyboardMaps = []
 		self.readKeyboardMapFiles()
 
 	def readKeyboardMapFiles(self):
-		for keymapfile in os_listdir(eEnv.resolve('${datadir}/keymaps/')):
-			if keymapfile.endswith(".info"):
-				f = open(eEnv.resolve('${datadir}/keymaps/') + keymapfile)
-				mapfile = None
-				mapname = None
-				for line in f:
-					m = re_compile('^\s*(\w+)\s*=\s*(.*)\s*$').match(line)
-					if m:
-						key, val = m.groups()
-						if key == 'kmap':
-							mapfile = val
-						if key == 'name':
-							mapname = val
-						if (mapfile is not None) and (mapname is not None):
-							self.keyboardmaps.append(( mapfile,mapname))
-				f.close()
+		for keymapFile in listdir(resolveFilename(SCOPE_KEYMAPS)):
+			if keymapFile.endswith(".info"):
+				mapFile = None
+				mapName = None
+				try:
+					with open(resolveFilename(SCOPE_KEYMAPS, keymapFile), "r") as fd:
+						for line in fd.readlines():
+							key, val = [x.strip() for x in line.split("=", 1)]
+							if key == "kmap":
+								mapFile = val
+							if key == "name":
+								mapName = val
+				except (IOError, OSError) as err:
+					print "[Keyboard] Error %d: Opening keymap file '%s'! (%s)" % (err.errno, filename, err.strerror)
+				if mapFile is not None and mapName is not None:
+					print "[Keyboard] Adding keymap '%s' ('%s')." % (mapName, mapFile)
+					self.keyboardMaps.append((mapFile, mapName))
 
 	def activateKeyboardMap(self, index):
 		try:
-			keymap = self.keyboardmaps[index]
-			print "[Keyboard] Activating keymap:",keymap[1]
-			keymappath = eEnv.resolve('${datadir}/keymaps/') + keymap[0]
-			if os_path.exists(keymappath):
-				Console().ePopen(("loadkmap < " + str(keymappath)))
-		except:
-			print "[Keyboard] Selected keymap does not exist!"
+			keymap = self.keyboardMaps[index]
+			print "[Keyboard] Activating keymap: '%s'." % keymap[1]
+			keymapPath = resolveFilename(SCOPE_KEYMAPS, keymap[0])
+			if pathExists(keymapPath):
+				Console().ePopen("loadkmap < %s" % keymapPath)
+		except IndexError:
+			print "[Keyboard] Error: Selected keymap does not exist!"
 
 	def getKeyboardMaplist(self):
-		return self.keyboardmaps
+		return self.keyboardMaps
 
 	def getDefaultKeyboardMap(self):
-		return 'default.kmap'
+		# This is a code proposal to make the default keymap respond
+		# to the currently defined locale.  OpenATV initialises the
+		# keymap based on hardware manufacturer.  Making the
+		# selection based on language locale makes more sense.  There
+		# are other code changes coming that will allow this to happen.
+		#
+		# locale = language.getLocale()
+		# if locale.startswith("de_") and "de.kmap" in self.keyboardMaps:
+		# 	return "de.kmap"
+		return "default.kmap"
+
 
 keyboard = Keyboard()
diff --git a/lib/python/Components/Language.py b/lib/python/Components/Language.py
index 8547c27..4f4ac7f 100644
--- a/lib/python/Components/Language.py
+++ b/lib/python/Components/Language.py
@@ -35,7 +35,7 @@ class Language:
 		self.addLanguage("Dansk", "da", "DK", "ISO-8859-15")
 		self.addLanguage("Deutsch", "de", "DE", "ISO-8859-15")
 		self.addLanguage("Ελληνικά", "el", "GR", "ISO-8859-7")
-		self.addLanguage("English (AU)", "en", "AU", "ISO-8859-1")
+		self.addLanguage("English (AU)", "en", "AU", "ISO-8859-15")
 		self.addLanguage("English (UK)", "en", "GB", "ISO-8859-15")
 		self.addLanguage("English (US)", "en", "US", "ISO-8859-15")
 		self.addLanguage("Español", "es", "ES", "ISO-8859-15")
@@ -110,7 +110,7 @@ class Language:
 		try:
 			os.stat('/home/root/.config')
 		except:
-			os.mkdir('/home/root/.config') 
+			os.mkdir('/home/root/.config')
 
 		localeconf = open('/home/root/.config/locale.conf', 'w')
 		for category in ["LC_TIME", "LC_DATE", "LC_MONETARY", "LC_MESSAGES", "LC_NUMERIC", "LC_NAME", "LC_TELEPHONE", "LC_ADDRESS", "LC_PAPER", "LC_IDENTIFICATION", "LC_MEASUREMENT", "LANG" ]:
@@ -207,7 +207,7 @@ class Language:
 					elif x == "pt":
 						if x != lang:
 							os.system("opkg remove --autoremove --force-depends " + Lpackagename + x)
-			
+
 		os.system("touch /etc/enigma2/.removelang")
 
 		self.InitLang()
diff --git a/lib/python/Components/MultiContent.py b/lib/python/Components/MultiContent.py
index 6548692..9d65fb0 100644
--- a/lib/python/Components/MultiContent.py
+++ b/lib/python/Components/MultiContent.py
@@ -1,42 +1,44 @@
-from enigma import eListboxPythonMultiContent, RT_HALIGN_LEFT, RT_VALIGN_TOP
+from enigma import RT_HALIGN_LEFT, RT_VALIGN_TOP, eListboxPythonMultiContent
+
 from skin import parseColor
+from Tools.Directories import SCOPE_CURRENT_SKIN, resolveFilename
 from Tools.LoadPixmap import LoadPixmap
-from Tools.Directories import resolveFilename, SCOPE_ACTIVE_SKIN
 
 def __resolveColor(color):
 	if isinstance(color, str):
 		try:
 			return parseColor(color).argb()
-		except Exception, e:
-			print "[MultiContent]", e
+		except Exception as err:
+			print "[MultiContent] Error: Resolve color '%s'" % str(err)
 		return None
 	return color
 
 def __resolvePixmap(pixmap):
 	if isinstance(pixmap, str):
 		try:
-			return LoadPixmap(resolveFilename(SCOPE_ACTIVE_SKIN, pixmap))
-		except Exception, e:
-			print "[MultiContent]", e
+			return LoadPixmap(resolveFilename(SCOPE_CURRENT_SKIN, pixmap))
+		except Exception as err:
+			print "[MultiContent] Error: Resolve pixmap '%s'" % str(err)
 		return None
 	return pixmap
 
-def MultiContentTemplateColor(n): return 0xff000000 | n
+def MultiContentTemplateColor(n):
+	return 0xff000000 | n
 
-def MultiContentEntryText(pos = (0, 0), size = (0, 0), font = 0, flags = RT_HALIGN_LEFT | RT_VALIGN_TOP, text = "", color = None, color_sel = None, backcolor = None, backcolor_sel = None, border_width = None, border_color = None):
+def MultiContentEntryText(pos=(0, 0), size=(0, 0), font=0, flags=RT_HALIGN_LEFT | RT_VALIGN_TOP, text="", color=None, color_sel=None, backcolor=None, backcolor_sel=None, border_width=None, border_color=None):
 	return eListboxPythonMultiContent.TYPE_TEXT, pos[0], pos[1], size[0], size[1], font, flags, text, __resolveColor(color), __resolveColor(color_sel), __resolveColor(backcolor), __resolveColor(backcolor_sel), border_width, __resolveColor(border_color)
 
-def MultiContentEntryPixmap(pos = (0, 0), size = (0, 0), png = None, backcolor = None, backcolor_sel = None, flags = 0):
+def MultiContentEntryPixmap(pos=(0, 0), size=(0, 0), png=None, backcolor=None, backcolor_sel=None, flags=0):
 	return eListboxPythonMultiContent.TYPE_PIXMAP, pos[0], pos[1], size[0], size[1], __resolvePixmap(png), __resolveColor(backcolor), __resolveColor(backcolor_sel), flags
 
-def MultiContentEntryPixmapAlphaTest(pos = (0, 0), size = (0, 0), png = None, backcolor = None, backcolor_sel = None, flags = 0):
+def MultiContentEntryPixmapAlphaTest(pos=(0, 0), size=(0, 0), png=None, backcolor=None, backcolor_sel=None, flags=0):
 	return eListboxPythonMultiContent.TYPE_PIXMAP_ALPHATEST, pos[0], pos[1], size[0], size[1], __resolvePixmap(png), __resolveColor(backcolor), __resolveColor(backcolor_sel), flags
 
-def MultiContentEntryPixmapAlphaBlend(pos = (0, 0), size = (0, 0), png = None, backcolor = None, backcolor_sel = None, flags = 0):
+def MultiContentEntryPixmapAlphaBlend(pos=(0, 0), size=(0, 0), png=None, backcolor=None, backcolor_sel=None, flags=0):
 	return eListboxPythonMultiContent.TYPE_PIXMAP_ALPHABLEND, pos[0], pos[1], size[0], size[1], __resolvePixmap(png), __resolveColor(backcolor), __resolveColor(backcolor_sel), flags
 
-def MultiContentEntryProgress(pos = (0, 0), size = (0, 0), percent = None, borderWidth = None, foreColor = None, foreColorSelected = None, backColor = None, backColorSelected = None):
-	return eListboxPythonMultiContent.TYPE_PROGRESS, pos[0], pos[1], size[0], size[1], percent, borderWidth,  __resolveColor(foreColor),  __resolveColor(foreColorSelected),  __resolveColor(backColor),  __resolveColor(backColorSelected)
+def MultiContentEntryProgress(pos=(0, 0), size=(0, 0), percent=None, borderWidth=None, foreColor=None, foreColorSelected=None, backColor=None, backColorSelected=None):
+	return eListboxPythonMultiContent.TYPE_PROGRESS, pos[0], pos[1], size[0], size[1], percent, borderWidth, __resolveColor(foreColor), __resolveColor(foreColorSelected), __resolveColor(backColor), __resolveColor(backColorSelected)
 
-def MultiContentEntryProgressPixmap(pos = (0, 0), size = (0, 0), percent = None, pixmap = None, borderWidth = None, foreColor = None, foreColorSelected = None, backColor = None, backColorSelected = None):
-	return eListboxPythonMultiContent.TYPE_PROGRESS_PIXMAP, pos[0], pos[1], size[0], size[1], percent, __resolvePixmap(pixmap), borderWidth,  __resolveColor(foreColor),  __resolveColor(foreColorSelected),  __resolveColor(backColor),  __resolveColor(backColorSelected)
+def MultiContentEntryProgressPixmap(pos=(0, 0), size=(0, 0), percent=None, pixmap=None, borderWidth=None, foreColor=None, foreColorSelected=None, backColor=None, backColorSelected=None):
+	return eListboxPythonMultiContent.TYPE_PROGRESS_PIXMAP, pos[0], pos[1], size[0], size[1], percent, __resolvePixmap(pixmap), borderWidth, __resolveColor(foreColor), __resolveColor(foreColorSelected), __resolveColor(backColor), __resolveColor(backColorSelected)
diff --git a/lib/python/Components/NimManager.py b/lib/python/Components/NimManager.py
index bb6a4df..3f5cd47 100644
--- a/lib/python/Components/NimManager.py
+++ b/lib/python/Components/NimManager.py
@@ -1,5 +1,6 @@
 import os
 
+from SystemInfo import SystemInfo
 from Tools.HardwareInfo import HardwareInfo
 from Tools.BoundFunction import boundFunction
 
@@ -129,6 +130,7 @@ class SecConfigure:
 	def update(self):
 		sec = secClass.getInstance()
 		self.configuredSatellites = set()
+		self.maxLnbNum = sec.getMaxLnbNum()
 		for slotid in self.NimManager.getNimListOfType("DVB-S"):
 			if self.NimManager.nimInternallyConnectableTo(slotid) is not None:
 				self.NimManager.nimRemoveInternalLink(slotid)
@@ -300,7 +302,7 @@ class SecConfigure:
 				currLnb = config.Nims[slotid].advanced.lnb[x]
 				sec.addLNB()
 
-				if x < 65:
+				if x <= self.maxLnbNum:
 					sec.setLNBNum(x)
 
 				tunermask = 1 << slotid
@@ -325,6 +327,7 @@ class SecConfigure:
 					sec.setLNBSatCRvco(currLnb.scrfrequency.value * 1000)
 					sec.setLNBSatCRPositionNumber(int(currLnb.positionNumber.value) + int(currLnb.positionsOffset.value))
 					sec.setLNBSatCRformat(currLnb.format.value == "jess" and 2 or 1)
+					sec.setLNBBootupTime(currLnb.bootuptime.value)
 				elif currLnb.lof.value == "c_band":
 					sec.setLNBLOFL(5150000)
 					sec.setLNBLOFH(5150000)
@@ -1255,6 +1258,8 @@ def InitNimManager(nimmgr, update_slots = []):
 			lnbs = nim.advanced.lnb
 			section = lnbs[lnb]
 			if isinstance(section.unicable, ConfigNothing):
+				def setPowerInserter(configEntry):
+					section.bootuptime.value = 0 if configEntry.value else section.bootuptime.default
 				def getformat(value, index):
 					return ("jess" if index >= int(value.split(",")[1] if "," in value else 4) else "unicable") if value.startswith("dSCR") else value
 				def positionsChanged(configEntry):
@@ -1272,6 +1277,11 @@ def InitNimManager(nimmgr, update_slots = []):
 					config.unicable.unicableProduct.value = configEntry.value
 					config.unicable.unicableProduct.save()
 					productparameters = [p for p in [m.getchildren() for m in unicable_xml.find(lnb_or_matrix) if m.get("name") == manufacturer][0] if p.get("name") == configEntry.value][0]
+					section.bootuptime = ConfigInteger(default=int(productparameters.get("bootuptime", 1000)), limits = (0, 9999))
+					section.bootuptime.save_forced = True
+					section.powerinserter = ConfigYesNo(default=SystemInfo["LnbPowerAlwaysOn"])
+					section.powerinserter.save_forced = True
+					section.powerinserter.addNotifier(setPowerInserter)
 					srcfrequencylist = productparameters.get("scrs").split(",")
 					section.scrList = ConfigSelection([("%d" % (x + 1), "User Band %d (%s)" % ((x + 1), srcfrequencylist[x])) for x in range(len(srcfrequencylist))])
 					section.scrList.save_forced = True
@@ -1300,6 +1310,11 @@ def InitNimManager(nimmgr, update_slots = []):
 					srcfrequencyList = configEntry.value=="jess" and (1210, 1420, 1680, 2040, 984, 1020, 1056, 1092, 1128, 1164, 1256, 1292, 1328, 1364, 1458, 1494, 1530, 1566, 1602,\
 						1638, 1716, 1752, 1788, 1824, 1860, 1896, 1932, 1968, 2004, 2076, 2112, 2148) or (1284, 1400, 1516, 1632, 1748, 1864, 1980, 2096)
 					section.scrList.addNotifier(boundFunction(userScrListChanged, srcfrequencyList))
+					section.bootuptime = ConfigInteger(default=1000, limits = (0, 9999))
+					section.bootuptime.save_forced = True
+					section.powerinserter = ConfigYesNo(default=SystemInfo["LnbPowerAlwaysOn"])
+					section.powerinserter.save_forced = True
+					section.powerinserter.addNotifier(setPowerInserter)
 				def unicableChanged(configEntry):
 					config.unicable.unicable.value = configEntry.value
 					config.unicable.unicable.save()
diff --git a/lib/python/Components/Renderer/Label.py b/lib/python/Components/Renderer/Label.py
index 337524a..9f18185 100644
--- a/lib/python/Components/Renderer/Label.py
+++ b/lib/python/Components/Renderer/Label.py
@@ -21,7 +21,8 @@ class Label(VariableText, Renderer):
 		if what[0] == self.CHANGED_CLEAR:
 			self.text = ""
 		elif self.source:
-			self.text = self.source.text
+			if hasattr(self.source, "text"):
+				self.text = self.source.text
 		else:
 			self.text = "<No Source>"
 			print "SKINERROR: render label has no source"
diff --git a/lib/python/Components/Renderer/LcdPicon.py b/lib/python/Components/Renderer/LcdPicon.py
index 783580c..8fbbaac 100644
--- a/lib/python/Components/Renderer/LcdPicon.py
+++ b/lib/python/Components/Renderer/LcdPicon.py
@@ -4,115 +4,20 @@ from enigma import ePixmap, ePicLoad
 from Tools.Alternatives import GetWithAlternative
 from Tools.Directories import pathExists, SCOPE_ACTIVE_SKIN, resolveFilename
 from Components.Harddisk import harddiskmanager
-from boxbranding import getBoxType
+from boxbranding import getDisplayType
 from ServiceReference import ServiceReference
 from Components.config import config
+from Picon import PiconLocator
 
-searchPaths = []
-lastLcdPiconPath = None
+def useLcdPicons():
+	return getDisplayType() in ('bwlcd255', 'bwlcd140', 'bwlcd128') or config.lcd.picon_pack.value
 
-bw_lcd = ('xpeedlx3','vuultimo')
+lcdPiconLocator = None
 
-def initLcdPiconPaths():
-	global searchPaths
-	searchPaths = []
-	for mp in ('/usr/share/enigma2/', '/'):
-		onMountpointAdded(mp)
-	for part in harddiskmanager.getMountedPartitions():
-		onMountpointAdded(part.mountpoint)
-
-def onMountpointAdded(mountpoint):
-	global searchPaths
-	try:
-		if getBoxType() in bw_lcd or config.lcd.picon_pack.value:
-			path = os.path.join(mountpoint, 'piconlcd') + '/'
-		else:
-			path = os.path.join(mountpoint, 'picon') + '/'
-		if os.path.isdir(path) and path not in searchPaths:
-			for fn in os.listdir(path):
-				if fn.endswith('.png'):
-					print "[LcdPicon] adding path:", path
-					searchPaths.append(path)
-					break
-	except Exception, ex:
-		print "[LcdPicon] Failed to investigate %s:" % mountpoint, ex
-
-def onMountpointRemoved(mountpoint):
-	global searchPaths
-	if getBoxType() in bw_lcd or config.lcd.picon_pack.value:
-		path = os.path.join(mountpoint, 'piconlcd') + '/'
-	else:
-		path = os.path.join(mountpoint, 'picon') + '/'
-	try:
-		searchPaths.remove(path)
-		print "[LcdPicon] removed path:", path
-	except:
-		pass
-
-def onPartitionChange(why, part):
-	if why == 'add':
-		onMountpointAdded(part.mountpoint)
-	elif why == 'remove':
-		onMountpointRemoved(part.mountpoint)
-
-def findLcdPicon(serviceName):
-	global lastLcdPiconPath
-	if lastLcdPiconPath is not None:
-		pngname = lastLcdPiconPath + serviceName + ".png"
-		if pathExists(pngname):
-			return pngname
-		else:
-			return ""
-	else:
-		global searchPaths
-		pngname = ""
-		for path in searchPaths:
-			if pathExists(path) and not path.startswith('/media/net') and not path.startswith('/media/autofs'):
-				pngname = path + serviceName + ".png"
-				if pathExists(pngname):
-					lastLcdPiconPath = path
-					break
-			elif pathExists(path):
-				pngname = path + serviceName + ".png"
-				if pathExists(pngname):
-					lastLcdPiconPath = path
-					break
-		if pathExists(pngname):
-			return pngname
-		else:
-			return ""
-
-def getLcdPiconName(serviceName):
-	#remove the path and name fields, and replace ':' by '_'
-	fields = GetWithAlternative(serviceName).split(':', 10)[:10]
-	if not fields or len(fields) < 10:
-		return ""
-	pngname = findLcdPicon('_'.join(fields))
-	if not pngname and not fields[6].endswith("0000"):
-		#remove "sub-network" from namespace
-		fields[6] = fields[6][:-4] + "0000"
-		pngname = findLcdPicon('_'.join(fields))
-	if not pngname and fields[0] != '1':
-		#fallback to 1 for IPTV streams
-		fields[0] = '1'
-		pngname = findLcdPicon('_'.join(fields))
-	if not pngname and fields[2] != '2':
-		#fallback to 1 for TV services with non-standard service types
-		fields[2] = '1'
-		pngname = findLcdPicon('_'.join(fields))
-	if not pngname and fields[9] != '0':
-		#fallback to 0 for iptv buffering
-		fields[9] = '0'
-		pngname = findLcdPicon('_'.join(fields))
-	if not pngname: # picon by channel name
-		name = ServiceReference(serviceName).getServiceName()
-		name = unicodedata.normalize('NFKD', unicode(name, 'utf_8', errors='ignore')).encode('ASCII', 'ignore')
-		name = re.sub('[^a-z0-9]', '', name.replace('&', 'and').replace('+', 'plus').replace('*', 'star').lower())
-		if len(name) > 0:
-			pngname = findLcdPicon(name)
-			if not pngname and len(name) > 2 and name.endswith('hd'):
-				pngname = findLcdPicon(name[:-2])
-	return pngname
+def initPiconPaths(_ = None):
+	global lcdPiconLocator
+	lcdPiconLocator = PiconLocator(['lcd_picon', 'piconlcd']) if useLcdPicons() else PiconLocator()
+config.lcd.picon_pack.addNotifier(initPiconPaths)
 
 class LcdPicon(Renderer):
 	def __init__(self):
@@ -120,52 +25,37 @@ class LcdPicon(Renderer):
 		self.PicLoad = ePicLoad()
 		self.PicLoad.PictureData.get().append(self.updatePicon)
 		self.piconsize = (0,0)
-		self.pngname = ""
-		self.lastPath = None
-		if getBoxType() in bw_lcd or config.lcd.picon_pack.value:
-			pngname = findLcdPicon("lcd_picon_default")
-		else:
-			pngname = findLcdPicon("picon_default")
-		self.defaultpngname = None
+		config.lcd.picon_pack.addNotifier(self.configChanged)
+
+	def configChanged(self, _):
+		self.pngname = None
+		serviceName = "lcd_picon_default" if useLcdPicons() else "picon_default"
+		pngname = lcdPiconLocator.findPicon(serviceName)
 		if not pngname:
-			if getBoxType() in bw_lcd or config.lcd.picon_pack.value:
-				tmp = resolveFilename(SCOPE_ACTIVE_SKIN, "lcd_picon_default.png")
-			else:
-				tmp = resolveFilename(SCOPE_ACTIVE_SKIN, "picon_default.png")
-			if pathExists(tmp):
-				pngname = tmp
-			else:
-				if getBoxType() in bw_lcd or config.lcd.picon_pack.value:
-					pngname = resolveFilename(SCOPE_ACTIVE_SKIN, "lcd_picon_default.png")
-				else:
-					pngname = resolveFilename(SCOPE_ACTIVE_SKIN, "picon_default.png")
-		if os.path.getsize(pngname):
-			self.defaultpngname = pngname
+			pngname = resolveFilename(SCOPE_ACTIVE_SKIN, serviceName + ".png")
+		self.defaultpngname = pngname if os.path.getsize(pngname) else None
+		self.changed((self.CHANGED_DEFAULT,))
 
-	def addPath(self, value):
-		if pathExists(value):
-			global searchPaths
-			if not value.endswith('/'):
-				value += '/'
-			if value not in searchPaths:
-				searchPaths.append(value)
+	def destroy(self):
+		# remove the notifier before properties get destroyed
+		config.lcd.picon_pack.removeNotifier(self.configChanged)
+		Renderer.destroy(self)
 
 	def applySkin(self, desktop, parent):
 		attribs = self.skinAttributes[:]
 		for (attrib, value) in self.skinAttributes:
 			if attrib == "path":
-				self.addPath(value)
+				lcdPiconLocator.addSearchPath(value)
 				attribs.remove((attrib,value))
 			elif attrib == "size":
 				self.piconsize = value
 		self.skinAttributes = attribs
-		return Renderer.applySkin(self, desktop, parent)
+		rc = Renderer.applySkin(self, desktop, parent)
+		self.changed((self.CHANGED_DEFAULT,))
+		return rc
 
 	GUI_WIDGET = ePixmap
 
-	def postWidgetCreate(self, instance):
-		self.changed((self.CHANGED_DEFAULT,))
-
 	def updatePicon(self, picInfo=None):
 		ptr = self.PicLoad.getData()
 		if ptr is not None:
@@ -174,18 +64,23 @@ class LcdPicon(Renderer):
 
 	def changed(self, what):
 		if self.instance:
-			pngname = ""
-			if what[0] == 1 or what[0] == 3:
-				pngname = getLcdPiconName(self.source.text)
+			if what[0] in (self.CHANGED_DEFAULT, self.CHANGED_ALL, self.CHANGED_SPECIFIC):
+				pngname = lcdPiconLocator.getPiconName(self.source.text)
 				if not pathExists(pngname): # no picon for service found
 					pngname = self.defaultpngname
 				if self.pngname != pngname:
 					if pngname:
 						self.PicLoad.setPara((self.piconsize[0], self.piconsize[1], 0, 0, 1, 1, "#FF000000"))
-						self.PicLoad.startDecode(pngname)
+						if self.PicLoad.startDecode(pngname):
+							# if this has failed, then another decode is probably already in progress
+							# throw away the old picload and try again immediately
+							self.PicLoad = ePicLoad()
+							self.PicLoad.PictureData.get().append(self.updatePicon)
+							self.PicLoad.setPara((self.piconsize[0], self.piconsize[1], 0, 0, 1, 1, "#FF000000"))
+							self.PicLoad.startDecode(pngname)
 					else:
 						self.instance.hide()
 					self.pngname = pngname
-
-harddiskmanager.on_partition_list_change.append(onPartitionChange)
-initLcdPiconPaths()
+			elif what[0] == self.CHANGED_CLEAR:
+				self.pngname = None
+				self.instance.hide()
diff --git a/lib/python/Components/Renderer/NextEpgInfo.py b/lib/python/Components/Renderer/NextEpgInfo.py
index 38f5049..2f5c124 100644
--- a/lib/python/Components/Renderer/NextEpgInfo.py
+++ b/lib/python/Components/Renderer/NextEpgInfo.py
@@ -2,7 +2,9 @@ from Components.config import config
 from Components.VariableText import VariableText
 from Renderer import Renderer
 from enigma import eLabel, eEPGCache, eServiceReference
-from time import localtime, strftime
+from time import time, localtime, strftime
+from skin import parseColor
+from Tools.Hex2strColor import Hex2strColor
 
 class NextEpgInfo(Renderer, VariableText):
 	def __init__(self):
@@ -10,6 +12,12 @@ class NextEpgInfo(Renderer, VariableText):
 		VariableText.__init__(self)
 		self.epgcache = eEPGCache.getInstance()
 		self.numberOfItems = 1
+		self.hideLabel = 0
+		self.timecolor = ""
+		self.labelcolor = ""
+		self.foregroundColor = "\c00?0?0?0"
+		self.numOfSpaces = 1
+
 	GUI_WIDGET = eLabel
 
 	def changed(self, what):
@@ -18,22 +26,48 @@ class NextEpgInfo(Renderer, VariableText):
 		info = reference and self.source.info
 		if info:
 			currentEvent = self.source.getCurrentEvent()
-			if currentEvent:
-				if not self.epgcache.startTimeQuery(eServiceReference(reference.toString()), currentEvent.getBeginTime() + currentEvent.getDuration()):
-					if self.numberOfItems == 1:
+			if not self.epgcache.startTimeQuery(eServiceReference(reference.toString()), currentEvent.getBeginTime() + currentEvent.getDuration() if currentEvent else int(time())):
+				spaces = " " * self.numOfSpaces
+				if self.numberOfItems == 1:
+					event = self.epgcache.getNextTimeEntry()
+					if event:
+						if self.hideLabel:
+							self.text = "%s%s%s%s%s" % (self.timecolor, strftime(config.usage.time.short.value, localtime(event.getBeginTime())), spaces, self.foregroundColor, event.getEventName())
+						else:
+							self.text = "%s%s:%s%s%s" % (self.labelcolor, pgettext("now/next: 'next' event label", "Next"), spaces, self.foregroundColor, event.getEventName())
+				else:
+					for x in range(self.numberOfItems):
 						event = self.epgcache.getNextTimeEntry()
 						if event:
-							self.text = "%s: %s" % (pgettext("now/next: 'next' event label", "Next"), event.getEventName())
-					else:
-						for x in range(self.numberOfItems):
-							event = self.epgcache.getNextTimeEntry()
-							if event:
-								self.text = "%s\n%s %s" % (self.text, strftime(config.usage.time.short.value, localtime(event.getBeginTime())), event.getEventName())
-						self.text = self.text and "%s%s" % (pgettext("now/next: 'next' event label", "Next"), self.text) or ""
+							self.text += "%s%s%s%s%s\n" % (self.timecolor, strftime(config.usage.time.short.value, localtime(event.getBeginTime())), spaces, self.foregroundColor, event.getEventName())
+					if not self.hideLabel:
+						self.text = self.text and "%s%s\n%s" % (self.labelcolor, pgettext("now/next: 'next' event label", "Next"), self.text) or ""
 
 	def applySkin(self, desktop, parent):
+		attribs = []
 		for (attrib, value) in self.skinAttributes:
 			if attrib == "NumberOfItems":
 				self.numberOfItems = int(value)
-				self.skinAttributes.remove((attrib, value))
+				attribs.append((attrib, value))
+			if attrib == "noLabel":
+				self.hideLabel = int(value)
+				attribs.append((attrib, value))
+			if attrib == "numOfSpaces":
+				self.numOfSpaces = int(value)
+				attribs.append((attrib, value))
+			if attrib == "timeColor":
+				self.timecolor = Hex2strColor(parseColor(value).argb())
+				attribs.append((attrib, value))
+			if attrib == "labelColor":
+				self.labelcolor = Hex2strColor(parseColor(value).argb())
+				attribs.append((attrib, value))
+			if attrib == "foregroundColor":
+				self.foregroundColor = Hex2strColor(parseColor(value).argb())
+				attribs.append((attrib, value))
+		for (attrib, value) in attribs:
+			self.skinAttributes.remove((attrib, value))
+		if self.timecolor == "": # fallback to foregroundColor
+			self.timecolor = self.foregroundColor
+		if self.labelcolor == "": # fallback to foregroundColor
+			self.labelcolor = self.foregroundColor
 		return Renderer.applySkin(self, desktop, parent)
diff --git a/lib/python/Components/Renderer/Picon.py b/lib/python/Components/Renderer/Picon.py
index 004d4a4..fe7e580 100644
--- a/lib/python/Components/Renderer/Picon.py
+++ b/lib/python/Components/Renderer/Picon.py
@@ -6,153 +6,134 @@ from Tools.Directories import pathExists, SCOPE_ACTIVE_SKIN, resolveFilename
 from Components.Harddisk import harddiskmanager
 from ServiceReference import ServiceReference
 
-searchPaths = []
-lastPiconPath = None
+class PiconLocator:
+	def __init__(self, piconDirectories = ['picon']):
+		harddiskmanager.on_partition_list_change.append(self.__onPartitionChange)
+		self.piconDirectories = piconDirectories
+		self.activePiconPath = None
+		self.searchPaths = []
+		for mp in ('/usr/share/enigma2/', '/'):
+			self.__onMountpointAdded(mp)
+		for part in harddiskmanager.getMountedPartitions():
+			self.__onMountpointAdded(part.mountpoint)
 
-def initPiconPaths():
-	global searchPaths
-	searchPaths = []
-	for mp in ('/usr/share/enigma2/', '/'):
-		onMountpointAdded(mp)
-	for part in harddiskmanager.getMountedPartitions():
-		onMountpointAdded(part.mountpoint)
-
-def onMountpointAdded(mountpoint):
-	global searchPaths
-	try:
-		path = os.path.join(mountpoint, 'picon') + '/'
-		if os.path.isdir(path) and path not in searchPaths:
-			for fn in os.listdir(path):
-				if fn.endswith('.png'):
-					print "[Picon] adding path:", path
-					searchPaths.append(path)
-					break
-	except Exception, ex:
-		print "[Picon] Failed to investigate %s:" % mountpoint, ex
+	def __onMountpointAdded(self, mountpoint):
+		for piconDirectory in self.piconDirectories:
+			try:
+				path = os.path.join(mountpoint, piconDirectory) + '/'
+				if os.path.isdir(path) and path not in self.searchPaths:
+					for fn in os.listdir(path):
+						if fn.endswith('.png'):
+							print "[PiconLocator] adding path:", path
+							self.searchPaths.append(path)
+							break
+			except:
+				pass
 
-def onMountpointRemoved(mountpoint):
-	global searchPaths
-	path = os.path.join(mountpoint, 'picon') + '/'
-	try:
-		searchPaths.remove(path)
-		print "[Picon] removed path:", path
-	except:
-		pass
+	def __onMountpointRemoved(self, mountpoint):
+		for piconDirectory in self.piconDirectories:
+			path = os.path.join(mountpoint, piconDirectory) + '/'
+			print "[Picon] DEBUG: Remove mountpoint =%s" % (path)
+			try:
+				self.searchPaths.remove(path)
+				print "[PiconLocator] removed path:", path
+			except:
+				pass
 
-def onPartitionChange(why, part):
-	if why == 'add':
-		onMountpointAdded(part.mountpoint)
-	elif why == 'remove':
-		onMountpointRemoved(part.mountpoint)
+	def __onPartitionChange(self, why, part):
+		if why == 'add':
+			self.__onMountpointAdded(part.mountpoint)
+		elif why == 'remove':
+			self.__onMountpointRemoved(part.mountpoint)
 
-def findPicon(serviceName):
-	global lastPiconPath
-	if lastPiconPath is not None:
-		pngname = lastPiconPath + serviceName + ".png"
-		if pathExists(pngname):
-			return pngname
+	def findPicon(self, serviceName):
+		if self.activePiconPath is not None:
+			pngname = self.activePiconPath + serviceName + ".png"
+			if pathExists(pngname):
+				return pngname
 		else:
-			return ""
-	else:
-		global searchPaths
-		pngname = ""
-		for path in searchPaths:
-			if pathExists(path) and not path.startswith('/media/net') and not path.startswith('/media/autofs'):
+			for path in self.searchPaths:
 				pngname = path + serviceName + ".png"
 				if pathExists(pngname):
-					lastPiconPath = path
-					break
-			elif pathExists(path):
-				pngname = path + serviceName + ".png"
-				if pathExists(pngname):
-					lastPiconPath = path
-					break
-		if pathExists(pngname):
-			return pngname
-		else:
+					self.activePiconPath = path
+					return pngname
+		return ""
+
+	def addSearchPath(self, value):
+		if pathExists(value):
+			if not value.endswith('/'):
+				value += '/'
+			if not value.startswith('/media/net') and not value.startswith('/media/autofs') and	value not in self.searchPaths:
+				self.searchPaths.append(value)
+
+	def getPiconName(self, serviceName):
+		#remove the path and name fields, and replace ':' by '_'
+		fields = GetWithAlternative(serviceName).split(':', 10)[:10]
+		if not fields or len(fields) < 10:
 			return ""
+		pngname = self.findPicon('_'.join(fields))
+		if not pngname and not fields[6].endswith("0000"):
+			#remove "sub-network" from namespace
+			fields[6] = fields[6][:-4] + "0000"
+			pngname = self.findPicon('_'.join(fields))
+		if not pngname and fields[0] != '1':
+			#fallback to 1 for IPTV streams
+			fields[0] = '1'
+			pngname = self.findPicon('_'.join(fields))
+		if not pngname and fields[2] != '2':
+			#fallback to 1 for TV services with non-standard service types
+			fields[2] = '1'
+			pngname = self.findPicon('_'.join(fields))
+		if not pngname and fields[9] != '0':
+			#fallback to 0 for iptv buffering
+			fields[9] = '0'
+			pngname = self.findPicon('_'.join(fields))
+		if not pngname: # picon by channel name
+			name = ServiceReference(serviceName).getServiceName()
+			name = unicodedata.normalize('NFKD', unicode(name, 'utf_8', errors='ignore')).encode('ASCII', 'ignore')
+			name = re.sub('[^a-z0-9]', '', name.replace('&', 'and').replace('+', 'plus').replace('*', 'star').lower())
+			if len(name) > 0:
+				pngname = self.findPicon(name)
+				if not pngname and len(name) > 2 and name.endswith('hd'):
+					pngname = self.findPicon(name[:-2])
+				if not pngname and len(name) > 6:
+					series = re.sub(r's[0-9]*e[0-9]*$', '', name)
+					pngname = self.findPicon(series)
+		return pngname
+
+piconLocator = None
+
+def initPiconPaths():
+	global piconLocator
+	piconLocator = PiconLocator()
+initPiconPaths()
 
 def getPiconName(serviceName):
-	#remove the path and name fields, and replace ':' by '_'
-	fields = GetWithAlternative(serviceName).split(':', 10)[:10]
-	if not fields or len(fields) < 10:
-		return ""
-	pngname = findPicon('_'.join(fields))
-	if not pngname and not fields[6].endswith("0000"):
-		#remove "sub-network" from namespace
-		fields[6] = fields[6][:-4] + "0000"
-		pngname = findPicon('_'.join(fields))
-	if not pngname and fields[0] != '1':
-		#fallback to 1 for IPTV streams
-		fields[0] = '1'
-		pngname = findPicon('_'.join(fields))
-	if not pngname and fields[2] != '2':
-		#fallback to 1 for TV services with non-standard service types
-		fields[2] = '1'
-		pngname = findPicon('_'.join(fields))
-	if not pngname and fields[9] != '0':
-		#fallback to 0 for iptv buffering
-		fields[9] = '0'
-		pngname = findPicon('_'.join(fields))
-	if not pngname: # picon by channel name
-		name = ServiceReference(serviceName).getServiceName()
-		name = unicodedata.normalize('NFKD', unicode(name, 'utf_8', errors='ignore')).encode('ASCII', 'ignore')
-		name = re.sub('[^a-z0-9]', '', name.replace('&', 'and').replace('+', 'plus').replace('*', 'star').lower())
-		if len(name) > 0:
-			pngname = findPicon(name)
-			if not pngname and len(name) > 2 and name.endswith('hd'):
-				pngname = findPicon(name[:-2])
-			if not pngname and len(name) > 6:
-				series = re.sub(r's[0-9]*e[0-9]*$', '', name)
-				pngname = findPicon(series)
-	return pngname
+	return piconLocator.getPiconName(serviceName)
 
 class Picon(Renderer):
 	def __init__(self):
 		Renderer.__init__(self)
-		self.PicLoad = ePicLoad()
-		self.PicLoad.PictureData.get().append(self.updatePicon)
-		self.piconsize = (0,0)
-		self.pngname = ""
-		self.lastPath = None
-		pngname = findPicon("picon_default")
+		self.pngname = None
 		self.defaultpngname = resolveFilename(SCOPE_ACTIVE_SKIN, "picon_default.png")
 
-	def addPath(self, value):
-		if pathExists(value):
-			global searchPaths
-			if not value.endswith('/'):
-				value += '/'
-			if value not in searchPaths:
-				searchPaths.append(value)
-
 	def applySkin(self, desktop, parent):
 		attribs = self.skinAttributes[:]
 		for (attrib, value) in self.skinAttributes:
 			if attrib == "path":
-				self.addPath(value)
+				piconLocator.addSearchPath(value)
 				attribs.remove((attrib,value))
-			elif attrib == "size":
-				self.piconsize = value
 		self.skinAttributes = attribs
-		return Renderer.applySkin(self, desktop, parent)
-
-	GUI_WIDGET = ePixmap
-
-	def postWidgetCreate(self, instance):
+		rc = Renderer.applySkin(self, desktop, parent)
 		self.changed((self.CHANGED_DEFAULT,))
+		return rc
 
-	def updatePicon(self, picInfo=None):
-		ptr = self.PicLoad.getData()
-		if ptr is not None:
-			self.instance.setPixmap(ptr.__deref__())
-			self.instance.show()
+	GUI_WIDGET = ePixmap
 
 	def changed(self, what):
 		if self.instance:
-			pngname = ""
-			if what[0] == 1 or what[0] == 3:
-				pngname = getPiconName(self.source.text)
+			if what[0] in (self.CHANGED_DEFAULT, self.CHANGED_ALL, self.CHANGED_SPECIFIC):
+				pngname = piconLocator.getPiconName(self.source.text)
 				if not pathExists(pngname): # no picon for service found
 					pngname = self.defaultpngname
 				if self.pngname != pngname:
@@ -163,6 +144,6 @@ class Picon(Renderer):
 					else:
 						self.instance.hide()
 					self.pngname = pngname
-
-harddiskmanager.on_partition_list_change.append(onPartitionChange)
-initPiconPaths()
+			elif what[0] == self.CHANGED_CLEAR:
+				self.pngname = None
+				self.instance.hide()
diff --git a/lib/python/Components/Renderer/PiconBg.py b/lib/python/Components/Renderer/PiconBg.py
index 8a93b96..0668a49 100644
--- a/lib/python/Components/Renderer/PiconBg.py
+++ b/lib/python/Components/Renderer/PiconBg.py
@@ -16,7 +16,7 @@ class PiconBg(Renderer):
 	def changed(self, what):
 		if self.instance:
 			pngname = ""
-			if what[0] == 1 or what[0] == 3:
+			if what[0] in (self.CHANGED_ALL, self.CHANGED_SPECIFIC):
 				pngname = resolveFilename(SCOPE_ACTIVE_SKIN, "piconbg/"+config.usage.show_picon_bkgrn.value + ".png")
 				if self.pngname != pngname:
 					if pngname:
diff --git a/lib/python/Components/Renderer/Pixmap.py b/lib/python/Components/Renderer/Pixmap.py
index 741eb71..7c6b579 100644
--- a/lib/python/Components/Renderer/Pixmap.py
+++ b/lib/python/Components/Renderer/Pixmap.py
@@ -16,6 +16,4 @@ class Pixmap(Renderer):
 			if self.source and hasattr(self.source, "pixmap"):
 				if self.instance:
 					self.instance.setPixmap(self.source.pixmap)
-		elif self.instance:
-			self.instance.setPixmap(None)
 
diff --git a/lib/python/Components/SetupDevices.py b/lib/python/Components/SetupDevices.py
index f87b5cd..70de9a7 100755
--- a/lib/python/Components/SetupDevices.py
+++ b/lib/python/Components/SetupDevices.py
@@ -1,4 +1,4 @@
-from config import config, ConfigSelection, ConfigSubsection, ConfigOnOff, ConfigText
+from Components.config import ConfigOnOff, ConfigSelection, ConfigSubsection, ConfigText, config
 from Components.Keyboard import keyboard
 
 def InitSetupDevices():
@@ -6,16 +6,16 @@ def InitSetupDevices():
 		keyboard.activateKeyboardMap(configElement.index)
 
 	config.keyboard = ConfigSubsection()
-	config.keyboard.keymap = ConfigSelection(default = keyboard.getDefaultKeyboardMap(), choices = keyboard.getKeyboardMaplist())
+	config.keyboard.keymap = ConfigSelection(default=keyboard.getDefaultKeyboardMap(), choices=keyboard.getKeyboardMaplist())
 	config.keyboard.keymap.addNotifier(keyboardNotifier)
 
 	config.parental = ConfigSubsection()
-	config.parental.lock = ConfigOnOff(default = False)
-	config.parental.setuplock = ConfigOnOff(default = False)
+	config.parental.lock = ConfigOnOff(default=False)
+	config.parental.setuplock = ConfigOnOff(default=False)
 
 	config.expert = ConfigSubsection()
-	config.expert.satpos = ConfigOnOff(default = True)
-	config.expert.fastzap = ConfigOnOff(default = True)
-	config.expert.skipconfirm = ConfigOnOff(default = False)
-	config.expert.hideerrors = ConfigOnOff(default = False)
-	config.expert.autoinfo = ConfigOnOff(default = True)
+	config.expert.satpos = ConfigOnOff(default=True)
+	config.expert.fastzap = ConfigOnOff(default=True)
+	config.expert.skipconfirm = ConfigOnOff(default=False)
+	config.expert.hideerrors = ConfigOnOff(default=False)
+	config.expert.autoinfo = ConfigOnOff(default=True)
diff --git a/lib/python/Components/Sources/Source.py b/lib/python/Components/Sources/Source.py
index 2fa4c29..60caedc 100644
--- a/lib/python/Components/Sources/Source.py
+++ b/lib/python/Components/Sources/Source.py
@@ -1,5 +1,6 @@
 from Components.Element import Element
 
+
 class Source(Element):
 	def execBegin(self):
 		pass
@@ -16,9 +17,9 @@ class Source(Element):
 	def destroy(self):
 		self.__dict__.clear()
 
+
 class ObsoleteSource(Source):
-	def __init__(self, new_source, description = None, removal_date = "as soon as possible"):
-		self.new_source = new_source
+	def __init__(self, newSource, description=None, removalDate="AS SOON AS POSSIBLE"):
+		self.newSource = newSource
 		self.description = description
-		self.removal_date = removal_date
-
+		self.removalDate = removalDate
diff --git a/lib/python/Components/SystemInfo.py b/lib/python/Components/SystemInfo.py
index 4f8d79c..6153dd5 100644
--- a/lib/python/Components/SystemInfo.py
+++ b/lib/python/Components/SystemInfo.py
@@ -1,60 +1,65 @@
-from enigma import eDVBResourceManager, Misc_Options, eDVBCIInterfaces
-from Tools.Directories import fileExists, fileCheck, pathExists, fileHas
-from Tools.HardwareInfo import HardwareInfo
-from Components.About import getChipSetString
+from boxbranding import getBoxType, getBrandOEM, getDisplayType, getHaveAVJACK, getHaveHDMIinFHD, getHaveHDMIinHD, getHaveRCA, getHaveSCART, getHaveYUV, getMachineBuild, getMachineMtdRoot
+from enigma import Misc_Options, eDVBCIInterfaces, eDVBResourceManager
 
-from boxbranding import getMachineBuild, getBoxType, getBrandOEM, getDisplayType, getHaveRCA, getHaveYUV, getHaveSCART, getHaveAVJACK, getHaveHDMIinHD, getHaveHDMIinFHD, getMachineMtdRoot
+from Components.About import getChipSetString
+from Tools.Directories import fileCheck, fileExists, fileHas, pathExists
+from Tools.HardwareInfo import HardwareInfo
 
-SystemInfo = { }
+SystemInfo = {}
+SystemInfo["HasRootSubdir"] = False	# This needs to be here so it can be reset by getMultibootslots!
+SystemInfo["RecoveryMode"] = False	# This needs to be here so it can be reset by getMultibootslots!
+from Tools.Multiboot import getMBbootdevice, getMultibootslots  # This import needs to be here to avoid a SystemInfo load loop!
 
-#FIXMEE...
 def getNumVideoDecoders():
-	idx = 0
-	while fileExists("/dev/dvb/adapter0/video%d"% idx, 'f'):
-		idx += 1
-	return idx
+	numVideoDecoders = 0
+	while fileExists("/dev/dvb/adapter0/video%d" % numVideoDecoders, "f"):
+		numVideoDecoders += 1
+	return numVideoDecoders
 
 def countFrontpanelLEDs():
-	leds = 0
-	if fileExists("/proc/stb/fp/led_set_pattern"):
-		leds += 1
-	while fileExists("/proc/stb/fp/led%d_pattern" % leds):
-		leds += 1
-	return leds
+	numLeds = fileExists("/proc/stb/fp/led_set_pattern") and 1 or 0
+	while fileExists("/proc/stb/fp/led%d_pattern" % numLeds):
+		numLeds += 1
+	return numLeds
+
 
 SystemInfo["CommonInterface"] = eDVBCIInterfaces.getInstance().getNumOfSlots()
 SystemInfo["CommonInterfaceCIDelay"] = fileCheck("/proc/stb/tsmux/rmx_delay")
-for cislot in range (0, SystemInfo["CommonInterface"]):
-	SystemInfo["CI%dSupportsHighBitrates" % cislot] = fileCheck("/proc/stb/tsmux/ci%d_tsclk"  % cislot)
-	SystemInfo["CI%dRelevantPidsRoutingSupport" % cislot] = fileCheck("/proc/stb/tsmux/ci%d_relevant_pids_routing"  % cislot)
-
+for cislot in range(0, SystemInfo["CommonInterface"]):
+	SystemInfo["CI%dSupportsHighBitrates" % cislot] = fileCheck("/proc/stb/tsmux/ci%d_tsclk" % cislot)
+	SystemInfo["CI%dRelevantPidsRoutingSupport" % cislot] = fileCheck("/proc/stb/tsmux/ci%d_relevant_pids_routing" % cislot)
 SystemInfo["NumVideoDecoders"] = getNumVideoDecoders()
+SystemInfo["Udev"] = not fileExists("/dev/.devfsd")
 SystemInfo["PIPAvailable"] = SystemInfo["NumVideoDecoders"] > 1
 SystemInfo["CanMeasureFrontendInputPower"] = eDVBResourceManager.getInstance().canMeasureFrontendInputPower()
 SystemInfo["12V_Output"] = Misc_Options.getInstance().detected_12V_output()
 SystemInfo["ZapMode"] = fileCheck("/proc/stb/video/zapmode") or fileCheck("/proc/stb/video/zapping_mode")
 SystemInfo["NumFrontpanelLEDs"] = countFrontpanelLEDs()
+SystemInfo["FrontpanelDisplay"] = fileExists("/dev/dbox/oled0") or fileExists("/dev/dbox/lcd0")
+SystemInfo["LCDSKINSetup"] = pathExists("/usr/share/enigma2/display") and not 
 SystemInfo["OledDisplay"] = fileExists("/dev/dbox/oled0")
 SystemInfo["LcdDisplay"] = fileExists("/dev/dbox/lcd0")
-SystemInfo["DisplayLED"] = getBoxType() in ('gb800se', 'gb800solo', 'gbx1', 'gbx2', 'gbx3', 'gbx3h')
-SystemInfo["LEDButtons"] = getBoxType() == 'vuultimo'
+SystemInfo["DisplayLED"] = False
+SystemInfo["LEDButtons"] = False
 SystemInfo["DeepstandbySupport"] = HardwareInfo().has_deepstandby()
 SystemInfo["Fan"] = fileCheck("/proc/stb/fp/fan")
 SystemInfo["FanPWM"] = SystemInfo["Fan"] and fileCheck("/proc/stb/fp/fan_pwm")
-SystemInfo["StandbyLED"] = fileCheck("/proc/stb/power/standbyled")
+SystemInfo["PowerLED"] = False
+SystemInfo["PowerLED2"] = False
+SystemInfo["StandbyLED"] = False
+SystemInfo["SuspendLED"] = False
+SystemInfo["LedPowerColor"] = False
+SystemInfo["LedStandbyColor"] = False
+SystemInfo["LedSuspendColor"] = False
+SystemInfo["Power24x7On"] = False
+SystemInfo["Power24x7Standby"] = False
+SystemInfo["Power24x7Suspend"] = False
 SystemInfo["WakeOnLAN"] = fileCheck("/proc/stb/power/wol") or fileCheck("/proc/stb/fp/wol")
 SystemInfo["HDMICEC"] = (fileExists("/dev/hdmi_cec") or fileExists("/dev/misc/hdmi_cec0")) and fileExists("/usr/lib/enigma2/python/Plugins/SystemPlugins/HdmiCEC/plugin.pyo")
-SystemInfo["SABSetup"] = fileExists("/usr/lib/enigma2/python/Plugins/SystemPlugins/SABnzbd/plugin.pyo")
-SystemInfo["Blindscan"] = fileExists("/usr/lib/enigma2/python/Plugins/SystemPlugins/Blindscan/plugin.pyo")
-SystemInfo["Satfinder"] = fileExists("/usr/lib/enigma2/python/Plugins/SystemPlugins/Satfinder/plugin.pyo")
 SystemInfo["HasExternalPIP"] = fileCheck("/proc/stb/vmpeg/1/external")
 SystemInfo["VideoDestinationConfigurable"] = fileExists("/proc/stb/vmpeg/0/dst_left")
 SystemInfo["hasPIPVisibleProc"] = fileCheck("/proc/stb/vmpeg/1/visible")
 SystemInfo["LcdLiveTV"] = fileCheck("/proc/stb/fb/sd_detach") or fileCheck("/proc/stb/lcd/live_enable")
-SystemInfo["VFD_scroll_repeats"] = getBoxType() not in ('et8500') and fileCheck("/proc/stb/lcd/scroll_repeats")	
-SystemInfo["VFD_scroll_delay"] = getBoxType() not in ('et8500') and fileCheck("/proc/stb/lcd/scroll_delay")	
-SystemInfo["VFD_initial_scroll_delay"] = getBoxType() not in ('et8500') and fileCheck("/proc/stb/lcd/initial_scroll_delay")	
-SystemInfo["VFD_final_scroll_delay"] = getBoxType() not in ('et8500') and fileCheck("/proc/stb/lcd/final_scroll_delay")
 SystemInfo["LCDMiniTV"] = fileExists("/proc/stb/lcd/mode")
 SystemInfo["LCDMiniTVPiP"] = SystemInfo["LCDMiniTV"]
 SystemInfo["LcdPowerOn"] = fileExists("/proc/stb/power/vfd")
@@ -72,12 +77,16 @@ SystemInfo["HasInfoButton"] = False
 SystemInfo["Has24hz"] = fileCheck("/proc/stb/video/videomode_24hz")
 SystemInfo["HasRootSubdir"] = False
 SystemInfo["RecoveryMode"] = False
+SystemInfo["AndroidMode"] = False
+SystemInfo["MBbootdevice"] = False
 SystemInfo["canMultiBoot"] = False
+SystemInfo["canBackupEMC"] = False
 SystemInfo["HasHiSi"] = False
 SystemInfo["canMode12"] = False
-SystemInfo["HasMMC"] = fileHas("/proc/cmdline", "root=/dev/mmcblk") or SystemInfo["canMultiBoot"] and fileHas("/proc/cmdline", "root=/dev/sda")
-SystemInfo["HasSDmmc"] = SystemInfo["canMultiBoot"] and "sd" in SystemInfo["canMultiBoot"][2] and "mmcblk" in getMachineMtdRoot() 
-SystemInfo["CanProc"] = SystemInfo["HasMMC"] and getBrandOEM() != "vuplus"
+SystemInfo["HasMMC"] = fileHas("/proc/cmdline", "root=/dev/mmcblk") or "mmcblk" in getMachineMtdRoot()
+SystemInfo["HasH9SD"] = False
+SystemInfo["HasSDnomount"] = False
+SystemInfo["CanProc"] = False
 SystemInfo["Canaudiosource"] = fileCheck("/proc/stb/hdmi/audio_source")
 SystemInfo["Can3DSurround"] = fileHas("/proc/stb/audio/3d_surround_choices", "none")
 SystemInfo["Can3DSpeaker"] = fileHas("/proc/stb/audio/3d_surround_speaker_position_choices", "center")
@@ -105,22 +114,23 @@ SystemInfo["HasScaler_sharpness"] = pathExists("/proc/stb/vmpeg/0/pep_scaler_sha
 # Machines that do have SCART component video (red, green and blue RCA sockets).
 SystemInfo["Scart-YPbPr"] = getBrandOEM() == "vuplus" and not "4k" in getBoxType()
 # Machines that do not have component video (red, green and blue RCA sockets).
-SystemInfo["no_YPbPr"] = getHaveYUV() in ('False',)
+SystemInfo["no_YPbPr"] = getHaveYUV() in ("False",)
 # Machines that have composite video (yellow RCA socket) but do not have Scart.
-SystemInfo["yellow_RCA_no_scart"] = getHaveSCART() in ('False',) and (getHaveRCA() in ('True',) or getHaveAVJACK() in ('True',))
-# Machines that have neither yellow RCA nor Scart sockets
-SystemInfo["no_yellow_RCA__no_scart"] = getHaveRCA() in ('False',) and (getHaveSCART() in ('False',) and getHaveAVJACK() in ('False',))
-SystemInfo["VideoModes"] = getChipSetString() in ( # 2160p and 1080p capable hardware
-		'5272s', '7251', '7251s', '7252', '7252s', '72604', '7278', '7366', '7376', '7444s'
-	) and (
-		["720p", "1080p", "2160p", "2160p30", "1080i", "576p", "576i", "480p", "480i"], # normal modes
-		{"720p", "1080p", "2160p", "2160p30", "1080i"} # widescreen modes
-	) or getChipSetString() in ( # 1080p capable hardware
-		'7241', '7356', '73565', '7358', '7362', '73625', '7424', '7425', '7552'
-	) and (
-		["720p", "1080p", "1080i", "576p", "576i", "480p", "480i"], # normal modes
-		{"720p", "1080p", "1080i"} # widescreen modes
-	) or ( # default modes (neither 2160p nor 1080p capable hardware)
-		["720p", "1080i", "576p", "576i", "480p", "480i"], # normal modes
-		{"720p", "1080i"} # widescreen modes
-	)
+SystemInfo["yellow_RCA_no_scart"] = getHaveSCART() in ("False",) and (getHaveRCA() in ("True",) or getHaveAVJACK() in ("True",))
+# Machines that have neither yellow RCA nor Scart sockets.
+SystemInfo["no_yellow_RCA__no_scart"] = getHaveRCA() in ("False",) and (getHaveSCART() in ("False",) and getHaveAVJACK() in ("False",))
+SystemInfo["VideoModes"] = getChipSetString() in (  # 2160p and 1080p capable hardware...
+	"5272s", "7251", "7251s", "7252", "7252s", "7278", "7366", "7376", "7444s", "72604"
+) and (
+	["720p", "1080p", "2160p", "2160p30", "1080i", "576p", "576i", "480p", "480i"],  # Normal modes.
+	{"720p", "1080p", "2160p", "2160p30", "1080i"}  # Widescreen modes.
+) or getChipSetString() in (  # 1080p capable hardware...
+	"7241", "7356", "73565", "7358", "7362", "73625", "7424", "7425", "7552"
+) and (
+	["720p", "1080p", "1080i", "576p", "576i", "480p", "480i"],  # Normal modes.
+	{"720p", "1080p", "1080i"}  # Widescreen modes.
+) or (  # Default modes (neither 2160p nor 1080p capable hardware)...
+	["720p", "1080i", "576p", "576i", "480p", "480i"],  # Normal modes.
+	{"720p", "1080i"}  # Widescreen modes.
+)
+SystemInfo["LnbPowerAlwaysOn"] = getBoxType() in ("vusolo4k", "vuduo4k", "vuultimo4k", "vuuno4k", "vuuno4kse")
diff --git a/lib/python/Components/TimerList.py b/lib/python/Components/TimerList.py
index 8ff3ebc..bdd2338 100644
--- a/lib/python/Components/TimerList.py
+++ b/lib/python/Components/TimerList.py
@@ -1,9 +1,12 @@
 from GUIComponent import GUIComponent
+from config import config
 from skin import parseFont
 
 from Tools.FuzzyDate import FuzzyTime
 
-from enigma import eListboxPythonMultiContent, eListbox, gFont, RT_HALIGN_LEFT, RT_HALIGN_RIGHT, RT_VALIGN_CENTER, RT_VALIGN_TOP, RT_VALIGN_BOTTOM
+from enigma import eListboxPythonMultiContent, eListbox, gFont, loadPNG, RT_HALIGN_LEFT, RT_HALIGN_RIGHT, RT_VALIGN_TOP, RT_VALIGN_BOTTOM, BT_SCALE, BT_KEEP_ASPECT_RATIO, BT_ALIGN_CENTER
+from Components.MultiContent import MultiContentEntryText, MultiContentEntryPixmapAlphaBlend, MultiContentEntryPixmapAlphaTest
+from Components.Renderer.Picon import getPiconName
 from Tools.Alternatives import GetWithAlternative
 from Tools.LoadPixmap import LoadPixmap
 from Tools.TextBoundary import getTextBoundarySize
@@ -20,14 +23,38 @@ class TimerList(GUIComponent, object):
 		height = self.l.getItemSize().height()
 		width = self.l.getItemSize().width()
 		res = [ None ]
+		piconWidth = 100 if config.usage.timerlist_showpicons.value else 0
 		serviceName = timer.service_ref.getServiceName()
 
 		serviceNameWidth = getTextBoundarySize(self.instance, self.serviceNameFont, self.l.getItemSize(), serviceName).width()
-		if 200 > width - serviceNameWidth - self.iconWidth - self.iconMargin:
-			serviceNameWidth = width - 200 - self.iconWidth - self.iconMargin
-
+		nameWidth = width - serviceNameWidth - self.iconWidth - self.iconMargin - piconWidth
+		if nameWidth < 200:
+			serviceNameWidth = width - 200 - self.iconWidth - self.iconMargin - piconWidth
+
+		def addPicon():
+			refstr = None
+			if hasattr(timer.service_ref, 'sref'):
+				refstr = str(timer.service_ref.sref)
+			else:
+				refstr = str(timer.service_ref)
+
+			displayPicon = None
+			picon = getPiconName(refstr)
+			if picon != "":
+				displayPicon = LoadPixmap(picon)
+			if displayPicon is not None:
+				res.append(MultiContentEntryPixmapAlphaBlend(
+					pos = (colX, 0), size = (piconWidth, self.itemHeight),
+					png = displayPicon,
+					backcolor = None, backcolor_sel = None, flags = BT_SCALE | BT_KEEP_ASPECT_RATIO | BT_ALIGN_CENTER))
+			return piconWidth
+
+		colX = 0
+		if config.usage.timerlist_showpicons.value:
+			colX += addPicon()
+
+		res.append((eListboxPythonMultiContent.TYPE_TEXT, colX + self.iconWidth + self.iconMargin, 0, nameWidth, self.rowSplit, 2, RT_HALIGN_LEFT|RT_VALIGN_BOTTOM, timer.name))
 		res.append((eListboxPythonMultiContent.TYPE_TEXT, width - serviceNameWidth, 0, serviceNameWidth, self.rowSplit, 0, RT_HALIGN_RIGHT|RT_VALIGN_BOTTOM, serviceName))
-		res.append((eListboxPythonMultiContent.TYPE_TEXT, self.iconWidth + self.iconMargin, 0, width - serviceNameWidth - self.iconWidth - self.iconMargin, self.rowSplit, 2, RT_HALIGN_LEFT|RT_VALIGN_BOTTOM, timer.name))
 
 		begin = FuzzyTime(timer.begin)
 		if timer.repeated:
@@ -47,7 +74,7 @@ class TimerList(GUIComponent, object):
 			else:
 				repeatedtext = ", ".join(repeatedtext)
 			if self.iconRepeat:
-				res.append((eListboxPythonMultiContent.TYPE_PIXMAP_ALPHABLEND, self.iconMargin / 2, self.rowSplit + (self.itemHeight - self.rowSplit - self.iconHeight) / 2, self.iconWidth, self.iconHeight, self.iconRepeat))
+				res.append((eListboxPythonMultiContent.TYPE_PIXMAP_ALPHABLEND, colX + self.iconMargin, self.rowSplit + (self.itemHeight - self.rowSplit - self.iconHeight) / 2, self.iconWidth, self.iconHeight, self.iconRepeat))
 		else:
 			repeatedtext = begin[0] # date
 		if timer.justplay:
@@ -91,13 +118,13 @@ class TimerList(GUIComponent, object):
 			state = _("done!")
 			icon = self.iconDone
 
-		icon and res.append((eListboxPythonMultiContent.TYPE_PIXMAP_ALPHABLEND, self.iconMargin / 2, (self.rowSplit - self.iconHeight) / 2, self.iconWidth, self.iconHeight, icon))
+		icon and res.append((eListboxPythonMultiContent.TYPE_PIXMAP_ALPHABLEND, colX + self.iconMargin / 2, (self.rowSplit - self.iconHeight) / 2, self.iconWidth, self.iconHeight, icon))
 
 		orbpos = self.getOrbitalPos(timer.service_ref)
 		orbposWidth = getTextBoundarySize(self.instance, self.font, self.l.getItemSize(), orbpos).width()
-		res.append((eListboxPythonMultiContent.TYPE_TEXT, self.satPosLeft, self.rowSplit, orbposWidth, self.itemHeight - self.rowSplit, 1, RT_HALIGN_LEFT|RT_VALIGN_TOP, orbpos))
-		res.append((eListboxPythonMultiContent.TYPE_TEXT, self.iconWidth + self.iconMargin, self.rowSplit, self.satPosLeft - self.iconWidth - self.iconMargin, self.itemHeight - self.rowSplit, 1, RT_HALIGN_LEFT|RT_VALIGN_TOP, state))
-		res.append((eListboxPythonMultiContent.TYPE_TEXT, self.satPosLeft + orbposWidth, self.rowSplit, width - self.satPosLeft - orbposWidth, self.itemHeight - self.rowSplit, 1, RT_HALIGN_RIGHT|RT_VALIGN_TOP, text))
+		res.append((eListboxPythonMultiContent.TYPE_TEXT, colX + self.satPosLeft, self.rowSplit, orbposWidth, self.itemHeight - self.rowSplit, 1, RT_HALIGN_LEFT|RT_VALIGN_TOP, orbpos))
+		res.append((eListboxPythonMultiContent.TYPE_TEXT, colX + self.iconWidth + self.iconMargin, self.rowSplit, self.satPosLeft - self.iconWidth - self.iconMargin, self.itemHeight - self.rowSplit, 1, RT_HALIGN_LEFT|RT_VALIGN_TOP, state))
+		res.append((eListboxPythonMultiContent.TYPE_TEXT, colX + self.satPosLeft + orbposWidth, self.rowSplit, width - self.satPosLeft - orbposWidth - colX, self.itemHeight - self.rowSplit, 1, RT_HALIGN_RIGHT|RT_VALIGN_TOP, text))
 
 		line = LoadPixmap(resolveFilename(SCOPE_ACTIVE_SKIN, "div-h.png"))
 		res.append((eListboxPythonMultiContent.TYPE_PIXMAP_ALPHABLEND, 0, height-2, width, 2, line))
@@ -111,6 +138,7 @@ class TimerList(GUIComponent, object):
 		self.serviceNameFont = gFont("Regular", 20)
 		self.font = gFont("Regular", 18)
 		self.eventNameFont = gFont("Regular", 18)
+
 		self.l.setList(list)
 		self.itemHeight = 50
 		self.rowSplit = 25
diff --git a/lib/python/Components/Timezones.py b/lib/python/Components/Timezones.py
index 7fe9e46..10b5ef2 100755
--- a/lib/python/Components/Timezones.py
+++ b/lib/python/Components/Timezones.py
@@ -1,214 +1,357 @@
-from enigma import eTimer
+import errno
+import xml.etree.cElementTree
 
-from config import config, ConfigSelection, ConfigSubsection
-from os import environ, unlink, symlink, walk, path
-import time
+from os import environ, path, symlink, unlink, walk
+from time import gmtime, localtime, strftime, time
+
+from Components.config import ConfigSelection, ConfigSubsection, config
+from Tools.Geolocation import geolocation
+from Tools.StbHardware import setRTCoffset
+
+# The DEFAULT_AREA setting is usable by the image maintainers to select the
+# default UI mode and location settings used by their image.  If the value
+# of "Classic" is used then images that use the "Time zone area" and
+# "Time zone" settings will have the "Time zone area" set to "Classic" and the
+# "Time zone" field will be an expanded version of the classic list of GMT
+# related offsets.  Images that only use the "Time zone" setting should use
+# "Classic" to maintain their chosen UI for time zone selection.  That is,
+# users will only be presented with the list of GMT related offsets.
+#
+# The DEFAULT_ZONE is used to select the default time zone if the "Time zone
+# area" is selected to be "Europe".  This allows OpenViX to have the
+# European default of "London" while OpenATV and OpenPLi can select "Berlin",
+# etc. (These are only examples.)  Images can select any defaults they deem
+# appropriate.
+#
+# NOTE: Even if the DEFAULT_AREA of "Classic" is selected a DEFAULT_ZONE
+# must still be selected.
+#
+# For images that use both the "Time zone area" and "Time zone" configuration
+# options then the DEFAULT_AREA can be set to an area most appropriate for
+# the image.  For example, Beyonwiz would use "Australia", OpenATV, OpenViX
+# and OpenPLi would use "Europe".  If the "Europe" option is selected then
+# the DEFAULT_ZONE can be used to select a more appropriate time zone
+# selection for the image.  For example, OpenATV and OpenPLi may prefer
+# "Berlin" while OpenViX may prefer "London".
+#
+# Please ensure that any defaults selected are valid, unique and available
+# in the "/usr/share/zoneinfo/" directory tree.
+#
+# This version of Timezones.py now incorporates access to a new Geolocation
+# feature that will try and determine the appropriate time zone for the user
+# based on their WAN IP address.  If the receiver is not connected to the
+# Internet the defaults described above and listed below will be used.
+#
+# DEFAULT_AREA = "Classic"  # Use the classic time zone based list of time zones.
+# DEFAULT_AREA = "Australia"  # Beyonwiz
+DEFAULT_AREA = "Europe"  # OpenATV, OpenPLi, OpenViX
+# DEFAULT_ZONE = "Amsterdam"  # OpenPLi
+# DEFAULT_ZONE = "Berlin"  # OpenATV
+DEFAULT_ZONE = "London"  # OpenViX
+TIMEZONE_FILE = "/etc/timezone.xml"  # This should be SCOPE_TIMEZONES_FILE!  This file moves arond the filesystem!!!  :(
+TIMEZONE_DATA = "/usr/share/zoneinfo/"  # This should be SCOPE_TIMEZONES_DATA!
 
 def InitTimeZones():
+	tz = geolocation.get("timezone", None)
+	proxy = geolocation.get("proxy", False)
+	if tz is None or proxy is True:
+		area = DEFAULT_AREA
+		zone = timezones.getTimezoneDefault(area=area)
+		if proxy:
+			msg = " - proxy in use"
+		else:
+			msg = ""
+		print "[Timezones] Geolocation not available%s!  (area='%s', zone='%s')" % (msg, area, zone)
+	elif DEFAULT_AREA == "Classic":
+		area = "Classic"
+		zone = tz
+		print "[Timezones] Classic mode with geolocation tz='%s'.  (area='%s', zone='%s')" % (tz, area, zone)
+	else:
+		area, zone = tz.split("/", 1)
+		print "[Timezones] Modern mode with geolocation tz='%s'.  (area='%s', zone='%s')" % (tz, area, zone)
 	config.timezone = ConfigSubsection()
-	config.timezone.area = ConfigSelection(default = "Europe", choices = timezones.getTimezoneAreaList())
+	config.timezone.area = ConfigSelection(default=area, choices=timezones.getTimezoneAreaList())
+	config.timezone.val = ConfigSelection(default=timezones.getTimezoneDefault(), choices=timezones.getTimezoneList())
+	if not config.timezone.area.value and config.timezone.val.value.find("/") == -1:
+		config.timezone.area.value = "Generic"
+	try:
+		tzLink = path.realpath("/etc/localtime")[20:]
+		msgs = []
+		if config.timezone.area.value == "Classic":
+			if config.timezone.val.value != tzLink:
+				msgs.append("time zone '%s' != '%s'" % (config.timezone.val.value, tzLink))
+		else:
+			tzSplit = tzLink.find("/")
+			if tzSplit == -1:
+				tzArea = "Generic"
+				tzVal = tzLink
+			else:
+				tzArea = tzLink[:tzSplit]
+				tzVal = tzLink[tzSplit + 1:]
+			if config.timezone.area.value != tzArea:
+				msgs.append("area '%s' != '%s'" % (config.timezone.area.value, tzArea))
+			if config.timezone.val.value != tzVal:
+				msgs.append("zone '%s' != '%s'" % (config.timezone.val.value, tzVal))
+		if len(msgs):
+			print "[Timezones] Warning: Enigma2 time zone does not match system time zone (%s), setting system to Enigma2 time zone!" % ",".join(msgs)
+	except (IOError, OSError):
+		pass
+
 	def timezoneAreaChoices(configElement):
-		timezones.updateTimezoneChoices(configElement.getValue(), config.timezone.val)
-	config.timezone.area.addNotifier(timezoneAreaChoices, initial_call = False, immediate_feedback = True)
+		choices = timezones.getTimezoneList(area=configElement.value)
+		config.timezone.val.setChoices(choices=choices, default=timezones.getTimezoneDefault(area=configElement.value, choices=choices))
+		if config.timezone.val.saved_value and config.timezone.val.saved_value in [x[0] for x in choices]:
+			config.timezone.val.value = config.timezone.val.saved_value
 
-	config.timezone.val = ConfigSelection(default = timezones.getTimezoneDefault(), choices = timezones.getTimezoneList())
 	def timezoneNotifier(configElement):
-		timezones.activateTimezone(configElement.getValue(), config.timezone.area.getValue())
-	config.timezone.val.addNotifier(timezoneNotifier, initial_call = True, immediate_feedback = True)
-	config.timezone.val.callNotifiersOnSaveAndCancel = True
+		timezones.activateTimezone(configElement.value, config.timezone.area.value)
 
-def sorttzChoices(tzchoices):
-	sort_list = []
-	for tzitem in tzchoices:
-		if tzitem[0].startswith("GMT"):
-			if len(tzitem[0][3:]) > 1 and (tzitem[0][3:4] == "-" or tzitem[0][3:4] == "+") and tzitem[0][4:].isdigit():
-				sortkey = int(tzitem[0][3:])
-			else:
-				sortkey = 0
-		else:
-			sortkey = tzitem[1]
-		sort_list.append((tzitem, sortkey))
-	sort_list.sort(key=lambda listItem: listItem[1])
-	return [i[0] for i in sort_list]
+	config.timezone.area.addNotifier(timezoneAreaChoices, initial_call=False, immediate_feedback=True)
+	config.timezone.val.addNotifier(timezoneNotifier, initial_call=True, immediate_feedback=True)
+	config.timezone.val.callNotifiersOnSaveAndCancel = True
 
-def sorttz(tzlist):
-	return [i[0] for i in sorttzChoices(zip(tzlist, tzlist))]
 
 class Timezones:
-	tzbase = "/usr/share/zoneinfo"
-	gen_label = "Generic"
-	at_poll_delay = 3  # Minutes
-
 	def __init__(self):
 		self.timezones = {}
-		self.readTimezonesFromSystem()
-		try:
-			from Plugins.Extensions.AutoTimer.plugin import autotimer, autopoller
-			# Create attributes autotimer & autopoller for backwards compatibility.
-			# Their use is deprecated.
-			self.autopoller = autopoller
-			self.autotimer = autotimer
-			self.at_poll_delay = config.plugins.autotimer.delay.value
-		except ImportError:
-			self.autopoller = None
-			self.autotimer = None
-			self.at_poll_delay = None
-		self.timer = eTimer()
-		self.ATupdate = None
-		if self.at_poll_delay is None:
-			self.at_poll_delay = 3
-
-	def startATupdate(self):
-		if self.ATupdate:
-			self.timer.stop()
-		if self.query not in self.timer.callback:
-			self.timer.callback.append(self.query)
-		print "[Timezones] AutoTimer poll will be run in", self.at_poll_delay, "minutes"
-		self.timer.startLongTimer(self.at_poll_delay * 60)
-
-	def stopATupdate(self):
-		self.ATupdate = None
-		if self.query in self.timer.callback:
-			self.timer.callback.remove(self.query)
-		self.timer.stop()
-
-	def query(self):
-		print "[Timezones] AutoTimer poll running"
-		self.stopATupdate()
+		self.loadTimezones()
+		self.readTimezones()
+		self.callbacks = []
+		# This is a work around to maintain support of AutoTimers
+		# until AutoTimers are updated to use the Timezones
+		# callbacks.  Once AutoTimers are updated *all* AutoTimer
+		# code should be removed from the Timezones.py code!
+		self.autotimerInit()
+
+	# Scan the zoneinfo directory tree and all load all time zones found.
+	#
+	def loadTimezones(self):
+		commonTimezoneNames = {
+			"Antarctica/DumontDUrville": "Dumont d'Urville",
+			"Asia/Ho_Chi_Minh": "Ho Chi Minh City",
+			"Australia/LHI": None,  # Duplicate entry - Exclude from list.
+			"Australia/Lord_Howe": "Lord Howe Island",
+			"Australia/North": "Northern Territory",
+			"Australia/South": "South Australia",
+			"Australia/West": "Western Australia",
+			"Brazil/DeNoronha": "Fernando de Noronha",
+			"Pacific/Chatham": "Chatham Islands",
+			"Pacific/Easter": "Easter Island",
+			"Pacific/Galapagos": "Galapagos Islands",
+			"Pacific/Gambier": "Gambier Islands",
+			"Pacific/Johnston": "Johnston Atoll",
+			"Pacific/Marquesas": "Marquesas Islands",
+			"Pacific/Midway": "Midway Islands",
+			"Pacific/Norfolk": "Norfolk Island",
+			"Pacific/Pitcairn": "Pitcairn Islands",
+			"Pacific/Wake": "Wake Island",
+		}
+		for (root, dirs, files) in walk(TIMEZONE_DATA):
+			base = root[len(TIMEZONE_DATA):]
+			if base.startswith("posix") or base.startswith("right"):  # Skip these alternate copies of the time zone data if they exist.
+				continue
+			if base == "":
+				base = "Generic"
+			area = None
+			zones = []
+			for file in files:
+				if file[-4:] == ".tab" or file[-2:] == "-0" or file[-1:] == "0" or file[-2:] == "+0":  # No need for ".tab", "-0", "0", "+0" files.
+					continue
+				tz = "%s/%s" % (base, file)
+				area, zone = tz.split("/", 1)
+				name = commonTimezoneNames.get(tz, zone)  # Use the more common name if one is defined.
+				if name is None:
+					continue
+				if isinstance(name, unicode):
+					name = name.encode(encoding="UTF-8", errors="ignore")
+				if isinstance(area, unicode):
+					area = area.encode(encoding="UTF-8", errors="ignore")
+				if isinstance(zone, unicode):
+					zone = zone.encode(encoding="UTF-8", errors="ignore")
+				zones.append((zone, name.replace("_", " ")))
+			if area:
+				if area in self.timezones:
+					zones = self.timezones[area] + zones
+				self.timezones[area] = self.gmtSort(zones)
+		if len(self.timezones) == 0:
+			print "[Timezones] Warning: No areas or zones found in '%s'!" % TIMEZONE_DATA
+			self.timezones["Generic"] = [("UTC", "UTC")]
+
+	# Return the list of Zones sorted alphabetically.  If the Zone
+	# starts with "GMT" then those Zones will be sorted in GMT order
+	# with GMT-14 first and GMT+12 last.
+	#
+	def gmtSort(self, zones):
+		data = {}
+		for (zone, name) in zones:
+			if name.startswith("GMT"):
+				try:
+					key = int(name[4:])
+					key = (key * -1) + 15 if name[3:4] == "-" else key + 15
+					key = "GMT%02d" % key
+				except ValueError:
+					key = "GMT15"
+			else:
+				key = name
+			data[key] = (zone, name)
+		return [data[x] for x in sorted(data.keys())]
+
+	# Read the timezones.xml file and load all time zones found.
+	#
+	def readTimezones(self, filename=TIMEZONE_FILE):
+		root = None
 		try:
-			from Plugins.Extensions.AutoTimer.plugin import autotimer, autopoller
-			self.autopoller = autopoller
-			self.autotimer = autotimer
-			if autotimer is not None:
-				print "[Timezones] AutoTimer parseEPG"
-				autotimer.parseEPG(autoPoll=True)
-			if autopoller is not None:
-				autopoller.start()
-		except ImportError, KeyError:
-			pass
-
-	def readTimezonesFromSystem(self):
-		tzfiles = [];
-		for (root, dirs, files) in walk(Timezones.tzbase):
-			root = root[len(Timezones.tzbase):]
-			if root == "":
-				root = "/" + Timezones.gen_label
-			for f in files:
-				if f[-4:] == '.tab' or f[-2:] == '-0' or f[-2:] == '+0': # no need for '.tab', -0, +0
-					files.remove(f)
-
-			for f in files:
-				fp = "%s/%s" % (root, f)
-				fp = fp[1:]	# Remove leading "/"
-				(section, zone) = fp.split("/", 1)
-				if not section in self.timezones:
-					self.timezones[section] = []
-				self.timezones[section].append(zone)
-
-			if len(self.timezones) == 0:
-				self.timezones[Timezones.gen_label] = ['UTC']
-
-	# Return all Area options
+			with open(filename, "r") as fd:  # This open gets around a possible file handle leak in Python's XML parser.
+				try:
+					root = xml.etree.cElementTree.parse(fd).getroot()
+				except xml.etree.cElementTree.ParseError as err:
+					root = None
+					fd.seek(0)
+					content = fd.readlines()
+					line, column = err.position
+					print "[Timezones] XML Parse Error: '%s' in '%s'!" % (err, filename)
+					data = content[line - 1].replace("\t", " ").rstrip()
+					print "[Timezones] XML Parse Error: '%s'" % data
+					print "[Timezones] XML Parse Error: '%s^%s'" % ("-" * column, " " * (len(data) - column - 1))
+				except Exception as err:
+					root = None
+					print "[Timezones] Error: Unable to parse time zone data in '%s' - '%s'!" % (filename, err)
+		except (IOError, OSError) as err:
+			if err.errno == errno.ENOENT:  # No such file or directory
+				print "[Timezones] Note: Classic time zones in '%s' are not available." % filename
+			else:
+				print "[Timezones] Error %d: Opening time zone file '%s'! (%s)" % (err.errno, filename, err.strerror)
+		except Exception as err:
+			print "[Timezones] Error: Unexpected error opening time zone file '%s'! (%s)" % (filename, err)
+		zones = []
+		if root is not None:
+			for zone in root.findall("zone"):
+				name = zone.get("name", "")
+				if isinstance(name, unicode):
+					name = name.encode(encoding="UTF-8", errors="ignore")
+				zonePath = zone.get("zone", "")
+				if isinstance(zonePath, unicode):
+					zonePath = zonePath.encode(encoding="UTF-8", errors="ignore")
+				if path.exists(path.join(TIMEZONE_DATA, zonePath)):
+					zones.append((zonePath, name))
+				else:
+					print "[Timezones] Warning: Classic time zone '%s' (%s) is not available in '%s'!" % (name, zonePath, TIMEZONE_DATA)
+			self.timezones["Classic"] = zones
+		if len(zones) == 0:
+			self.timezones["Classic"] = [("UTC", "UTC")]
+
+	# Return a sorted list of all Area entries.
+	#
 	def getTimezoneAreaList(self):
 		return sorted(self.timezones.keys())
 
-	userFriendlyTZNames = {
-		"Asia/Ho_Chi_Minh": _("Ho Chi Minh City"),
-		"Australia/LHI": None, # Exclude
-		"Australia/Lord_Howe": _("Lord Howe Island"),
-		"Australia/North": _("Northern Territory"),
-		"Australia/South": _("South Australia"),
-		"Australia/West": _("Western Australia"),
-		"Brazil/DeNoronha": _("Fernando de Noronha"),
-		"Pacific/Chatham": _("Chatham Islands"),
-		"Pacific/Easter": _("Easter Island"),
-		"Pacific/Galapagos": _("Galapagos Islands"),
-		"Pacific/Gambier": _("Gambier Islands"),
-		"Pacific/Johnston": _("Johnston Atoll"),
-		"Pacific/Marquesas": _("Marquesas Islands"),
-		"Pacific/Midway": _("Midway Islands"),
-		"Pacific/Norfolk": _("Norfolk Island"),
-		"Pacific/Pitcairn": _("Pitcairn Islands"),
-		"Pacific/Wake": _("Wake Island"),
-	}
-
-	@staticmethod
-	def getUserFriendlyTZName(area, tzname):
-		return Timezones.userFriendlyTZNames.get(area + '/' + tzname, tzname.replace('_', ' '))
-
-	# Return all zone entries for an Area, sorted.
+	# Return a sorted list of all Zone entries for an Area.
+	#
 	def getTimezoneList(self, area=None):
-		if area == None:
-			area = config.timezone.area.getValue()
-		return sorttzChoices((tzname, self.getUserFriendlyTZName(area, tzname)) for tzname in self.timezones[area] if self.getUserFriendlyTZName(area, tzname))
-
-	default_for_area = {
-		'Europe': 'London',
-		'Generic': 'UTC',
-	}
+		if area is None:
+			area = config.timezone.area.value
+		return self.timezones.get(area, [("UTC", "UTC")])
+
+	# Return a default Zone for any given Area.  If there is no specific
+	# default then the first Zone in the Area will be returned.
+	#
 	def getTimezoneDefault(self, area=None, choices=None):
-		if area == None:
-			try:
-				area = config.timezone.area.getValue()
-			except:
-				print "[Timezones] getTimezoneDefault, no area found, using Europe"
-				area = "Europe"
-		if choices == None:
+		areaDefaultZone = {
+			"Australia": "Sydney",
+			"Classic": "Europe/%s" % DEFAULT_ZONE,
+			"Etc": "GMT",
+			"Europe": DEFAULT_ZONE,
+			"Generic": "UTC",
+			"Pacific": "Auckland"
+		}
+		if area is None:
+			area = config.timezone.area.value
+		if choices is None:
 			choices = self.getTimezoneList(area=area)
-		return Timezones.default_for_area.setdefault(area, choices[0][0])
-
-	def updateTimezoneChoices(self, area, zone_field):
-		choices = self.getTimezoneList(area=area)
-		default = self.getTimezoneDefault(area=area, choices=choices)
-		zone_field.setChoices(choices = choices, default = default)
-		return
+		return areaDefaultZone.setdefault(area, choices[0][0])
 
-	def activateTimezone(self, tz, tzarea):
-		try:
-			from Plugins.Extensions.AutoTimer.plugin import autotimer, autopoller
-			self.autopoller = autopoller
-			self.autotimer = autotimer
-			if config.plugins.autotimer.autopoll.value:
-				print "[Timezones] trying to stop main AutoTimer poller"
-				if autopoller is not None:
-					autopoller.stop()
-				self.ATupdate = True
-		except ImportError, KeyError:
-			pass
-
-		if tzarea == Timezones.gen_label:
-			fulltz = tz
-		else:
-			fulltz = "%s/%s" % (tzarea, tz)
-
-		tzneed = "%s/%s" % (Timezones.tzbase, fulltz)
-		if not path.isfile(tzneed):
-			print "[Timezones] Attempt to set timezone", fulltz, "ignored. UTC used"
-			fulltz = "UTC"
-			tzneed = "%s/%s" % (Timezones.tzbase, fulltz)
-
-		print "[Timezones] setting timezone to", fulltz
-		environ['TZ'] = fulltz
+	def activateTimezone(self, zone, area, runCallbacks=True):
+		tz = zone if area in ("Classic", "Generic") else path.join(area, zone)
+		file = path.join(TIMEZONE_DATA, tz)
+		if not path.isfile(file):
+			print "[Timezones] Error: The time zone '%s' is not available!  Using 'UTC' instead." % tz
+			tz = "UTC"
+			file = path.join(TIMEZONE_DATA, tz)
+		print "[Timezones] Setting time zone to '%s'." % tz
 		try:
 			unlink("/etc/localtime")
-		except OSError:
-			pass
+		except (IOError, OSError) as err:
+			if err.errno != errno.ENOENT:  # No such file or directory
+				print "[Timezones] Error %d: Unlinking '/etc/localtime'! (%s)" % (err.errno, err.strerror)
+		try:
+			symlink(file, "/etc/localtime")
+		except (IOError, OSError) as err:
+			print "[Timezones] Error %d: Linking '%s' to '/etc/localtime'! (%s)" % (err.errno, file, err.strerror)
 		try:
-			symlink(tzneed, "/etc/localtime")
-		except OSError:
-			pass
+			with open("/etc/timezone", "w") as fd:
+				fd.write("%s\n" % tz)
+		except (IOError, OSError) as err:
+			print "[Timezones] Error %d: Updating '/etc/timezone'! (%s)" % (err.errno, err.strerror)
+		environ["TZ"] = ":%s" % tz
 		try:
 			time.tzset()
-		except:
+		except Exception:
 			from enigma import e_tzset
 			e_tzset()
+		if path.exists("/proc/stb/fp/rtc_offset"):
+			setRTCoffset()
+		now = int(time())
+		timeFormat = "%a %d-%b-%Y %H:%M:%S"
+		print "[Timezones] Local time is '%s'  -  UTC time is '%s'." % (strftime(timeFormat, localtime(now)), strftime(timeFormat, gmtime(now)))
+		if runCallbacks:
+			for method in self.callbacks:
+				if method:
+					method()
+
+	def addCallback(self, callback):
+		if callback not in self.callbacks:
+			self.callbacks.append(callback)
+
+	def removeCallback(self, callback):
+		if callback in self.callbacks:
+			self.callbacks.remove(callback)
+
+	def autotimerInit(self):  # This code should be moved into the AutoTimer plugin!
 		try:
+			# Create attributes autotimer & autopoller for backwards compatibility.
+			# Their use is deprecated.
+			from enigma import eTimer
 			from Plugins.Extensions.AutoTimer.plugin import autotimer, autopoller
-			self.autopoller = autopoller
-			self.autotimer = autotimer
-			if config.plugins.autotimer.autopoll.value:
-				self.startATupdate()
-		except ImportError, KeyError:
-			pass
+			self.autotimerPoller = autopoller
+			self.autotimerTimer = autotimer
+			self.pollDelay = 3  # Poll delay in minutes.
+			try:
+				self.autotimerPollDelay = config.plugins.autotimer.delay.value
+			except AttributeError:
+				self.autotimerPollDelay = self.pollDelay
+			self.timer = eTimer()
+			self.timer.callback.append(self.autotimeQuery)
+			self.addCallback(self.autotimerCallback)
+		except ImportError:
+			self.autotimerPoller = None
+			self.autotimerTimer = None
+
+	def autotimerCallback(self):
+		if config.plugins.autotimer.autopoll.value:
+			self.timer.stop()
+			print "[Timezones] Trying to stop main AutoTimer poller."
+			if self.autotimerPoller is not None:
+				self.autotimerPoller.stop()
+			print "[Timezones] AutoTimer poller will be run in %d minutes." % self.pollDelay
+			self.timer.startLongTimer(self.pollDelay * 60)
+
+	def autotimeQuery(self):
+		print "[Timezones] AutoTimer poll is running."
+		if self.autotimerTimer is not None:
+			print "[Timezones] AutoTimer is parsing the EPG."
+			self.autotimerTimer.parseEPG(autoPoll=True)
+		if self.autotimerPoller is not None:
+			self.autotimerPoller.start()
+
 
 timezones = Timezones()
diff --git a/lib/python/Components/UsageConfig.py b/lib/python/Components/UsageConfig.py
index 1bfce03..4b79d6d 100755
--- a/lib/python/Components/UsageConfig.py
+++ b/lib/python/Components/UsageConfig.py
@@ -17,6 +17,7 @@ from Tools.HardwareInfo import HardwareInfo
 
 
 def InitUsageConfig():
+	config.version = ConfigNumber(default = 0)
 	config.misc.useNTPminutes = ConfigSelection(default = "30", choices = [("30", "30" + " " +_("minutes")), ("60", _("Hour")), ("1440", _("Once per day"))])
 	if getBrandOEM() in ('vuplus', 'ini'):
 		config.misc.remotecontrol_text_support = ConfigYesNo(default = True)
@@ -30,6 +31,7 @@ def InitUsageConfig():
 	config.usage.showdish = ConfigSelection(default = "flashing", choices = [("flashing", _("Flashing")), ("normal", _("Not Flashing")), ("off", _("Off"))])
 	config.misc.showrotorposition = ConfigSelection(default = "no", choices = [("no", _("no")), ("yes", _("yes")), ("withtext", _("with text")), ("tunername", _("with tuner name"))])
 	config.usage.multibouquet = ConfigYesNo(default = True)
+	config.usage.maxchannelnumlen = ConfigSelection(default = "4", choices = [("3", _("3")),("4", _("4")), ("5", _("5")), ("6", _("6"))])
 
 	config.usage.alternative_number_mode = ConfigYesNo(default = False)
 	def alternativeNumberModeChange(configElement):
@@ -70,7 +72,6 @@ def InitUsageConfig():
 	choicelist = [("0", _("No timeout"))]
 	for i in range(1, 21):
 		choicelist.append((str(i), ngettext("%d second", "%d seconds", i) % i))
-
 	config.usage.infobar_timeout = ConfigSelection(default = "5", choices = choicelist)
 	config.usage.show_infobar_do_dimming = ConfigYesNo(default = False)
 	config.usage.show_infobar_dimming_speed = ConfigSelectionNumber(min = 1, max = 40, stepwidth = 1, default = 40, wraparound = True)
@@ -400,13 +401,19 @@ def InitUsageConfig():
 	# TRANSLATORS: full date representation dayname daynum monthname year in strftime() format! See 'man strftime'
 	config.usage.date.dayfull = ConfigSelection(default=_("%A %-d %B %Y"), choices=[
 		(_("%A %d %B %Y"), _("Dayname DD Month Year")),
+		(_("%A %d. %B %Y"), _("Dayname DD. Month Year")),
 		(_("%A %-d %B %Y"), _("Dayname D Month Year")),
+		(_("%A %-d. %B %Y"), _("Dayname D. Month Year")),
 		(_("%A %d-%B-%Y"), _("Dayname DD-Month-Year")),
 		(_("%A %-d-%B-%Y"), _("Dayname D-Month-Year")),
 		(_("%A %d/%m/%Y"), _("Dayname DD/MM/Year")),
+		(_("%A %d.%m.%Y"), _("Dayname DD.MM.Year")),
 		(_("%A %-d/%m/%Y"), _("Dayname D/MM/Year")),
+		(_("%A %-d.%m.%Y"), _("Dayname D.MM.Year")),
 		(_("%A %d/%-m/%Y"), _("Dayname DD/M/Year")),
+		(_("%A %d.%-m.%Y"), _("Dayname DD.M.Year")),
 		(_("%A %-d/%-m/%Y"), _("Dayname D/M/Year")),
+		(_("%A %-d.%-m.%Y"), _("Dayname D.M.Year")),
 		(_("%A %B %d %Y"), _("Dayname Month DD Year")),
 		(_("%A %B %-d %Y"), _("Dayname Month D Year")),
 		(_("%A %B-%d-%Y"), _("Dayname Month-DD-Year")),
@@ -453,13 +460,19 @@ def InitUsageConfig():
 		dateStyles = {
 			# dayfull            shortdayfull      daylong           dayshortfull   dayshort       daysmall    full           long           short
 			_("%A %d %B %Y"): (_("%a %d %B %Y"), _("%a %d %b %Y"), _("%A %d %B"), _("%a %d %b"), _("%a %d"), _("%d %B %Y"), _("%d %b %Y"), _("%d %b")),
+			_("%A %d. %B %Y"): (_("%a %d. %B %Y"), _("%a %d. %b %Y"), _("%A %d. %B"), _("%a %d. %b"), _("%a %d"), _("%d. %B %Y"), _("%d. %b %Y"), _("%d. %b")),
 			_("%A %-d %B %Y"): (_("%a %-d %B %Y"), _("%a %-d %b %Y"), _("%A %-d %B"), _("%a %-d %b"), _("%a %-d"), _("%-d %B %Y"), _("%-d %b %Y"), _("%-d %b")),
+			_("%A %-d. %B %Y"): (_("%a %-d. %B %Y"), _("%a %-d. %b %Y"), _("%A %-d. %B"), _("%a %-d. %b"), _("%a %-d"), _("%-d. %B %Y"), _("%-d. %b %Y"), _("%-d. %b")),
 			_("%A %d-%B-%Y"): (_("%a %d-%B-%Y"), _("%a %d-%b-%Y"), _("%A %d-%B"), _("%a %d-%b"), _("%a %d"), _("%d-%B-%Y"), _("%d-%b-%Y"), _("%d-%b")),
 			_("%A %-d-%B-%Y"): (_("%a %-d-%B-%Y"), _("%a %-d-%b-%Y"), _("%A %-d-%B"), _("%a %-d-%b"), _("%a %-d"), _("%-d-%B-%Y"), _("%-d-%b-%Y"), _("%-d-%b")),
 			_("%A %d/%m/%Y"): (_("%a %d/%m/%Y"), _("%a %d/%m/%Y"), _("%A %d/%m"), _("%a %d/%m"), _("%a %d"), _("%d/%m/%Y"), _("%d/%m/%Y"), _("%d/%m")),
+			_("%A %d.%m.%Y"): (_("%a %d.%m.%Y"), _("%a %d.%m.%Y"), _("%A %d.%m"), _("%a %d.%m"), _("%a %d"), _("%d.%m.%Y"), _("%d.%m.%Y"), _("%d.%m")),
 			_("%A %-d/%m/%Y"): (_("%a %-d/%m/%Y"), _("%a %-d/%m/%Y"), _("%A %-d/%m"), _("%a %-d/%m"), _("%a %-d"), _("%-d/%m/%Y"), _("%-d/%m/%Y"), _("%-d/%m")),
+			_("%A %-d.%m.%Y"): (_("%a %-d.%m.%Y"), _("%a %-d.%m.%Y"), _("%A %-d.%m"), _("%a %-d.%m"), _("%a %-d"), _("%-d.%m.%Y"), _("%-d.%m.%Y"), _("%-d.%m")),
 			_("%A %d/%-m/%Y"): (_("%a %d/%-m/%Y"), _("%a %d/%-m/%Y"), _("%A %d/%-m"), _("%a %d/%-m"), _("%a %d"), _("%d/%-m/%Y"), _("%d/%-m/%Y"), _("%d/%-m")),
+			_("%A %d.%-m.%Y"): (_("%a %d.%-m.%Y"), _("%a %d.%-m.%Y"), _("%A %d.%-m"), _("%a %d.%-m"), _("%a %d"), _("%d.%-m.%Y"), _("%d.%-m.%Y"), _("%d.%-m")),
 			_("%A %-d/%-m/%Y"): (_("%a %-d/%-m/%Y"), _("%a %-d/%-m/%Y"), _("%A %-d/%-m"), _("%a %-d/%-m"), _("%a %-d"), _("%-d/%-m/%Y"), _("%-d/%-m/%Y"), _("%-d/%-m")),
+			_("%A %-d.%-m.%Y"): (_("%a %-d.%-m.%Y"), _("%a %-d.%-m.%Y"), _("%A %-d.%-m"), _("%a %-d.%-m"), _("%a %-d"), _("%-d.%-m.%Y"), _("%-d.%-m.%Y"), _("%-d.%-m")),
 			_("%A %B %d %Y"): (_("%a %B %d %Y"), _("%a %b %d %Y"), _("%A %B %d"), _("%a %b %d"), _("%a %d"), _("%B %d %Y"), _("%b %d %Y"), _("%b %d")),
 			_("%A %B %-d %Y"): (_("%a %B %-d %Y"), _("%a %b %-d %Y"), _("%A %B %-d"), _("%a %b %-d"), _("%a %-d"), _("%B %-d %Y"), _("%b %-d %Y"), _("%b %-d")),
 			_("%A %B-%d-%Y"): (_("%a %B-%d-%Y"), _("%a %b-%d-%Y"), _("%A %B-%d"), _("%a %b-%d"), _("%a %d"), _("%B-%d-%Y"), _("%b-%d-%Y"), _("%b-%d")),
@@ -725,7 +738,7 @@ def InitUsageConfig():
 	config.epg.virgin.addNotifier(EpgSettingsChanged)
 	config.epg.opentv.addNotifier(EpgSettingsChanged)
 
-	config.epg.histminutes = ConfigSelectionNumber(min = 0, max = 120, stepwidth = 15, default = 0, wraparound = True)
+	config.epg.histminutes = ConfigSelectionNumber(min = 0, max = 720, stepwidth = 15, default = 0, wraparound = True)
 	def EpgHistorySecondsChanged(configElement):
 		eEPGCache.getInstance().setEpgHistorySeconds(config.epg.histminutes.value*60)
 	config.epg.histminutes.addNotifier(EpgHistorySecondsChanged)
@@ -842,6 +855,13 @@ def InitUsageConfig():
 	config.crash.debugloglimit = ConfigSelectionNumber(min = 1, max = 10, stepwidth = 1, default = 4, wraparound = True)
 	config.crash.daysloglimit = ConfigSelectionNumber(min = 1, max = 30, stepwidth = 1, default = 8, wraparound = True)
 	config.crash.sizeloglimit = ConfigSelectionNumber(min = 1, max = 20, stepwidth = 1, default = 10, wraparound = True)
+	# config.crash.logtimeformat sets ENIGMA_DEBUG_TIME environmental variable on enigma2 start from enigma2.sh
+	config.crash.logtimeformat = ConfigSelection(default = "1", choices = [
+		("0", _("none")),
+		("1", _("boot time")),
+		("2", _("local time")),
+		("3", _("boot time and local time")) ])
+	config.crash.logtimeformat.save_forced = True
 
 	debugpath = [('/home/root/logs/', '/home/root/')]
 	for p in harddiskmanager.getMountedPartitions():
@@ -856,7 +876,8 @@ def InitUsageConfig():
 			os.mkdir(config.crash.debug_path.value,0755)
 	config.crash.debug_path.addNotifier(updatedebug_path, immediate_feedback = False)
 
-	config.usage.timerlist_finished_timer_position = ConfigSelection(default = "end", choices = [("beginning", _("at beginning")), ("end", _("at end"))])
+	config.usage.timerlist_showpicons = ConfigYesNo(default = True)
+	config.usage.timerlist_finished_timer_position = ConfigSelection(default = "end", choices = [("beginning", _("at beginning")), ("end", _("at end")), ("hide", _("hide"))])
 
 	def updateEnterForward(configElement):
 		if not configElement.value:
@@ -889,6 +910,7 @@ def InitUsageConfig():
 	config.misc.erase_flags.addNotifier(updateEraseFlags, immediate_feedback = False)
 
 	config.misc.zapkey_delay = ConfigSelectionNumber(default = 5, stepwidth = 1, min = 0, max = 20, wraparound = True)
+	config.misc.numzap_picon = ConfigYesNo(default = False)
 	if SystemInfo["ZapMode"]:
 		def setZapmode(el):
 			file = open(SystemInfo["ZapMode"], "w")
@@ -1028,13 +1050,17 @@ def InitUsageConfig():
 
 	config.logmanager = ConfigSubsection()
 	config.logmanager.showinextensions = ConfigYesNo(default = False)
+	config.logmanager.user = ConfigText(default='', fixed_size=False)
+	config.logmanager.useremail = ConfigText(default='', fixed_size=False)
+	config.logmanager.usersendcopy = ConfigYesNo(default = True)
 	config.logmanager.path = ConfigText(default = "/")
+	config.logmanager.additionalinfo = NoSave(ConfigText(default = ""))
 	config.logmanager.sentfiles = ConfigLocations(default='')
 
-	config.vixsettings = ConfigSubsection()
-	config.vixsettings.Subservice = ConfigYesNo(default = False)
-	config.vixsettings.ColouredButtons = ConfigYesNo(default = True)
-	config.vixsettings.InfoBarEpg_mode = ConfigSelection(default="0", choices = [
+	config.obhsettings = ConfigSubsection()
+	config.obhsettings.Subservice = ConfigYesNo(default = False)
+	config.obhsettings.ColouredButtons = ConfigYesNo(default = True)
+	config.obhsettings.InfoBarEpg_mode = ConfigSelection(default="0", choices = [
 					("0", _("as plugin in extended bar")),
 					("1", _("with long OK press")),
 					("2", _("with exit button")),
@@ -1043,59 +1069,76 @@ def InitUsageConfig():
 	config.epgselection = ConfigSubsection()
 	config.epgselection.sort = ConfigSelection(default="0", choices = [("0", _("Time")),("1", _("Alphanumeric"))])
 	config.epgselection.overjump = ConfigYesNo(default = False)
-	config.epgselection.infobar_type_mode = ConfigSelection(default="graphics", choices=[("text", _("Text Multi EPG")), ("graphics", _("Graphics Multi EPG")), ("single", _("Single EPG"))])
-	if SystemInfo.get("NumVideoDecoders", 1) > 1:
-		config.epgselection.infobar_preview_mode = ConfigSelection(choices = [("0",_("Disabled")), ("1", _("Full screen")), ("2", _("PiP"))], default = "1")
-	else:
-		config.epgselection.infobar_preview_mode = ConfigSelection(choices = [("0",_("Disabled")), ("1", _("Full screen"))], default = "1")
-	config.epgselection.infobar_ok = ConfigSelection(choices = [("Zap",_("Zap")), ("Zap + Exit", _("Zap + Exit"))], default = "Zap")
-	config.epgselection.infobar_oklong = ConfigSelection(choices = [("Zap",_("Zap")), ("Zap + Exit", _("Zap + Exit"))], default = "Zap + Exit")
-	config.epgselection.infobar_itemsperpage = ConfigSelectionNumber(default = 2, stepwidth = 1, min = 1, max = 4, wraparound = True)
-	config.epgselection.infobar_roundto = ConfigSelection(default = "15", choices = [("15", _("%d minutes") % 15), ("30", _("%d minutes") % 30), ("60", _("%d minutes") % 60)])
-	config.epgselection.infobar_prevtime = ConfigClock(default = time())
-	config.epgselection.infobar_prevtimeperiod = ConfigSelection(default = "180", choices = [("60", _("%d minutes") % 60), ("90", _("%d minutes") % 90), ("120", _("%d minutes") % 120), ("150", _("%d minutes") % 150), ("180", _("%d minutes") % 180), ("210", _("%d minutes") % 210), ("240", _("%d minutes") % 240), ("270", _("%d minutes") % 270), ("300", _("%d minutes") % 300)])
-	config.epgselection.infobar_primetimehour = ConfigSelectionNumber(default = 20, stepwidth = 1, min = 00, max = 23, wraparound = True)
-	config.epgselection.infobar_primetimemins = ConfigSelectionNumber(default = 00, stepwidth = 1, min = 00, max = 59, wraparound = True)
-	config.epgselection.infobar_servicetitle_mode = ConfigSelection(default = "servicename", choices = [("servicename", _("Service Name")),("picon", _("Picon")),("picon+servicename", _("Picon and Service Name")) ])
-	config.epgselection.infobar_servfs = ConfigSelectionNumber(default = 0, stepwidth = 1, min = -8, max = 10, wraparound = True)
-	config.epgselection.infobar_eventfs = ConfigSelectionNumber(default = 0, stepwidth = 1, min = -8, max = 10, wraparound = True)
-	config.epgselection.infobar_timelinefs = ConfigSelectionNumber(default = 0, stepwidth = 1, min = -8, max = 10, wraparound = True)
-	config.epgselection.infobar_timeline24h = ConfigYesNo(default = True)
-	config.epgselection.infobar_servicewidth = ConfigSelectionNumber(default = 250, stepwidth = 1, min = 70, max = 500, wraparound = True)
-	config.epgselection.infobar_piconwidth = ConfigSelectionNumber(default = 100, stepwidth = 1, min = 50, max = 500, wraparound = True)
-	config.epgselection.infobar_infowidth = ConfigSelectionNumber(default = 50, stepwidth = 25, min = 0, max = 150, wraparound = True)
-	config.epgselection.enhanced_preview_mode = ConfigYesNo(default = True)
-	config.epgselection.enhanced_ok = ConfigSelection(choices = [("Zap",_("Zap")), ("Zap + Exit", _("Zap + Exit"))], default = "Zap")
-	config.epgselection.enhanced_oklong = ConfigSelection(choices = [("Zap",_("Zap")), ("Zap + Exit", _("Zap + Exit"))], default = "Zap + Exit")
-	config.epgselection.enhanced_eventfs = ConfigSelectionNumber(default = 0, stepwidth = 1, min = -8, max = 10, wraparound = True)
-	config.epgselection.enhanced_itemsperpage = ConfigSelectionNumber(default = 18, stepwidth = 1, min = 1, max = 40, wraparound = True)
-	config.epgselection.multi_showbouquet = ConfigYesNo(default = False)
-	config.epgselection.multi_preview_mode = ConfigYesNo(default = True)
-	config.epgselection.multi_ok = ConfigSelection(choices = [("Zap",_("Zap")), ("Zap + Exit", _("Zap + Exit"))], default = "Zap")
-	config.epgselection.multi_oklong = ConfigSelection(choices = [("Zap",_("Zap")), ("Zap + Exit", _("Zap + Exit"))], default = "Zap + Exit")
-	config.epgselection.multi_eventfs = ConfigSelectionNumber(default = 0, stepwidth = 1, min = -8, max = 10, wraparound = True)
-	config.epgselection.multi_itemsperpage = ConfigSelectionNumber(default = 18, stepwidth = 1, min = 12, max = 40, wraparound = True)
-	config.epgselection.graph_showbouquet = ConfigYesNo(default = False)
-	config.epgselection.graph_preview_mode = ConfigYesNo(default = True)
-	config.epgselection.graph_type_mode = ConfigSelection(choices = [("graphics",_("Graphics")), ("text", _("Text"))], default = "graphics")
-	config.epgselection.graph_highlight_current_events = ConfigYesNo(default=True)
-	config.epgselection.graph_ok = ConfigSelection(choices = [("Zap",_("Zap")), ("Zap + Exit", _("Zap + Exit"))], default = "Zap")
-	config.epgselection.graph_oklong = ConfigSelection(choices = [("Zap",_("Zap")), ("Zap + Exit", _("Zap + Exit"))], default = "Zap + Exit")
-	config.epgselection.graph_info = ConfigSelection(choices = [("Channel Info", _("Channel Info")), ("Single EPG", _("Single EPG"))], default = "Channel Info")
-	config.epgselection.graph_infolong = ConfigSelection(choices = [("Channel Info", _("Channel Info")), ("Single EPG", _("Single EPG"))], default = "Single EPG")
-	config.epgselection.graph_roundto = ConfigSelection(default = "15", choices = [("15", _("%d minutes") % 15), ("30", _("%d minutes") % 30), ("60", _("%d minutes") % 60)])
-	config.epgselection.graph_prevtime = ConfigClock(default = time())
-	config.epgselection.graph_prevtimeperiod = ConfigSelection(default = "180", choices = [("60", _("%d minutes") % 60), ("90", _("%d minutes") % 90), ("120", _("%d minutes") % 120), ("150", _("%d minutes") % 150), ("180", _("%d minutes") % 180), ("210", _("%d minutes") % 210), ("240", _("%d minutes") % 240), ("270", _("%d minutes") % 270), ("300", _("%d minutes") % 300)])
-	config.epgselection.graph_primetimehour = ConfigSelectionNumber(default = 20, stepwidth = 1, min = 00, max = 23, wraparound = True)
-	config.epgselection.graph_primetimemins = ConfigSelectionNumber(default = 00, stepwidth = 1, min = 00, max = 59, wraparound = True)
-	config.epgselection.graph_servicetitle_mode = ConfigSelection(default = "servicename", choices = [
+
+	serviceTitleChoices = [
 		("servicename", _("Service Name")),
 		("picon", _("Picon")),
 		("picon+servicename", _("Picon and Service Name")),
 		("servicenumber+picon", _("Service Number and Picon")),
+		("picon+servicenumber", _("Picon and Service Number")),
 		("servicenumber+servicename", _("Service Number and Service Name")),
-		("servicenumber+picon+servicename", _("Service Number, Picon and Service Name"))])
-	config.epgselection.graph_channel1 = ConfigYesNo(default = False)
+		("picon+servicenumber+servicename", _("Picon, Service Number and Service Name")),
+		("servicenumber+picon+servicename", _("Service Number, Picon and Service Name"))]
+
+	config.epgselection.infobar = ConfigSubsection()
+	config.epgselection.infobar.browse_mode = ConfigSelection(default = "currentservice", choices = [
+		("currentservice", _("Select current service")),
+		("lastepgservice", _("Select last browsed service"))])
+	config.epgselection.infobar.type_mode = ConfigSelection(default="graphics", choices=[("text", _("Text Grid EPG")), ("graphics", _("Graphics Grid EPG")), ("single", _("Single EPG"))])
+	if SystemInfo.get("NumVideoDecoders", 1) > 1:
+		config.epgselection.infobar.preview_mode = ConfigSelection(choices = [("0",_("Disabled")), ("1", _("Full screen")), ("2", _("PiP"))], default = "1")
+	else:
+		config.epgselection.infobar.preview_mode = ConfigSelection(choices = [("0",_("Disabled")), ("1", _("Full screen"))], default = "1")
+	config.epgselection.infobar.btn_ok = ConfigSelection(choices = [("zap",_("Zap")), ("zapExit", _("Zap + Exit"))], default = "zap")
+	config.epgselection.infobar.btn_oklong = ConfigSelection(choices = [("zap",_("Zap")), ("zapExit", _("Zap + Exit"))], default = "zapExit")
+	config.epgselection.infobar.itemsperpage = ConfigSelectionNumber(default = 2, stepwidth = 1, min = 1, max = 4, wraparound = True)
+	config.epgselection.infobar.roundto = ConfigSelection(default = "15", choices = [("15", _("%d minutes") % 15), ("30", _("%d minutes") % 30), ("60", _("%d minutes") % 60)])
+	config.epgselection.infobar.prevtimeperiod = ConfigSelection(default = "180", choices = [("60", _("%d minutes") % 60), ("90", _("%d minutes") % 90), ("120", _("%d minutes") % 120), ("150", _("%d minutes") % 150), ("180", _("%d minutes") % 180), ("210", _("%d minutes") % 210), ("240", _("%d minutes") % 240), ("270", _("%d minutes") % 270), ("300", _("%d minutes") % 300)])
+	config.epgselection.infobar.primetime = ConfigClock(default = 20 * 60)
+	config.epgselection.infobar.servicetitle_mode = ConfigSelection(default = "servicename", choices = serviceTitleChoices)
+	config.epgselection.infobar.servfs = ConfigSelectionNumber(default = 0, stepwidth = 1, min = -8, max = 10, wraparound = True)
+	config.epgselection.infobar.eventfs = ConfigSelectionNumber(default = 0, stepwidth = 1, min = -8, max = 10, wraparound = True)
+	config.epgselection.infobar.timelinefs = ConfigSelectionNumber(default = 0, stepwidth = 1, min = -8, max = 10, wraparound = True)
+	config.epgselection.infobar.timeline24h = ConfigYesNo(default = True)
+	config.epgselection.infobar.servicewidth = ConfigSelectionNumber(default = 250, stepwidth = 1, min = 70, max = 500, wraparound = True)
+	config.epgselection.infobar.piconwidth = ConfigSelectionNumber(default = 100, stepwidth = 1, min = 50, max = 500, wraparound = True)
+	config.epgselection.infobar.infowidth = ConfigSelectionNumber(default = 50, stepwidth = 25, min = 0, max = 150, wraparound = True)
+	config.epgselection.single = ConfigSubsection()
+	config.epgselection.single.browse_mode = ConfigSelection(default = "currentservice", choices = [
+		("currentservice", _("Select current service")),
+		("lastepgservice", _("Select last browsed service"))])
+	config.epgselection.single.preview_mode = ConfigYesNo(default = True)
+	config.epgselection.single.btn_ok = ConfigSelection(choices = [("zap",_("Zap")), ("zapExit", _("Zap + Exit"))], default = "zap")
+	config.epgselection.single.btn_oklong = ConfigSelection(choices = [("zap",_("Zap")), ("zapExit", _("Zap + Exit"))], default = "zapExit")
+	config.epgselection.single.eventfs = ConfigSelectionNumber(default = 0, stepwidth = 1, min = -8, max = 10, wraparound = True)
+	config.epgselection.single.itemsperpage = ConfigSelectionNumber(default = 18, stepwidth = 1, min = 1, max = 40, wraparound = True)
+	config.epgselection.multi = ConfigSubsection()
+	config.epgselection.multi.showbouquet = ConfigYesNo(default = False)
+	config.epgselection.multi.browse_mode = ConfigSelection(default = "currentservice", choices = [
+		("currentservice", _("Select current service")),
+		("firstservice", _("Select first service in bouquet"))])
+	config.epgselection.multi.preview_mode = ConfigYesNo(default = True)
+	config.epgselection.multi.btn_ok = ConfigSelection(choices = [("zap",_("Zap")), ("zapExit", _("Zap + Exit"))], default = "zap")
+	config.epgselection.multi.btn_oklong = ConfigSelection(choices = [("zap",_("Zap")), ("zapExit", _("Zap + Exit"))], default = "zapExit")
+	config.epgselection.multi.eventfs = ConfigSelectionNumber(default = 0, stepwidth = 1, min = -8, max = 10, wraparound = True)
+	config.epgselection.multi.itemsperpage = ConfigSelectionNumber(default = 18, stepwidth = 1, min = 12, max = 40, wraparound = True)
+	config.epgselection.multi.servicewidth = ConfigSelectionNumber(default = 7, stepwidth = 1, min = 5, max = 20, wraparound = True)
+	config.epgselection.grid = ConfigSubsection()
+	config.epgselection.grid.showbouquet = ConfigYesNo(default = False)
+	config.epgselection.grid.browse_mode = ConfigSelection(default = "currentservice", choices = [
+		("currentservice", _("Select current service")),
+		("firstservice", _("Select first service in bouquet"))])
+	config.epgselection.grid.preview_mode = ConfigYesNo(default = True)
+	config.epgselection.grid.type_mode = ConfigSelection(choices = [("graphics",_("Graphics")), ("text", _("Text"))], default = "graphics")
+	config.epgselection.grid.highlight_current_events = ConfigYesNo(default=True)
+	config.epgselection.grid.btn_ok = ConfigSelection(choices = [("zap",_("Zap")), ("zapExit", _("Zap + Exit"))], default = "zap")
+	config.epgselection.grid.btn_oklong = ConfigSelection(choices = [("zap",_("Zap")), ("zapExit", _("Zap + Exit"))], default = "zapExit")
+	config.epgselection.grid.btn_info = ConfigSelection(choices = [("openEventView", _("Event Info")), ("openSingleEPG", _("Single EPG"))], default = "Event Info")
+	config.epgselection.grid.btn_infolong = ConfigSelection(choices = [("openEventView", _("Event Info")), ("openSingleEPG", _("Single EPG"))], default = "Single EPG")
+	config.epgselection.grid.roundto = ConfigSelection(default = "15", choices = [("15", _("%d minutes") % 15), ("30", _("%d minutes") % 30), ("60", _("%d minutes") % 60)])
+	config.epgselection.grid.prevtimeperiod = ConfigSelection(default = "180", choices = [("60", _("%d minutes") % 60), ("90", _("%d minutes") % 90), ("120", _("%d minutes") % 120), ("150", _("%d minutes") % 150), ("180", _("%d minutes") % 180), ("210", _("%d minutes") % 210), ("240", _("%d minutes") % 240), ("270", _("%d minutes") % 270), ("300", _("%d minutes") % 300)])
+	config.epgselection.grid.primetime = ConfigClock(default = 20 * 60)
+	config.epgselection.grid.servicetitle_mode = ConfigSelection(default = "servicename", choices = serviceTitleChoices)
 	possibleAlignmentChoices = [
 			( str(RT_HALIGN_LEFT   | RT_VALIGN_CENTER          ) , _("left")),
 			( str(RT_HALIGN_CENTER | RT_VALIGN_CENTER          ) , _("centered")),
@@ -1103,23 +1146,22 @@ def InitUsageConfig():
 			( str(RT_HALIGN_LEFT   | RT_VALIGN_CENTER | RT_WRAP) , _("left, wrapped")),
 			( str(RT_HALIGN_CENTER | RT_VALIGN_CENTER | RT_WRAP) , _("centered, wrapped")),
 			( str(RT_HALIGN_RIGHT  | RT_VALIGN_CENTER | RT_WRAP) , _("right, wrapped"))]
-	config.epgselection.graph_servicename_alignment = ConfigSelection(default = possibleAlignmentChoices[0][0], choices = possibleAlignmentChoices)
-	config.epgselection.graph_servicenumber_alignment = ConfigSelection(default = possibleAlignmentChoices[0][0], choices = possibleAlignmentChoices)
-	config.epgselection.graph_event_alignment = ConfigSelection(default = possibleAlignmentChoices[0][0], choices = possibleAlignmentChoices)
-	config.epgselection.graph_timelinedate_alignment = ConfigSelection(default = possibleAlignmentChoices[0][0], choices = possibleAlignmentChoices)
-	config.epgselection.graph_servfs = ConfigSelectionNumber(default = 0, stepwidth = 1, min = -8, max = 10, wraparound = True)
-	config.epgselection.graph_eventfs = ConfigSelectionNumber(default = 0, stepwidth = 1, min = -8, max = 10, wraparound = True)
-	config.epgselection.graph_timelinefs = ConfigSelectionNumber(default = 0, stepwidth = 1, min = -8, max = 10, wraparound = True)
-	config.epgselection.graph_timeline24h = ConfigYesNo(default = True)
-	config.epgselection.graph_itemsperpage = ConfigSelectionNumber(default = 8, stepwidth = 1, min = 3, max = 20, wraparound = True)
-	config.epgselection.graph_pig = ConfigYesNo(default = True)
-	config.epgselection.graph_heightswitch = NoSave(ConfigYesNo(default = False))
-	config.epgselection.graph_servicewidth = ConfigSelectionNumber(default = 250, stepwidth = 1, min = 70, max = 500, wraparound = True)
-	config.epgselection.graph_piconwidth = ConfigSelectionNumber(default = 100, stepwidth = 1, min = 50, max = 500, wraparound = True)
-	config.epgselection.graph_infowidth = ConfigSelectionNumber(default = 50, stepwidth = 25, min = 0, max = 150, wraparound = True)
-	config.epgselection.graph_rec_icon_height = ConfigSelection(choices = [("bottom",_("bottom")),("top", _("top")), ("middle", _("middle")),  ("hide", _("hide"))], default = "bottom")
-
-	softcams = []
+	config.epgselection.grid.servicename_alignment = ConfigSelection(default = possibleAlignmentChoices[0][0], choices = possibleAlignmentChoices)
+	config.epgselection.grid.servicenumber_alignment = ConfigSelection(default = possibleAlignmentChoices[0][0], choices = possibleAlignmentChoices)
+	config.epgselection.grid.event_alignment = ConfigSelection(default = possibleAlignmentChoices[0][0], choices = possibleAlignmentChoices)
+	config.epgselection.grid.timelinedate_alignment = ConfigSelection(default = possibleAlignmentChoices[0][0], choices = possibleAlignmentChoices)
+	config.epgselection.grid.servfs = ConfigSelectionNumber(default = 0, stepwidth = 1, min = -8, max = 10, wraparound = True)
+	config.epgselection.grid.eventfs = ConfigSelectionNumber(default = 0, stepwidth = 1, min = -8, max = 10, wraparound = True)
+	config.epgselection.grid.timelinefs = ConfigSelectionNumber(default = 0, stepwidth = 1, min = -8, max = 10, wraparound = True)
+	config.epgselection.grid.timeline24h = ConfigYesNo(default = True)
+	config.epgselection.grid.itemsperpage = ConfigSelectionNumber(default = 8, stepwidth = 1, min = 3, max = 20, wraparound = True)
+	config.epgselection.grid.pig = ConfigYesNo(default = True)
+	config.epgselection.grid.heightswitch = NoSave(ConfigYesNo(default = False))
+	config.epgselection.grid.servicewidth = ConfigSelectionNumber(default = 250, stepwidth = 1, min = 70, max = 500, wraparound = True)
+	config.epgselection.grid.piconwidth = ConfigSelectionNumber(default = 100, stepwidth = 1, min = 50, max = 500, wraparound = True)
+	config.epgselection.grid.infowidth = ConfigSelectionNumber(default = 50, stepwidth = 25, min = 0, max = 150, wraparound = True)
+	config.epgselection.grid.rec_icon_height = ConfigSelection(choices = [("bottom",_("bottom")),("top", _("top")), ("middle", _("middle")),  ("hide", _("hide"))], default = "bottom")
+
 	config.oscaminfo = ConfigSubsection()
 	config.oscaminfo.showInExtensions = ConfigYesNo(default=False)
 	config.oscaminfo.userdatafromconf = ConfigYesNo(default = True)
@@ -1148,13 +1190,6 @@ def InitUsageConfig():
 	config.cccaminfo.blacklist = ConfigText(default="/media/cf/CCcamInfo.blacklisted", fixed_size=False)
 	config.cccaminfo.profiles = ConfigText(default="/media/cf/CCcamInfo.profiles", fixed_size=False)
 	SystemInfo["CCcamInstalled"] = False
-	for softcam in softcams:
-		if softcam.lower().startswith('cccam'):
-			config.cccaminfo.showInExtensions = ConfigYesNo(default=True)
-			SystemInfo["CCcamInstalled"] = True
-		elif softcam.lower().startswith('oscam'):
-			config.oscaminfo.showInExtensions = ConfigYesNo(default=True)
-			SystemInfo["OScamInstalled"] = True
 
 	config.streaming = ConfigSubsection()
 	config.streaming.stream_ecm = ConfigYesNo(default = False)
@@ -1172,6 +1207,14 @@ def InitUsageConfig():
 	config.mediaplayer.useAlternateUserAgent = ConfigYesNo(default=False)
 	config.mediaplayer.alternateUserAgent = ConfigText(default="")
 
+	upgradeConfig()
+
+	# now that the config upgrade has been processed, it's safe to reintroduce any settings
+	# required for backwards compatibility with plugins. These will mirror the new settings
+	config.epgselection.enhanced_eventfs = config.epgselection.single.eventfs
+	config.epgselection.enhanced_itemsperpage = config.epgselection.single.itemsperpage
+
+
 def updateChoices(sel, choices):
 	if choices:
 		defval = None
@@ -1203,3 +1246,104 @@ def preferredInstantRecordPath():
 
 def defaultMoviePath():
 	return defaultRecordingLocation(config.usage.default_path.value)
+
+def upgradeConfig():
+	if config.version.value < 53023:
+		def getOldValue(name):
+			value = config.content.stored_values
+			found = True
+			for n in name.split("."):
+				value = value.get(n, None)
+				if value is None:
+					found = False
+					break
+			# this value is a string, not the actual type required by the config item
+			return value if found else None
+
+		def upgrade(configItem, name, valuemap = None, mapper = None):
+			value = getOldValue(name)
+			if value is not None:
+				# this value is a string, not the actual type required by the config item
+				newvalue = None
+				if valuemap is not None:
+					newvalue = valuemap.get(value, None)
+				if newvalue is None and mapper is not None:
+					newvalue = mapper(value)
+				if newvalue is not None:
+					print "[UsageConfig] upgrading %s, mapping value %s to %s" % (name, value, newvalue)
+				else:
+					print "[UsageConfig] upgrading %s, value %s" % (name, value)
+					newvalue = value
+				if newvalue is not None:
+					# load the string value to convert it to the config item's type
+					configItem.saved_value = newvalue
+					configItem.load()
+
+		print "[UsageConfig] Upgrading EPG settings"
+
+		okMap = {"Zap + Exit": "zapExit", "Zap": "zap"}
+		infoMap = {"Channel Info": "openEventView", "Single EPG": "openSingleEPG"}
+
+		upgrade(config.epgselection.infobar.type_mode, "epgselection.infobar_type_mode")
+		upgrade(config.epgselection.infobar.preview_mode, "epgselection.infobar_preview_mode")
+		upgrade(config.epgselection.infobar.btn_ok, "epgselection.infobar_ok", okMap)
+		upgrade(config.epgselection.infobar.btn_oklong, "epgselection.infobar_oklong", okMap)
+		upgrade(config.epgselection.infobar.itemsperpage, "epgselection.infobar_itemsperpage")
+		upgrade(config.epgselection.infobar.roundto, "epgselection.infobar_roundto")
+		upgrade(config.epgselection.infobar.prevtimeperiod, "epgselection.infobar_prevtimeperiod")
+		upgrade(config.epgselection.infobar.primetime, "epgselection.infobar_primetimehour", mapper = lambda v: v + ":00")
+		upgrade(config.epgselection.infobar.servicetitle_mode, "epgselection.infobar_servicetitle_mode", {"servicenumber+picon":"picon+servicenumber", "servicenumber+picon+servicename": "picon+servicenumber+servicename"})
+		upgrade(config.epgselection.infobar.servfs, "epgselection.infobar_servfs")
+		upgrade(config.epgselection.infobar.eventfs, "epgselection.infobar_eventfs")
+		upgrade(config.epgselection.infobar.timelinefs, "epgselection.infobar_timelinefs")
+		upgrade(config.epgselection.infobar.timeline24h, "epgselection.infobar_timeline24h")
+		upgrade(config.epgselection.infobar.servicewidth, "epgselection.infobar_servicewidth")
+		upgrade(config.epgselection.infobar.piconwidth, "epgselection.infobar_piconwidth")
+		upgrade(config.epgselection.infobar.infowidth, "epgselection.infobar_infowidth")
+
+		upgrade(config.epgselection.single.preview_mode, "epgselection.enhanced_preview_mode")
+		upgrade(config.epgselection.single.btn_ok, "epgselection.enhanced_ok", okMap)
+		upgrade(config.epgselection.single.btn_oklong, "epgselection.enhanced_oklong", okMap)
+		upgrade(config.epgselection.single.eventfs, "epgselection.enhanced_eventfs")
+		upgrade(config.epgselection.single.itemsperpage, "epgselection.enhanced_itemsperpage")
+
+		upgrade(config.epgselection.multi.showbouquet, "epgselection.multi_showbouquet")
+		upgrade(config.epgselection.multi.preview_mode, "epgselection.multi_preview_mode")
+		upgrade(config.epgselection.multi.btn_ok, "epgselection.multi_ok", okMap)
+		upgrade(config.epgselection.multi.btn_oklong, "epgselection.multi_oklong", okMap)
+		upgrade(config.epgselection.multi.eventfs, "epgselection.multi_eventfs")
+		upgrade(config.epgselection.multi.itemsperpage, "epgselection.multi_itemsperpage")
+
+		upgrade(config.epgselection.grid.showbouquet, "epgselection.graph_showbouquet")
+		upgrade(config.epgselection.grid.browse_mode, "epgselection.graph_channel1", {"True":"firstservice", "False":"currentservice"})
+		upgrade(config.epgselection.grid.preview_mode, "epgselection.graph_preview_mode")
+		upgrade(config.epgselection.grid.type_mode, "epgselection.graph_type_mode")
+		upgrade(config.epgselection.grid.highlight_current_events, "epgselection.graph_highlight_current_events")
+		upgrade(config.epgselection.grid.btn_ok, "epgselection.graph_ok", okMap)
+		upgrade(config.epgselection.grid.btn_oklong, "epgselection.graph_oklong", okMap)
+		upgrade(config.epgselection.grid.btn_info, "epgselection.graph_info", infoMap)
+		upgrade(config.epgselection.grid.btn_infolong, "epgselection.graph_infolong", infoMap)
+		upgrade(config.epgselection.grid.roundto, "epgselection.graph_roundto")
+		upgrade(config.epgselection.grid.prevtimeperiod, "epgselection.graph_prevtimeperiod")
+		upgrade(config.epgselection.grid.primetime, "epgselection.graph_primetimehour", mapper = lambda v: v + ":00")
+		upgrade(config.epgselection.grid.servicetitle_mode, "epgselection.graph_servicetitle_mode", {"servicenumber+picon":"picon+servicenumber", "servicenumber+picon+servicename": "picon+servicenumber+servicename"})
+		upgrade(config.epgselection.grid.servicename_alignment, "epgselection.graph_servicename_alignment")
+		upgrade(config.epgselection.grid.servicenumber_alignment, "epgselection.graph_servicenumber_alignment")
+		upgrade(config.epgselection.grid.event_alignment, "epgselection.graph_event_alignment")
+		upgrade(config.epgselection.grid.timelinedate_alignment, "epgselection.graph_timelinedate_alignment")
+		upgrade(config.epgselection.grid.servfs, "epgselection.graph_servfs")
+		upgrade(config.epgselection.grid.eventfs, "epgselection.graph_eventfs")
+		upgrade(config.epgselection.grid.timelinefs, "epgselection.graph_timelinefs")
+		upgrade(config.epgselection.grid.timeline24h, "epgselection.graph_timeline24h")
+		upgrade(config.epgselection.grid.itemsperpage, "epgselection.graph_itemsperpage")
+		upgrade(config.epgselection.grid.pig, "epgselection.graph_pig")
+		upgrade(config.epgselection.grid.servicewidth, "epgselection.graph_servicewidth")
+		upgrade(config.epgselection.grid.piconwidth, "epgselection.graph_piconwidth")
+		upgrade(config.epgselection.grid.infowidth, "epgselection.graph_infowidth")
+		upgrade(config.epgselection.grid.rec_icon_height, "epgselection.graph_rec_icon_height")
+		for (key, item) in config.misc.ButtonSetup.content.items.items():
+			if item.value == "Infobar/openGraphEPG":
+				item.value = "Infobar/openGridEPG"
+				item.save()
+		config.version.value = "53023"
+		config.version.save()
diff --git a/lib/python/Components/config.py b/lib/python/Components/config.py
index 814bf8b..6cf49b4 100644
--- a/lib/python/Components/config.py
+++ b/lib/python/Components/config.py
@@ -341,6 +341,7 @@ class ConfigSelection(ConfigElement):
 		self.graphic = graphic
 
 	def setChoices(self, choices, default=None):
+		value = self.value
 		self.choices = choicesList(choices)
 
 		if default is None:
@@ -349,6 +350,8 @@ class ConfigSelection(ConfigElement):
 
 		if self.value not in self.choices:
 			self.value = default
+		if self.value != value:
+			self.changed()
 
 	def setValue(self, value):
 		if value in self.choices:
diff --git a/lib/python/Plugins/Extensions/TuxboxPlugins/plugin.py b/lib/python/Plugins/Extensions/TuxboxPlugins/plugin.py
index 083877a..28a9406 100644
--- a/lib/python/Plugins/Extensions/TuxboxPlugins/plugin.py
+++ b/lib/python/Plugins/Extensions/TuxboxPlugins/plugin.py
@@ -1,12 +1,12 @@
 # must be fixed for the new plugin interface
 from Tools.BoundFunction import boundFunction
-from Tools.Directories import pathExists
+from Tools.Directories import pathExists, resolveFilename, SCOPE_LIBDIR
 from Plugins.Plugin import PluginDescriptor
 from pluginrunner import PluginRunner
 
 from os import listdir
 
-TUXBOX_PLUGINS_PATH = "/usr/lib/tuxbox/plugins/"
+TUXBOX_PLUGINS_PATH = resolveFilename(SCOPE_LIBDIR, "tuxbox/plugins/")
 
 def getPlugins():
 	pluginlist = []
diff --git a/lib/python/Plugins/SystemPlugins/CommonInterfaceAssignment/plugin.py b/lib/python/Plugins/SystemPlugins/CommonInterfaceAssignment/plugin.py
index a485da1..da867c9 100644
--- a/lib/python/Plugins/SystemPlugins/CommonInterfaceAssignment/plugin.py
+++ b/lib/python/Plugins/SystemPlugins/CommonInterfaceAssignment/plugin.py
@@ -210,17 +210,31 @@ class CIconfigMenu(Screen):
 		self.setServiceListInfo()
 
 	def finishedChannelSelection(self, *args):
-		if len(args):
-			ref = args[0]
-			service_ref = ServiceReference(ref)
-			service_name = service_ref.getServiceName()
-			if find_in_list(self.servicelist, service_name, 0) == False:
-				str_service = service_ref.ref.toString()
-				split_ref = str_service.split(":")
-				if split_ref[0] == "1" and not str_service.startswith("1:134:") and "%3a//" not in str_service:
-					self.servicelist.append((service_name, ConfigNothing(), 0, str_service))
-					self["ServiceList"].l.setList(self.servicelist)
-					self.setServiceListInfo()
+		item = len(args)
+		if item > 0:
+			if item > 2 and args[2] is True:
+				for ref in args[0]:
+					service_ref = ServiceReference(ref)
+					service_name = service_ref.getServiceName()
+					if len(service_name) and find_in_list(self.servicelist, service_name, 0) == False:
+						str_service = service_ref.ref.toString()
+						split_ref = str_service.split(":")
+						if split_ref[0] == "1" and not str_service.startswith("1:134:") and "%3a//" not in str_service:
+							self.servicelist.append((service_name, ConfigNothing(), 0, str_service))
+				self["ServiceList"].l.setList(self.servicelist)
+				self.setServiceListInfo()
+			else:
+				ref = args[0]
+				if ref:
+					service_ref = ServiceReference(ref)
+					service_name = service_ref.getServiceName()
+					if find_in_list(self.servicelist, service_name, 0) == False:
+						str_service = service_ref.ref.toString()
+						split_ref = str_service.split(":")
+						if split_ref[0] == "1" and not str_service.startswith("1:134:") and "%3a//" not in str_service:
+							self.servicelist.append((service_name, ConfigNothing(), 0, str_service))
+							self["ServiceList"].l.setList(self.servicelist)
+							self.setServiceListInfo()
 
 	def finishedProviderSelection(self, *args):
 		item = len(args)
@@ -590,9 +604,46 @@ class myChannelSelection(ChannelSelectionBase):
 	def __onExecCallback(self):
 		self.setModeTv()
 		self.setTitle(_("Select service to add..."))
+		self.isFavourites()
+
+	def isFavourites(self):
+		ref = self.getCurrentSelection()
+		if ref:
+			if (ref.flags & 7) == 7 and "FROM BOUQUET" in ref.toString():
+				self["key_yellow"].setText(_("Add bouquet"))
+				return True
+			else:
+				self["key_yellow"].setText("")
+		return False
+
+	def showFavourites(self):
+		ChannelSelectionBase.showFavourites(self)
+		self.isFavourites()
 
 	def showProviders(self):
-		pass
+		if self.isFavourites():
+			self.session.openWithCallback(self.addAllBouquet, MessageBox, _("Add services to this bouquet?"), MessageBox.TYPE_YESNO)
+
+	def addAllBouquet(self, answer):
+		ref = self.getCurrentSelection()
+		if answer and ref:
+			serviceHandler = eServiceCenter.getInstance()
+			servicelist = serviceHandler.list(ref)
+			if not servicelist is None:
+				providerlist = []
+				while True:
+					service = servicelist.getNext()
+					if not service.valid():
+						break
+					providerlist.append((service))
+				if providerlist:
+					self.close(providerlist, None, True)
+				else:
+					self.close(None)
+
+	def showAllServices(self):
+		ChannelSelectionBase.showAllServices(self)
+		self.isFavourites()
 
 	def showSatellites(self, changeMode=False):
 		if changeMode:
@@ -602,6 +653,7 @@ class myChannelSelection(ChannelSelectionBase):
 		ref = self.getCurrentSelection()
 		if (ref.flags & 7) == 7:
 			self.enterPath(ref)
+			self.isFavourites()
 		elif not (ref.flags & eServiceReference.isMarker):
 			ref = self.getCurrentSelection()
 			self.close(ref)
diff --git a/lib/python/Plugins/SystemPlugins/Hotplug/plugin.py b/lib/python/Plugins/SystemPlugins/Hotplug/plugin.py
index 25f0fdc..0e980a9 100644
--- a/lib/python/Plugins/SystemPlugins/Hotplug/plugin.py
+++ b/lib/python/Plugins/SystemPlugins/Hotplug/plugin.py
@@ -1,70 +1,95 @@
-from Plugins.Plugin import PluginDescriptor
-from Components.Harddisk import harddiskmanager
+import os
+
+from twisted.internet import reactor
 from twisted.internet.protocol import Protocol, Factory
 
+from Components.Harddisk import harddiskmanager
+from Plugins.Plugin import PluginDescriptor
+
 hotplugNotifier = []
+audioCd = False
 
-def processHotplugData(self, v):
-	print "[Hotplug] hotplug:", v
-	action = v.get("ACTION")
-	device = v.get("DEVPATH")
-	physdevpath = v.get("PHYSDEVPATH")
-	media_state = v.get("X_E2_MEDIA_STATUS")
+def AudiocdAdded():
+	global audioCd
+	return True if audioCd else False
 
-	dev = device.split('/')[-1]
+def processHotplugData(self, eventData):
+	print "[Hotplug] DEBUG:", eventData
+	action = eventData.get("ACTION")
+	device = eventData.get("DEVPATH")
+	physDevPath = eventData.get("PHYSDEVPATH")
+	mediaState = eventData.get("X_E2_MEDIA_STATUS")
+	global audioCd
 
+	dev = device.split("/")[-1]
+	print "[Hotplug] DEBUG: device = %s action = %s mediaState = %s physDevPath = %s dev = %s" % (device, action, mediaState, physDevPath, dev)
 	if action == "add":
-		error, blacklisted, removable, is_cdrom, partitions, medium_found = harddiskmanager.addHotplugPartition(dev, physdevpath)
+		error, blacklisted, removable, is_cdrom, partitions, medium_found = harddiskmanager.addHotplugPartition(dev, physDevPath)
 	elif action == "remove":
 		harddiskmanager.removeHotplugPartition(dev)
-	elif media_state is not None:
-		if media_state == '1':
+	elif action == "audiocdadd":
+		audioCd = True
+		mediaState = "audiocd"
+		error, blacklisted, removable, is_cdrom, partitions, medium_found = harddiskmanager.addHotplugPartition(dev, physDevPath)
+		print "[Hotplug] Adding Audio CD."
+	elif action == "audiocdremove":
+		audioCd = False
+		# Removing the invalid playlist.e2pls if its still the audio cd's list.
+		# Default setting is to save last playlist on closing Mediaplayer. If
+		# audio cd is removed after Mediaplayer was closed, the playlist
+		# remains in if no other media was played.
+		try:
+			with open("/etc/enigma2/playlist.e2pls", "r") as fd:
+				file = f.readline().strip()
+		except (IOError, OSError):
+			file = None
+		if file and ".cda" in file:
+			try:
+				os.remove("/etc/enigma2/playlist.e2pls")
+			except (IOError, OSError):
+				pass
+		harddiskmanager.removeHotplugPartition(dev)
+		print "[Hotplug] Removing Audio CD."
+	elif mediaState is not None:
+		if mediaState == "1":
 			harddiskmanager.removeHotplugPartition(dev)
-			harddiskmanager.addHotplugPartition(dev, physdevpath)
-		elif media_state == '0':
+			harddiskmanager.addHotplugPartition(dev, physDevPath)
+		elif mediaState == "0":
 			harddiskmanager.removeHotplugPartition(dev)
-
 	for callback in hotplugNotifier:
 		try:
-			callback(dev, action or media_state)
+			callback(dev, action or mediaState)
 		except AttributeError:
 			hotplugNotifier.remove(callback)
 
 class Hotplug(Protocol):
-	def __init__(self):
-		pass
-
 	def connectionMade(self):
-		print "[Hotplug] HOTPLUG connection!"
+		print "[Hotplug] Connection made."
 		self.received = ""
 
 	def dataReceived(self, data):
-		print "[Hotplug] hotplug:", data
 		self.received += data
-		print "[Hotplug] complete", self.received
+		print "[Hotplug] Data received: '%s'." % ", ".join(self.received.split("\0")[:-1])
 
 	def connectionLost(self, reason):
-		print "[Hotplug] HOTPLUG connection lost!"
-		data = self.received.split('\0')[:-1]
-		v = {}
-		for x in data:
-			i = x.find('=')
-			var, val = x[:i], x[i+1:]
-			v[var] = val
-		processHotplugData(self, v)
+		print "[Hotplug] Connection lost."
+		eventData = {}
+		for item in self.received.split("\0")[:-1]:
+			index = item.find("=")
+			var, val = item[:index], item[index + 1:]
+			eventData[var] = val
+		print "[Hotplug] Calling processHotplugData, reason = %s eventData = %s." % (reason, eventData)
+		processHotplugData(self, eventData)
 
 def autostart(reason, **kwargs):
 	if reason == 0:
-		print "[Hotplug] starting hotplug handler"
-		from twisted.internet import reactor
-		import os
 		try:
 			os.remove("/tmp/hotplug.socket")
-		except OSError:
+		except (IOError, OSError):
 			pass
 		factory = Factory()
 		factory.protocol = Hotplug
 		reactor.listenUNIX("/tmp/hotplug.socket", factory)
 
 def Plugins(**kwargs):
-	return PluginDescriptor(name = "Hotplug", description = "listens to hotplug events", where = PluginDescriptor.WHERE_AUTOSTART, needsRestart = True, fnc = autostart)
+	return PluginDescriptor(name=_("Hotplug"), description=_("Listener for hotplug events."), where=[PluginDescriptor.WHERE_AUTOSTART], needsRestart=True, fnc=autostart)
diff --git a/lib/python/Plugins/SystemPlugins/PositionerSetup/plugin.py b/lib/python/Plugins/SystemPlugins/PositionerSetup/plugin.py
index be13056..c2d4cff 100644
--- a/lib/python/Plugins/SystemPlugins/PositionerSetup/plugin.py
+++ b/lib/python/Plugins/SystemPlugins/PositionerSetup/plugin.py
@@ -1224,7 +1224,7 @@ class PositionerSetupLog(Screen):
 		self.session = session
 		Screen.__init__(self, session)
 		self.setTitle(_("Positioner setup log"))
-		self["key_red"] = Button(_("Exit/OK"))
+		self["key_red"] = Button(_("Exit"))
 		self["key_green"] = Button(_("Save"))
 		self["key_blue"] = Button(_("Clear"))
 		self["list"] = ScrollLabel(log.getvalue())
diff --git a/lib/python/Plugins/SystemPlugins/SatelliteEquipmentControl/plugin.py b/lib/python/Plugins/SystemPlugins/SatelliteEquipmentControl/plugin.py
index e8309db..689d281 100644
--- a/lib/python/Plugins/SystemPlugins/SatelliteEquipmentControl/plugin.py
+++ b/lib/python/Plugins/SystemPlugins/SatelliteEquipmentControl/plugin.py
@@ -4,16 +4,18 @@ from Plugins.Plugin import PluginDescriptor
 
 from Components.ConfigList import ConfigListScreen
 from Components.ActionMap import ActionMap
-from Components.Sources.StaticText import StaticText
 from Components.config import config
 from Components.NimManager import nimmanager as nimmgr
+from Components.Sources.StaticText import StaticText
 
 class SecParameterSetup(Screen, ConfigListScreen):
 	def __init__(self, session):
 		Screen.__init__(self, session)
-		self.setTitle(_("Satellite equipment control"))
-
 		self.skinName = ["SecParameterSetup", "Setup"]
+		self.setTitle(_("Satellite equipment setup"))
+		self["key_red"] = StaticText(_("Cancel"))
+		self["key_green"] = StaticText(_("OK"))
+		self["key_blue"] = StaticText(_("Restore defaults"))
 
 		self["actions"] = ActionMap(["SetupActions", "MenuActions", "ColorActions"],
 		{
@@ -21,13 +23,11 @@ class SecParameterSetup(Screen, ConfigListScreen):
 			"green": self.keySave,
 			"cancel": self.keyCancel,
 			"red": self.keyCancel,
+			"blue": self.resetDefaults,
 			"menu": self.closeRecursive,
 		}, -2)
 
-		self["key_red"] = StaticText(_("Exit"))
-		self["key_green"] = StaticText(_("Save and exit"))
-
-		list = [
+		self.secList = [
 			(_("Delay after diseqc reset command"), config.sec.delay_after_diseqc_reset_cmd),
 			(_("Delay after diseqc peripherial poweron command"), config.sec.delay_after_diseqc_peripherial_poweron_cmd),
 			(_("Delay after continuous tone disable before diseqc"), config.sec.delay_after_continuous_tone_disable_before_diseqc),
@@ -49,36 +49,38 @@ class SecParameterSetup(Screen, ConfigListScreen):
 			(_("Unicable delay after enable voltage before switch command"), config.sec.unicable_delay_after_enable_voltage_before_switch_command),
 			(_("Unicable delay after change voltage before switch command"), config.sec.unicable_delay_after_change_voltage_before_switch_command),
 			(_("Unicable delay after last diseqc command"), config.sec.unicable_delay_after_last_diseqc_command) ]
-		ConfigListScreen.__init__(self, list)
+		ConfigListScreen.__init__(self, [])
+		self.createSetup()
 
-session = None
+	def createSetup(self):
+		self["config"].list = self.secList
+		self["config"].l.setList(self.secList)
 
-def confirmed(answer):
-	global session
-	if answer:
-		session.open(SecParameterSetup)
+	def resetDefaults(self):
+		for secItem in self.secList:
+			secItem[1].value = secItem[1].default
+		self.createSetup() # force new values to show
 
-def SecSetupMain(Session, **kwargs):
-	global session
-	session = Session
+def SecSetupMain(session, **kwargs):
+	def confirmed(answer):
+		if answer is True:
+			session.open(SecParameterSetup)
 	session.openWithCallback(confirmed, MessageBox, _("Please do not change any values unless you know what you are doing!"), MessageBox.TYPE_INFO)
 
 def SecSetupStart(menuid):
-	show = False
-
 	# other menu than "scan"?
 	if menuid != "scan":
-		return [ ]
+		return []
 
 	# only show if DVB-S frontends are available
 	for slot in nimmgr.nim_slots:
 		if slot.isCompatible("DVB-S"):
 			return [(_("Satellite equipment setup"), SecSetupMain, "satellite_equipment_setup", None)]
 
-	return [ ]
+	return []
 
 def Plugins(**kwargs):
 	if nimmgr.hasNimType("DVB-S"):
-		return PluginDescriptor(name=_("Satellite equipment setup"), description=_("Setup your satellite equipment"), where = PluginDescriptor.WHERE_MENU, needsRestart = False, fnc=SecSetupStart)
+		return PluginDescriptor(name=_("Satellite equipment setup"), description=_("Setup your satellite equipment"), where=PluginDescriptor.WHERE_MENU, needsRestart=False, fnc=SecSetupStart)
 	else:
 		return []
diff --git a/lib/python/Plugins/SystemPlugins/Satfinder/plugin.py b/lib/python/Plugins/SystemPlugins/Satfinder/plugin.py
index 38716b1..7274691 100755
--- a/lib/python/Plugins/SystemPlugins/Satfinder/plugin.py
+++ b/lib/python/Plugins/SystemPlugins/Satfinder/plugin.py
@@ -616,7 +616,7 @@ class SatfinderExtra(Satfinder):
 		self.currentProcess = currentProcess = datetime.datetime.now()
 		self["tsid"].setText("")
 		self["onid"].setText("")
-		self["pos"].setText(self.DVB_type.value)
+		self["pos"].setText("") #(self.DVB_type.value)
 		self["key_yellow"].setText("")
 		self["actions2"].setEnabled(False)
 		self.serviceList = []
diff --git a/lib/python/Screens/About.py b/lib/python/Screens/About.py
index e4a8cfa..93ea176 100644
--- a/lib/python/Screens/About.py
+++ b/lib/python/Screens/About.py
@@ -1,24 +1,25 @@
-from Screen import Screen
-from Screens.SoftwareUpdate import UpdatePlugin
-from Screens.GitCommitInfo import CommitInfo
+from os import listdir, path
+from re import search
+from enigma import eTimer, getEnigmaVersionString, getDesktop
+from boxbranding import getMachineBrand, getMachineBuild, getMachineName, getImageVersion, getImageType, getImageBuild, getDriverDate, getImageDevBuild
+from Components.About import about
 from Components.ActionMap import ActionMap
 from Components.Button import Button
-from Components.Sources.StaticText import StaticText
-from Components.Harddisk import Harddisk
-from Components.NimManager import nimmanager
-from Components.About import about
-from Components.ScrollLabel import ScrollLabel
-from Components.Console import Console
 from Components.config import config
-from enigma import eTimer, getEnigmaVersionString, getDesktop
-from boxbranding import getMachineBrand, getMachineName, getImageVersion, getImageType, getImageBuild, getDriverDate, getImageDevBuild
-from Components.Pixmap import MultiPixmap
+from Components.Console import Console
+from Components.Harddisk import harddiskmanager
 from Components.Network import iNetwork
+from Components.NimManager import nimmanager
+from Components.Pixmap import MultiPixmap
+from Components.ScrollLabel import ScrollLabel
+from Components.Sources.StaticText import StaticText
 from Components.SystemInfo import SystemInfo
-from Tools.StbHardware import getFPVersion
+from Screen import Screen
+from Screens.GitCommitInfo import CommitInfo
+from Screens.SoftwareUpdate import UpdatePlugin
+from Tools.Directories import fileExists, fileCheck, pathExists
 from Tools.Multiboot import GetCurrentImage, GetCurrentImageMode
-from os import path
-from re import search
+from Tools.StbHardware import getFPVersion
 import skin
 
 class About(Screen):
@@ -73,8 +74,10 @@ class About(Screen):
 		AboutText += _("Model:\t%s %s\n") % (getMachineBrand(), getMachineName())
 
 		if about.getChipSetString() != _("unavailable"):
-			if about.getIsBroadcom():
-				AboutText += _("Chipset:\tBCM%s\n") % about.getChipSetString().upper()
+			if SystemInfo["HasHiSi"]:
+				AboutText += _("Chipset:\tHiSilicon %s\n") % about.getChipSetString().upper()
+			elif about.getIsBroadcom():
+				AboutText += _("Chipset:\tBroadcom %s\n") % about.getChipSetString().upper()
 			else:
 				AboutText += _("Chipset:\t%s\n") % about.getChipSetString().upper()
 
@@ -84,12 +87,27 @@ class About(Screen):
 			imageSubBuild = ".%s" % getImageDevBuild()
 		AboutText += _("Image:\t%s.%s%s (%s)\n") % (getImageVersion(), getImageBuild(), imageSubBuild, getImageType().title())
 
+		if SystemInfo["HasH9SD"]:
+			if "rootfstype=ext4" in open('/sys/firmware/devicetree/base/chosen/bootargs', 'r').read():
+				part = "        - SD card in use for Image root \n" 
+			else:
+				part = "        - eMMC slot in use for Image root \n"
+			AboutText += _("%s") % part
+
 		if SystemInfo["canMultiBoot"]:
-			image = GetCurrentImage()
+			slot = image= GetCurrentImage()
+			part = "eMMC slot %s" %slot
 			bootmode = ""
 			if SystemInfo["canMode12"]:
-				bootmode = "bootmode = %s" %GetCurrentImageMode()
-			AboutText += _("Image Slot:\t%s") % "STARTUP_" + str(image) + " " + bootmode + "\n"
+				bootmode = "bootmode = %s" %GetCurrentImageMode()		
+			print "[About] HasHiSi = %s, slot = %s" %(SystemInfo["HasHiSi"], slot)
+			if SystemInfo["HasHiSi"] and "sda" in SystemInfo["canMultiBoot"][slot]['root']:
+				if slot > 4:
+					image -=4
+				else:
+					image -=1
+				part = "SDcard slot %s (%s) " %(image, SystemInfo["canMultiBoot"][slot]['root'])
+			AboutText += _("Image Slot:\t%s") % "STARTUP_" + str(slot) + "  " + part + " " + bootmode + "\n"
 
 		skinWidth = getDesktop(0).size().width()
 		skinHeight = getDesktop(0).size().height()
@@ -110,35 +128,35 @@ class About(Screen):
 
 		tempinfo = ""
 		if path.exists('/proc/stb/sensors/temp0/value'):
-			f = open('/proc/stb/sensors/temp0/value', 'r')
-			tempinfo = f.read()
-			f.close()
+			with open('/proc/stb/sensors/temp0/value', 'r') as f:
+				tempinfo = f.read()
 		elif path.exists('/proc/stb/fp/temp_sensor'):
-			f = open('/proc/stb/fp/temp_sensor', 'r')
-			tempinfo = f.read()
-			f.close()
+			with open('/proc/stb/fp/temp_sensor', 'r') as f:
+				tempinfo = f.read()
 		elif path.exists('/proc/stb/sensors/temp/value'):
-			f = open('/proc/stb/sensors/temp/value', 'r')
-			tempinfo = f.read()
-			f.close()
+			with open('/proc/stb/sensors/temp/value', 'r') as f:
+				tempinfo = f.read()
 		if tempinfo and int(tempinfo.replace('\n', '')) > 0:
 			mark = str('\xc2\xb0')
 			AboutText += _("System temp:\t%s") % tempinfo.replace('\n', '').replace(' ','') + mark + "C\n"
 
 		tempinfo = ""
 		if path.exists('/proc/stb/fp/temp_sensor_avs'):
-			f = open('/proc/stb/fp/temp_sensor_avs', 'r')
-			tempinfo = f.read()
-			f.close()
+			with open('/proc/stb/fp/temp_sensor_avs', 'r') as f:
+				tempinfo = f.read()
 		elif path.exists('/sys/devices/virtual/thermal/thermal_zone0/temp'):
 			try:
-				f = open('/sys/devices/virtual/thermal/thermal_zone0/temp', 'r')
-				tempinfo = f.read()
-				tempinfo = tempinfo[:-4]
-				f.close()
+				with open('/sys/devices/virtual/thermal/thermal_zone0/temp', 'r') as f:
+					tempinfo = f.read()
+					tempinfo = tempinfo[:-4]
 			except:
 				tempinfo = ""
-		if tempinfo and int(tempinfo.replace('\n', '')) > 0:
+		elif path.exists('/proc/hisi/msp/pm_cpu'):
+			try:
+				tempinfo = search('temperature = (\d+) degree', open("/proc/hisi/msp/pm_cpu").read()).group(1)
+			except:
+				tempinfo = ""
+		if tempinfo and int(tempinfo) > 0:
 			mark = str('\xc2\xb0')
 			AboutText += _("Processor temp:\t%s") % tempinfo.replace('\n', '').replace(' ','') + mark + "C\n"
 		AboutLcdText = AboutText.replace('\t', ' ')
@@ -162,18 +180,17 @@ class About(Screen):
 	def dualBoot(self):
 		rootfs2 = False
 		kernel2 = False
-		f = open("/proc/mtd")
-		self.dualbootL = f.readlines()
-		for x in self.dualbootL:
-			if 'rootfs2' in x:
-				rootfs2 = True
-			if 'kernel2' in x:
-				kernel2 = True
-		f.close()
-		if rootfs2 and kernel2:
-			return True
-		else:
-			return False		
+		with open("/proc/mtd") as f:
+			self.dualbootL = f.readlines()
+			for x in self.dualbootL:
+				if 'rootfs2' in x:
+					rootfs2 = True
+				if 'kernel2' in x:
+					kernel2 = True
+			if rootfs2 and kernel2:
+				return True
+			else:
+				return False
 
 	def showTranslationInfo(self):
 		self.session.open(TranslationInfo, self.menu_path)
@@ -277,54 +294,28 @@ class Devices(Screen):
 
 				self["Tuner" + str(count)].setText(text)
 
+		self.hddlist = harddiskmanager.HDDList()
 		self.list = []
-		list2 = []
-		f = open('/proc/partitions', 'r')
-		for line in f.readlines():
-			parts = line.strip().split()
-			if not parts:
-				continue
-			device = parts[3]
-			if not search('sd[a-z][1-9]', device):
-				continue
-			if device in list2:
-				continue
-
-			mount = '/dev/' + device
-			f = open('/proc/mounts', 'r')
-			for line in f.readlines():
-				if device in line:
-					parts = line.strip().split()
-					mount = str(parts[1])
-					break
-			f.close()
-
-			if not mount.startswith('/dev/'):
-				size = Harddisk(device).diskSize()
-				free = Harddisk(device).free()
-
-				if ((float(size) / 1024) / 1024) >= 1:
-					sizeline = _("Size: ") + str(round(((float(size) / 1024) / 1024), 2)) + _("TB")
-				elif (size / 1024) >= 1:
-					sizeline = _("Size: ") + str(round((float(size) / 1024), 2)) + _("GB")
-				elif size >= 1:
-					sizeline = _("Size: ") + str(size) + _("MB")
-				else:
-					sizeline = _("Size: ") + _("unavailable")
-
+		if self.hddlist:
+			for count in range(len(self.hddlist)):
+				hdd = self.hddlist[count][1]
+				hddp = self.hddlist[count][0]
+				if "ATA" in hddp:
+					hddp = hddp.replace('ATA', '')
+					hddp = hddp.replace('Internal', 'ATA Bus ')
+				free = hdd.Totalfree()
 				if ((float(free) / 1024) / 1024) >= 1:
 					freeline = _("Free: ") + str(round(((float(free) / 1024) / 1024), 2)) + _("TB")
 				elif (free / 1024) >= 1:
 					freeline = _("Free: ") + str(round((float(free) / 1024), 2)) + _("GB")
 				elif free >= 1:
 					freeline = _("Free: ") + str(free) + _("MB")
+				elif "Generic(STORAGE" in hddp:				# This is the SDA boot volume for SF8008 if "full" #
+					continue
 				else:
 					freeline = _("Free: ") + _("full")
-				self.list.append(mount + '\t' + sizeline + ' \t' + freeline)
-			else:
-				self.list.append(mount + '\t' + _('Not mounted'))
-
-			list2.append(device)
+				line = "%s      %s" %(hddp, freeline)
+				self.list.append(line)
 		self.list = '\n'.join(self.list)
 		self["hdd"].setText(self.list)
 
@@ -343,7 +334,10 @@ class Devices(Screen):
 				if self.mountinfo:
 					self.mountinfo += "\n"
 				self.mountinfo += "%s (%sB, %sB %s)" % (ipaddress, mounttotal, mountfree, _("free"))
-
+		if pathExists("/media/autofs"):
+			for entry in sorted(listdir("/media/autofs")):
+				mountEntry = path.join("/media/autofs", entry)
+				self.mountinfo += _("\n %s is also enabled for autofs network mount" % (mountEntry))
 		if self.mountinfo:
 			self["mounts"].setText(self.mountinfo)
 		else:
@@ -569,57 +563,84 @@ class SystemNetworkInfo(Screen):
 
 	def getInfoCB(self, data, status):
 		self.LinkState = None
-		if data is not None:
-			if data is True:
-				if status is not None:
-					if self.iface == 'wlan0' or self.iface == 'wlan3' or self.iface == 'ra0':
-						if status[self.iface]["essid"] == "off":
-							essid = _("No connection")
-						else:
-							essid = status[self.iface]["essid"]
+		if data is not None and data:
+			if status is not None:
+# getDataForInterface()->iwconfigFinished() in
+# Plugins/SystemPlugins/WirelessLan/Wlan.py sets fields to boolean False
+# if there is no info for them, so we need to check that possibility
+# for each status[self.iface] field...
+#
+				if self.iface == 'wlan0' or self.iface == 'wlan3' or self.iface == 'ra0':
+# accesspoint is used in the "enc" code too, so we get it regardless
+#
+					if not status[self.iface]["accesspoint"]:
+						accesspoint = _("Unknown")
+					else:
 						if status[self.iface]["accesspoint"] == "Not-Associated":
 							accesspoint = _("Not-Associated")
 							essid = _("No connection")
 						else:
 							accesspoint = status[self.iface]["accesspoint"]
-						if self.has_key("BSSID"):
-							self.AboutText += _('Accesspoint:') + '\t' + accesspoint + '\n'
-						if self.has_key("ESSID"):
-							self.AboutText += _('SSID:') + '\t' + essid + '\n'
+					if self.has_key("BSSID"):
+						self.AboutText += _('Accesspoint:') + '\t' + accesspoint + '\n'
 
-						quality = status[self.iface]["quality"]
-						if self.has_key("quality"):
-							self.AboutText += _('Link quality:') + '\t' + quality + '\n'
-
-						if status[self.iface]["bitrate"] == '0':
-							bitrate = _("Unsupported")
+					if self.has_key("ESSID"):
+						if not status[self.iface]["essid"]:
+							essid = _("Unknown")
 						else:
-							bitrate = str(status[self.iface]["bitrate"]) + " Mb/s"
-						if self.has_key("bitrate"):
-							self.AboutText += _('Bitrate:') + '\t' + bitrate + '\n'
+							if status[self.iface]["essid"] == "off":
+								essid = _("No connection")
+							else:
+								essid = status[self.iface]["essid"]
+						self.AboutText += _('SSID:') + '\t' + essid + '\n'
 
-						signal = status[self.iface]["signal"]
-						if self.has_key("signal"):
-							self.AboutText += _('Signal strength:') + '\t' + signal + '\n'
+					if self.has_key("quality"):
+						if not status[self.iface]["quality"]:
+							quality = _("Unknown")
+						else:
+							quality = status[self.iface]["quality"]
+						self.AboutText += _('Link quality:') + '\t' + quality + '\n'
 
-						if status[self.iface]["encryption"] == "off":
-							if accesspoint == "Not-Associated":
-								encryption = _("Disabled")
+					if self.has_key("bitrate"):
+						if not status[self.iface]["bitrate"]:
+							bitrate = _("Unknown")
+						else:
+							if status[self.iface]["bitrate"] == '0':
+								bitrate = _("Unsupported")
 							else:
-								encryption = _("Unsupported")
+								bitrate = str(status[self.iface]["bitrate"]) + " Mb/s"
+						self.AboutText += _('Bitrate:') + '\t' + bitrate + '\n'
+
+					if self.has_key("signal"):
+						if not status[self.iface]["signal"]:
+							signal = _("Unknown")
 						else:
-							encryption = _("Enabled")
-						if self.has_key("enc"):
-							self.AboutText += _('Encryption:') + '\t' + encryption + '\n'
-
-						if status[self.iface]["essid"] == "off" or status[self.iface]["accesspoint"] == "Not-Associated" or status[self.iface]["accesspoint"] is False:
-							self.LinkState = False
-							self["statuspic"].setPixmapNum(1)
-							self["statuspic"].show()
+							signal = status[self.iface]["signal"]
+						self.AboutText += _('Signal strength:') + '\t' + signal + '\n'
+
+					if self.has_key("enc"):
+						if not status[self.iface]["encryption"]:
+							encryption = _("Unknown")
 						else:
-							self.LinkState = True
-							iNetwork.checkNetworkState(self.checkNetworkCB)
-						self["AboutScrollLabel"].setText(self.AboutText)
+							if status[self.iface]["encryption"] == "off":
+								if accesspoint == "Not-Associated":
+									encryption = _("Disabled")
+								else:
+									encryption = _("Unsupported")
+							else:
+								encryption = _("Enabled")
+						self.AboutText += _('Encryption:') + '\t' + encryption + '\n'
+
+					if ((status[self.iface]["essid"] and status[self.iface]["essid"] == "off") or
+					    not status[self.iface]["accesspoint"] or
+					    status[self.iface]["accesspoint"] == "Not-Associated"):
+						self.LinkState = False
+						self["statuspic"].setPixmapNum(1)
+						self["statuspic"].show()
+					else:
+						self.LinkState = True
+						iNetwork.checkNetworkState(self.checkNetworkCB)
+					self["AboutScrollLabel"].setText(self.AboutText)
 
 	def exit(self):
 		self.close(True)
@@ -700,9 +721,14 @@ class AboutSummary(Screen):
 
 		tempinfo = ""
 		if path.exists('/proc/stb/sensors/temp0/value'):
-			tempinfo = open('/proc/stb/sensors/temp0/value', 'r').read()
+			with open('/proc/stb/sensors/temp0/value', 'r') as f:
+				tempinfo = f.read()
 		elif path.exists('/proc/stb/fp/temp_sensor'):
-			tempinfo = open('/proc/stb/fp/temp_sensor', 'r').read()
+			with open('/proc/stb/fp/temp_sensor', 'r') as f:
+				tempinfo = f.read()
+		elif path.exists('/proc/stb/sensors/temp/value'):
+			with open('/proc/stb/sensors/temp/value', 'r') as f:
+				tempinfo = f.read()
 		if tempinfo and int(tempinfo.replace('\n', '')) > 0:
 			mark = str('\xc2\xb0')
 			AboutText += _("System temperature: %s") % tempinfo.replace('\n', '') + mark + "C\n\n"
diff --git a/lib/python/Screens/AutoDiseqc.py b/lib/python/Screens/AutoDiseqc.py
index 30cfa0b..1bd76fa 100644
--- a/lib/python/Screens/AutoDiseqc.py
+++ b/lib/python/Screens/AutoDiseqc.py
@@ -14,8 +14,8 @@ class AutoDiseqc(Screen, ConfigListScreen):
 	]
 
 	sat_frequencies = [
-		# astra 282 EPG Background Radio
-		( 
+		# Astra 28.2E EPG background audio
+		(
 			11778,
 			27500,
 			eDVBFrontendParametersSatellite.Polarisation_Vertical,
@@ -27,7 +27,7 @@ class AutoDiseqc(Screen, ConfigListScreen):
 			eDVBFrontendParametersSatellite.RollOff_auto,
 			eDVBFrontendParametersSatellite.Pilot_Unknown,
 			eDVBFrontendParametersSatellite.No_Stream_Id_Filter,
-			eDVBFrontendParametersSatellite.PLS_Gold, 
+			eDVBFrontendParametersSatellite.PLS_Gold,
 			eDVBFrontendParametersSatellite.PLS_Default_Gold_Code,
 			eDVBFrontendParametersSatellite.No_T2MI_PLP_Id,
 			eDVBFrontendParametersSatellite.T2MI_Default_Pid,
@@ -35,8 +35,8 @@ class AutoDiseqc(Screen, ConfigListScreen):
 			2,
 			"Astra 2 28.2e"),
 
-		# astra 235 astra ses
-		( 
+		# Astra 23.5E Astra SES
+		(
 			12168,
 			27500,
 			eDVBFrontendParametersSatellite.Polarisation_Vertical,
@@ -48,7 +48,7 @@ class AutoDiseqc(Screen, ConfigListScreen):
 			eDVBFrontendParametersSatellite.RollOff_auto,
 			eDVBFrontendParametersSatellite.Pilot_Unknown,
 			eDVBFrontendParametersSatellite.No_Stream_Id_Filter,
-			eDVBFrontendParametersSatellite.PLS_Gold, 
+			eDVBFrontendParametersSatellite.PLS_Gold,
 			eDVBFrontendParametersSatellite.PLS_Default_Gold_Code,
 			eDVBFrontendParametersSatellite.No_T2MI_PLP_Id,
 			eDVBFrontendParametersSatellite.T2MI_Default_Pid,
@@ -56,8 +56,8 @@ class AutoDiseqc(Screen, ConfigListScreen):
 			3,
 			"Astra 3 23.5e"),
 
-		# astra 192 zdf
-		( 
+		# Astra 19.2E ZDF
+		(
 			11953,
 			27500,
 			eDVBFrontendParametersSatellite.Polarisation_Horizontal,
@@ -69,7 +69,7 @@ class AutoDiseqc(Screen, ConfigListScreen):
 			eDVBFrontendParametersSatellite.RollOff_auto,
 			eDVBFrontendParametersSatellite.Pilot_Unknown,
 			eDVBFrontendParametersSatellite.No_Stream_Id_Filter,
-			eDVBFrontendParametersSatellite.PLS_Gold, 
+			eDVBFrontendParametersSatellite.PLS_Gold,
 			eDVBFrontendParametersSatellite.PLS_Default_Gold_Code,
 			eDVBFrontendParametersSatellite.No_T2MI_PLP_Id,
 			eDVBFrontendParametersSatellite.T2MI_Default_Pid,
@@ -77,7 +77,7 @@ class AutoDiseqc(Screen, ConfigListScreen):
 			1,
 			"Astra 1 19.2e"),
 
-		# hotbird 130 rai
+		# Hotbird 13.0E Rai 1
 		(
 			10992,
 			27500,
@@ -90,7 +90,7 @@ class AutoDiseqc(Screen, ConfigListScreen):
 			eDVBFrontendParametersSatellite.RollOff_auto,
 			eDVBFrontendParametersSatellite.Pilot_Unknown,
 			eDVBFrontendParametersSatellite.No_Stream_Id_Filter,
-			eDVBFrontendParametersSatellite.PLS_Gold, 
+			eDVBFrontendParametersSatellite.PLS_Gold,
 			eDVBFrontendParametersSatellite.PLS_Default_Gold_Code,
 			eDVBFrontendParametersSatellite.No_T2MI_PLP_Id,
 			eDVBFrontendParametersSatellite.T2MI_Default_Pid,
@@ -98,9 +98,30 @@ class AutoDiseqc(Screen, ConfigListScreen):
 			318,
 			"Hotbird 13.0e"),
 
-		# thor  3592 CT24
+		# Eutelsat 9.0E CCTV Europe
+		(
+			11996,
+			27500,
+			eDVBFrontendParametersSatellite.Polarisation_Vertical,
+			eDVBFrontendParametersSatellite.FEC_3_4,
+			eDVBFrontendParametersSatellite.Inversion_Off,
+			90,
+			eDVBFrontendParametersSatellite.System_DVB_S,
+			eDVBFrontendParametersSatellite.Modulation_Auto,
+			eDVBFrontendParametersSatellite.RollOff_auto,
+			eDVBFrontendParametersSatellite.Pilot_Unknown,
+			eDVBFrontendParametersSatellite.No_Stream_Id_Filter,
+			eDVBFrontendParametersSatellite.PLS_Gold,
+			eDVBFrontendParametersSatellite.PLS_Default_Gold_Code,
+			eDVBFrontendParametersSatellite.No_T2MI_PLP_Id,
+			eDVBFrontendParametersSatellite.T2MI_Default_Pid,
+			6400,
+			156,
+			"Eutelsat 9B 9.0e"),
+
+		# Thor 0.8W Sky News
 		(
-			12072,
+			12418,
 			28000,
 			eDVBFrontendParametersSatellite.Polarisation_Vertical,
 			eDVBFrontendParametersSatellite.FEC_7_8,
@@ -111,13 +132,78 @@ class AutoDiseqc(Screen, ConfigListScreen):
 			eDVBFrontendParametersSatellite.RollOff_auto,
 			eDVBFrontendParametersSatellite.Pilot_Unknown,
 			eDVBFrontendParametersSatellite.No_Stream_Id_Filter,
-			eDVBFrontendParametersSatellite.PLS_Gold, 
+			eDVBFrontendParametersSatellite.PLS_Gold,
 			eDVBFrontendParametersSatellite.PLS_Default_Gold_Code,
 			eDVBFrontendParametersSatellite.No_T2MI_PLP_Id,
 			eDVBFrontendParametersSatellite.T2MI_Default_Pid,
-			706,
-			1536,
+			20,
+			70,
 			"Thor 5/6/7 0.8w"),
+
+		# Eutelsat 5.0W Fransat
+		(
+			11054,
+			29950,
+			eDVBFrontendParametersSatellite.Polarisation_Vertical,
+			eDVBFrontendParametersSatellite.FEC_3_4,
+			eDVBFrontendParametersSatellite.Inversion_Off,
+			3550,
+			eDVBFrontendParametersSatellite.System_DVB_S2,
+			eDVBFrontendParametersSatellite.Modulation_8PSK,
+			eDVBFrontendParametersSatellite.RollOff_auto,
+			eDVBFrontendParametersSatellite.Pilot_Unknown,
+			eDVBFrontendParametersSatellite.No_Stream_Id_Filter,
+			eDVBFrontendParametersSatellite.PLS_Gold,
+			eDVBFrontendParametersSatellite.PLS_Default_Gold_Code,
+			eDVBFrontendParametersSatellite.No_T2MI_PLP_Id,
+			eDVBFrontendParametersSatellite.T2MI_Default_Pid,
+			20500,
+			1375,
+			"Eutelsat A/B 5.0w"),
+
+		# Hispasat 30.0W TSA
+		(
+			10890,
+			27500,
+			eDVBFrontendParametersSatellite.Polarisation_Vertical,
+			eDVBFrontendParametersSatellite.FEC_3_4,
+			eDVBFrontendParametersSatellite.Inversion_Off,
+			3300,
+			eDVBFrontendParametersSatellite.System_DVB_S,
+			eDVBFrontendParametersSatellite.Modulation_Auto,
+			eDVBFrontendParametersSatellite.RollOff_auto,
+			eDVBFrontendParametersSatellite.Pilot_Unknown,
+			eDVBFrontendParametersSatellite.No_Stream_Id_Filter,
+			eDVBFrontendParametersSatellite.PLS_Gold,
+			eDVBFrontendParametersSatellite.PLS_Default_Gold_Code,
+			eDVBFrontendParametersSatellite.No_T2MI_PLP_Id,
+			eDVBFrontendParametersSatellite.T2MI_Default_Pid,
+			15,
+			2,
+			"Hispasat 30.0w"),
+	]
+
+	circular_sat_frequencies = [
+		# Express AMU1 36.0E NHK World Japan
+		(
+			12341,
+			27500,
+			eDVBFrontendParametersSatellite.Polarisation_CircularLeft,
+			eDVBFrontendParametersSatellite.FEC_3_4,
+			eDVBFrontendParametersSatellite.Inversion_Off,
+			360,
+			eDVBFrontendParametersSatellite.System_DVB_S,
+			eDVBFrontendParametersSatellite.Modulation_Auto,
+			eDVBFrontendParametersSatellite.RollOff_auto,
+			eDVBFrontendParametersSatellite.Pilot_Unknown,
+			eDVBFrontendParametersSatellite.No_Stream_Id_Filter,
+			eDVBFrontendParametersSatellite.PLS_Gold,
+			eDVBFrontendParametersSatellite.PLS_Default_Gold_Code,
+			eDVBFrontendParametersSatellite.No_T2MI_PLP_Id,
+			eDVBFrontendParametersSatellite.T2MI_Default_Pid,
+			11,
+			112,
+			"Express AMU1 36.0e"),
 	]
 
 	SAT_TABLE_FREQUENCY = 0
@@ -160,6 +246,17 @@ class AutoDiseqc(Screen, ConfigListScreen):
 		self.simple_tone = simple_tone
 		self.simple_sat_change = simple_sat_change
 		self.found_sats = []
+		self.circular_setup = False
+		sat_found = False
+		for x in self.sat_frequencies:
+			if x[self.SAT_TABLE_ORBPOS] == 360:
+				sat_found = True
+		if self.nr_of_ports == 1:
+			if not sat_found:
+				self.sat_frequencies += self.circular_sat_frequencies
+		elif sat_found:
+			self.sat_frequencies.remove(x)
+
 
 		if not self.openFrontend():
 			self.oldref = self.session.nav.getCurrentlyPlayingServiceOrGroup()
@@ -242,15 +339,30 @@ class AutoDiseqc(Screen, ConfigListScreen):
 				config.Nims[self.feid].diseqcMode.value = "diseqc_a_b"
 			else:
 				config.Nims[self.feid].diseqcMode.value = "single"
+				if self.sat_frequencies[self.index][self.SAT_TABLE_ORBPOS] == 360 and not self.found_sats:
+					config.Nims[self.feid].simpleDiSEqCSetCircularLNB.value = True
+					self.circular_setup = True
 
 			config.Nims[self.feid].configMode.value = "simple"
 			config.Nims[self.feid].simpleDiSEqCSetVoltageTone = self.simple_tone
 			config.Nims[self.feid].simpleDiSEqCOnlyOnSatChange = self.simple_sat_change
 
+
 			self.saveAndReloadNimConfig()
 			self.state += 1
 
 		elif self.state == 1:
+			if self.circular_setup:
+				if self.raw_channel:
+					self.raw_channel.receivedTsidOnid.get().remove(self.gotTsidOnid)
+				del self.frontend
+				del self.raw_channel
+				if not self.openFrontend():
+					self.frontend = None
+					self.raw_channel = None
+				if self.raw_channel:
+					self.raw_channel.receivedTsidOnid.get().append(self.gotTsidOnid)
+
 			InitNimManager(nimmanager)
 
 			self.tuner = Tuner(self.frontend)
@@ -313,15 +425,18 @@ class AutoDiseqc(Screen, ConfigListScreen):
 			self["tunerstatusbar"].setText(_("Tuner status:") + " " + _("TUNING"))
 		elif dict["tuner_state"] == "LOCKED":
 			self["tunerstatusbar"].setText(_("Tuner status:") + " " + _("ACQUIRING TSID/ONID"))
-
+		elif dict["tuner_state"] == "IDLE":
+			self["tunerstatusbar"].setText(_("Tuner status:") + " " + _("IDLE"))
+		elif dict["tuner_state"] == "UNKNOWN":
+			self["tunerstatusbar"].setText(_("Tuner status:") + " " + _("UNKNOWN"))
 		elif dict["tuner_state"] == "LOSTLOCK" or dict["tuner_state"] == "FAILED":
 			self["tunerstatusbar"].setText(_("Tuner status:") + " " + _("FAILED"))
 			self.tunerStopScan(False)
 			return
 
 		self.count += 1
-		if self.count > 15:
-			self.startStatusTimer()
+		if self.count > 10:
+			self.tunerStopScan(False)
 		else:
 			self.startTunerStatusTimer()
 
diff --git a/lib/python/Screens/ButtonSetup.py b/lib/python/Screens/ButtonSetup.py
index b738cce..74abb1a 100644
--- a/lib/python/Screens/ButtonSetup.py
+++ b/lib/python/Screens/ButtonSetup.py
@@ -38,9 +38,12 @@ ButtonSetupKeys = [	(_("Red"), "red", "Infobar/activateRedButton"),
 	(_("Help"), "displayHelp", ""),
 	(_("Help long"), "displayHelp_long", ""),
 	(_("Subtitle"), "subtitle", ""),
+	(_("Subtitle Long"), "subtitle_long", ""),
 	(_("Menu"), "mainMenu", ""),
 	(_("List/Fav/PVR"), "list", ""),
 	(_("List/Fav/PVR") + " " + _("long"), "list_long", ""),
+	(_("List/File"), "file", ""),
+	(_("List/File") + " " + _("long"), "file_long", ""),
 	(_("Back/Recall"), "back", ""),
 	(_("Back/Recall") + " " + _("long"), "back_long", ""),
 	(_("Home"), "home", ""),
@@ -57,6 +60,7 @@ ButtonSetupKeys = [	(_("Red"), "red", "Infobar/activateRedButton"),
 	(_("Skip back"), "skip_back", ""),
 	(_("Skip forward"), "skip_forward", ""),
 	(_("activatePiP"), "activatePiP", ""),
+	(_("activatePiP long"), "activatePiP_long", ""),
 	(_("Timer"), "timer", ""),
 	(_("Playlist"), "playlist", ""),
 	(_("Timeshift"), "timeshift", ""),
@@ -105,7 +109,7 @@ def getButtonSetupFunctions():
 				twinPaths[plugin.path[plugin.path.rfind("Plugins"):]] = 1
 			ButtonSetupFunctions.append((plugin.name, plugin.path[plugin.path.rfind("Plugins"):] + "/" + str(twinPaths[plugin.path[plugin.path.rfind("Plugins"):]]) , "Plugins"))
 			twinPlugins.append(plugin.name)
-	ButtonSetupFunctions.append((_("Show graphical multi EPG"), "Infobar/openGraphEPG", "EPG"))
+	ButtonSetupFunctions.append((_("Show Grid EPG"), "Infobar/openGridEPG", "EPG"))
 	ButtonSetupFunctions.append((_("Main menu"), "Infobar/mainMenu", "InfoBar"))
 	ButtonSetupFunctions.append((_("Show help"), "Infobar/showHelp", "InfoBar"))
 	ButtonSetupFunctions.append((_("Show extension selection"), "Infobar/showExtensionSelection", "InfoBar"))
@@ -114,15 +118,17 @@ def getButtonSetupFunctions():
 	ButtonSetupFunctions.append((_("Show service list"), "Infobar/openServiceList", "InfoBar"))
 	ButtonSetupFunctions.append((_("Show service list or movies"), "Infobar/showServiceListOrMovies", "InfoBar"))
 	ButtonSetupFunctions.append((_("Show movies"), "Infobar/showMovies", "InfoBar"))
+	ButtonSetupFunctions.append((_("Restart last movie"), "Infobar/restartLastMovie", "InfoBar"))
 	ButtonSetupFunctions.append((_("Show favourites list"), "Infobar/openFavouritesList", "InfoBar"))
 	ButtonSetupFunctions.append((_("History back"), "Infobar/historyBack", "InfoBar"))
 	ButtonSetupFunctions.append((_("History next"), "Infobar/historyNext", "InfoBar"))
 	ButtonSetupFunctions.append((_("Show event info plugins"), "Infobar/showEventInfoPlugins", "EPG"))
 	ButtonSetupFunctions.append((_("Show event details"), "Infobar/openEventView", "EPG"))
-	ButtonSetupFunctions.append((_("Show EPG for current service"), "Infobar/openSingleServiceEPG", "EPG"))
-	ButtonSetupFunctions.append((_("Show multi EPG"), "Infobar/openMultiServiceEPG", "EPG"))
+	ButtonSetupFunctions.append((_("Show Single EPG"), "Infobar/openSingleServiceEPG", "EPG"))
+	ButtonSetupFunctions.append((_("Show Multi EPG"), "Infobar/openMultiServiceEPG", "EPG"))
 	ButtonSetupFunctions.append((_("Show select audio track"), "Infobar/audioSelection", "InfoBar"))
 	ButtonSetupFunctions.append((_("Show subtitle selection"), "Infobar/subtitleSelection", "InfoBar"))
+	ButtonSetupFunctions.append((_("Toggle default subtitles"), "Infobar/toggleDefaultSubtitles", "InfoBar"))
 	ButtonSetupFunctions.append((_("Switch to radio mode"), "Infobar/showRadio", "InfoBar"))
 	ButtonSetupFunctions.append((_("Switch to TV mode"), "Infobar/showTv", "InfoBar"))
 	ButtonSetupFunctions.append((_("Instant record"), "Infobar/instantRecord", "InfoBar"))
@@ -479,7 +485,7 @@ class InfoBarButtonSetup():
 				pluginlist = plugins.getPlugins(PluginDescriptor.WHERE_EVENTINFO)
 				pluginlist.sort(key=lambda p: p.name)
 				for plugin in pluginlist:
-					if plugin.name not in twinPlugins and plugin.path and 'selectedevent' not in plugin.__call__.func_code.co_varnames:	
+					if plugin.name not in twinPlugins and plugin.path and 'selectedevent' not in plugin.__call__.func_code.co_varnames:
 						if twinPaths.has_key(plugin.path[plugin.path.rfind("Plugins"):]):
 							twinPaths[plugin.path[plugin.path.rfind("Plugins"):]] += 1
 						else:
@@ -514,8 +520,10 @@ class InfoBarButtonSetup():
 				try:
 					exec "from " + selected[1] + " import *"
 					exec "self.session.open(" + ",".join(selected[2:]) + ")"
-				except:
-					print "[ButtonSetup] error during executing module %s, screen %s" % (selected[1], selected[2])
+				except Exception as e:
+					print "[ButtonSetup] error during executing module %s, screen %s, %s" % (selected[1], selected[2], e)
+					import traceback
+					traceback.print_exc()
 			elif selected[0] == "Setup":
 				exec "from Screens.Setup import *"
 				exec "self.session.open(Setup, \"" + selected[1] + "\")"
diff --git a/lib/python/Screens/ChannelSelection.py b/lib/python/Screens/ChannelSelection.py
index 5f6f008..47400d9 100644
--- a/lib/python/Screens/ChannelSelection.py
+++ b/lib/python/Screens/ChannelSelection.py
@@ -16,7 +16,7 @@ from Components.UsageConfig import preferredTimerPath
 from Components.Renderer.Picon import getPiconName
 from Screens.TimerEdit import TimerSanityConflict
 profile("ChannelSelection.py 1")
-from EpgSelection import EPGSelection
+from EpgSelectionSingle import EPGSelectionSingle
 from enigma import eActionMap, eServiceReference, eEPGCache, eServiceCenter, eRCInput, eTimer, ePoint, eDVBDB, iPlayableService, iServiceInformation, getPrevAsciiCode, eEnv, loadPNG, eDVBLocalTimeHandler
 from Components.config import config, configfile, ConfigSubsection, ConfigText, ConfigYesNo
 from Tools.NumericalTextInput import NumericalTextInput
@@ -940,50 +940,16 @@ class ChannelSelectionEPG(InfoBarButtonSetup):
 		self.closeChoiceBoxDialog()
 
 	def showEPGList(self):
-		ref=self.getCurrentSelection()
-		if ref:
-			self.savedService = ref
-			self.session.openWithCallback(self.SingleServiceEPGClosed, EPGSelection, ref, serviceChangeCB=self.changeServiceCB, EPGtype="single")
-
-	def SingleServiceEPGClosed(self, ret=False):
-		if ret:
-			service = self.getCurrentSelection()
-			if service is not None:
-				self.saveChannel(service)
-				self.addToHistory(service)
-				self.close()
-		else:
-			self.setCurrentSelection(self.savedService)
+		def zapToService(service, bouquet = None, preview = False, zapback = False):
+			pass
 
-	def changeServiceCB(self, direction, epg):
-		beg = self.getCurrentSelection()
-		while True:
-			if direction > 0:
-				self.moveDown()
-			else:
-				self.moveUp()
-			cur = self.getCurrentSelection()
-			if cur == beg or not (cur.flags & eServiceReference.isMarker):
-				break
-		epg.setService(ServiceReference(self.getCurrentSelection()))
+		def epgClosed(ret = False):
+			pass
 
-	def zapToService(self, service, preview=False, zapback=False):
-		if self.startServiceRef is None:
-			self.startServiceRef = self.session.nav.getCurrentlyPlayingServiceOrGroup()
-		if service is not None:
-			if self.servicelist.getRoot() != self.epg_bouquet:
-				self.servicelist.clearPath()
-				if self.servicelist.bouquet_root != self.epg_bouquet:
-					self.servicelist.enterPath(self.servicelist.bouquet_root)
-				self.servicelist.enterPath(self.epg_bouquet)
-			self.servicelist.setCurrent(service)
-		if not zapback or preview:
-			self.zap(enable_pipzap=True)
-		if (self.dopipzap or zapback) and not preview:
-			self.zapBack()
-		if not preview:
-			self.startServiceRef = None
-			self.startRoot = None
+		startRef = self.getCurrentSelection()
+		if startRef:
+			self.session.openWithCallback(epgClosed, EPGSelectionSingle, zapToService,
+				self.getRoot(), startRef, self.getEPGBouquetList())
 
 class ChannelSelectionEdit:
 	def __init__(self):
diff --git a/lib/python/Screens/EpgSelection.py b/lib/python/Screens/EpgSelection.py
index 357b1ea..eee851f 100644
--- a/lib/python/Screens/EpgSelection.py
+++ b/lib/python/Screens/EpgSelection.py
@@ -1,1502 +1,98 @@
-from time import localtime, time, strftime, mktime
-
-from enigma import eServiceReference, eTimer, eServiceCenter, ePoint
-
-from Screen import Screen
-from Screens.HelpMenu import HelpableScreen
-from Components.About import about
-from Components.ActionMap import HelpableActionMap, HelpableNumberActionMap
-from Components.Button import Button
-from Components.config import config, configfile, ConfigClock
-from Components.EpgList import EPGList, EPGBouquetList, TimelineText, EPG_TYPE_SINGLE, EPG_TYPE_SIMILAR, EPG_TYPE_MULTI, EPG_TYPE_ENHANCED, EPG_TYPE_INFOBAR, EPG_TYPE_INFOBARGRAPH, EPG_TYPE_GRAPH, MAX_TIMELINES
-from Components.Label import Label
-from Components.Pixmap import Pixmap
-from Components.Sources.ServiceEvent import ServiceEvent
-from Components.Sources.Event import Event
-from Components.UsageConfig import preferredTimerPath
-from Screens.TimerEdit import TimerSanityConflict
-from Screens.EventView import EventViewEPGSelect, EventViewSimple
-from Screens.ChoiceBox import ChoiceBox
-from Screens.MessageBox import MessageBox
-from Screens.PictureInPicture import PictureInPicture
-from Screens.Setup import Setup
-from TimeDateInput import TimeDateInput
-from RecordTimer import RecordTimerEntry, parseEvent, AFTEREVENT
-from TimerEntry import TimerEntry, InstantRecordTimerEntry
-from ServiceReference import ServiceReference
-from Tools.HardwareInfo import HardwareInfo
-
-mepg_config_initialized = False
-# PiPServiceRelation installed?
-try:
-	from Plugins.SystemPlugins.PiPServiceRelation.plugin import getRelationDict
-	plugin_PiPServiceRelation_installed = True
-except:
-	plugin_PiPServiceRelation_installed = False
-
-# Various value are in minutes, while others are in seconds.
-# Use this to remind us what is going on...
-#
-SECS_IN_MIN = 60
-
-class EPGSelection(Screen, HelpableScreen):
-	EMPTY = 0
-	ADD_TIMER = 1
-	REMOVE_TIMER = 2
-	ZAP = 1
-
-	def __init__(self, session, service = None, zapFunc = None, eventid = None, bouquetChangeCB=None, serviceChangeCB = None, EPGtype = None, StartBouquet = None, StartRef = None, bouquets = None):
-		print "[EPGSelection]", {'single':'EPG_TYPE_SINGLE','infobar':'EPG_TYPE_INFOBAR','enhanced':'EPG_TYPE_ENHANCED','graph':'EPG_TYPE_GRAPH','infobargraph':'EPG_TYPE_INFOBARGRAPH','multi':'EPG_TYPE_MULTI', None: 'EPGtype == None'}.get(EPGtype, EPGtype)
-		Screen.__init__(self, session)
-		HelpableScreen.__init__(self)
-		self.zapFunc = zapFunc
-		self.serviceChangeCB = serviceChangeCB
-		self.bouquets = bouquets
-		graphic = False
-		if EPGtype == 'single':
-			self.type = EPG_TYPE_SINGLE
-		elif EPGtype == 'infobar':
-			self.type = EPG_TYPE_INFOBAR
-		elif EPGtype == 'enhanced':
-			self.type = EPG_TYPE_ENHANCED
-		elif EPGtype == 'graph':
-			self.type = EPG_TYPE_GRAPH
-			if config.epgselection.graph_type_mode.value == "graphics":
-				graphic = True
-		elif EPGtype == 'infobargraph':
-			self.type = EPG_TYPE_INFOBARGRAPH
-			if config.epgselection.infobar_type_mode.value == "graphics":
-				graphic = True
-		elif EPGtype == 'multi':
-			self.type = EPG_TYPE_MULTI
-		else:
-			self.type = EPG_TYPE_SIMILAR
-		if not self.type == EPG_TYPE_SINGLE:
-			self.StartBouquet = StartBouquet
-			self.StartRef = StartRef
-			self.servicelist = None
-		self.ChoiceBoxDialog = None
-		self.ask_time = -1
-		self.closeRecursive = False
-		self.eventviewDialog = None
-		self.eventviewWasShown = False
-		self.currch = None
-		self.session.pipshown = False
-		self.cureventindex = None
-		if plugin_PiPServiceRelation_installed:
-			self.pipServiceRelation = getRelationDict()
-		else:
-			self.pipServiceRelation = {}
-		self.zapnumberstarted = False
-		self.NumberZapTimer = eTimer()
-		self.NumberZapTimer.callback.append(self.dozumberzap)
-		self.NumberZapField = None
-		self.CurrBouquet = None
-		self.CurrService = None
-		self["number"] = Label()
-		self["number"].hide()
-		self['Service'] = ServiceEvent()
-		self['Event'] = Event()
-		self['lab1'] = Label(_('Please wait while gathering EPG data...'))
-		self.key_green_choice = self.EMPTY
-		self['key_red'] = Button(_('IMDb search'))
-		self['key_green'] = Button(_('Add timer'))
-		self['key_yellow'] = Button(_('EPG search'))
-		self['key_blue'] = Button(_('Add Autotimer'))
-		self['dialogactions'] = HelpableActionMap(self, 'WizardActions',
-			{
-				'back': (self.closeChoiceBoxDialog, _('Close dialog')),
-			}, -1)
-		self['dialogactions'].csel = self
-		self["dialogactions"].setEnabled(False)
-
-		self['okactions'] = HelpableActionMap(self, 'OkCancelActions',
-			{
-				'cancel': (self.closeScreen, _('Exit EPG')),
-				'OK': (self.OK, _('Zap to channel (setup in menu)')),
-				'OKLong': (self.OKLong, _('Zap to channel and close (setup in menu)'))
-			}, -1)
-		self['okactions'].csel = self
-		self['colouractions'] = HelpableActionMap(self, 'ColorActions',
-			{
-				'red': (self.redButtonPressed, _('IMDB search for current event')),
-				'redlong': (self.redButtonPressedLong, _('Sort EPG list')),
-				'green': (self.greenButtonPressed, _('Add/Remove timer for current event')),
-				'greenlong': (self.greenButtonPressedLong, _('Show timer list')),
-				'yellow': (self.yellowButtonPressed, _('Search for similar events')),
-				'blue': (self.blueButtonPressed, _('Add an autotimer for current event')),
-				'bluelong': (self.blueButtonPressedLong, _('Show Autotimer list'))
-			}, -1)
-		self['colouractions'].csel = self
-		self['recordingactions'] = HelpableActionMap(self, 'InfobarInstantRecord',
-			{
-				'ShortRecord': (self.recButtonPressed, _('Add a record timer for current event')),
-				'LongRecord': (self.recButtonPressedLong, _('Add a zap timer for current event'))
-			}, -1)
-		self['recordingactions'].csel = self
-		if self.type == EPG_TYPE_SIMILAR:
-			self.currentService = service
-			self.eventid = eventid
-			self['epgactions'] = HelpableActionMap(self, 'EPGSelectActions',
-				{
-					'info': (self.Info, _('Show detailed event info')),
-					'infolong': (self.InfoLong, _('Show single epg for current channel')),
-					'menu': (self.createSetup, _('Setup menu'))
-				}, -1)
-			self['epgactions'].csel = self
-		elif self.type == EPG_TYPE_SINGLE:
-			self.currentService = ServiceReference(service)
-			self['epgactions'] = HelpableActionMap(self, 'EPGSelectActions',
-				{
-					'info': (self.Info, _('Show detailed event info')),
-					'epg': (self.Info, _('Show detailed event info')),
-					'menu': (self.createSetup, _('Setup menu'))
-				}, -1)
-			self['epgactions'].csel = self
-			self['epgcursoractions'] = HelpableActionMap(self, 'DirectionActions',
-				{
-					'left': (self.prevPage, _('Move up a page')),
-					'right': (self.nextPage, _('Move down a page')),
-					'up': (self.moveUp, _('Go to previous channel')),
-					'down': (self.moveDown, _('Go to next channel'))
-				}, -1)
-			self['epgcursoractions'].csel = self
-		elif self.type == EPG_TYPE_INFOBAR or self.type == EPG_TYPE_ENHANCED:
-			if self.type == EPG_TYPE_INFOBAR:
-				self.skinName = 'QuickEPG'
-				self['epgactions'] = HelpableActionMap(self, 'EPGSelectActions',
-					{
-						'nextBouquet': (self.nextBouquet, _('Go to next bouquet')),
-						'prevBouquet': (self.prevBouquet, _('Go to previous bouquet')),
-						'nextService': (self.nextPage, _('Move down a page')),
-						'prevService': (self.prevPage, _('Move up a page')),
-						'input_date_time': (self.enterDateTime, _('Go to specific data/time')),
-						'epg': (self.epgButtonPressed, _('Show single epg for current channel')),
-						'info': (self.Info, _('Show detailed event info')),
-						'infolong': (self.InfoLong, _('Show single epg for current channel')),
-						'menu': (self.createSetup, _('Setup menu'))
-					}, -1)
-				self['epgactions'].csel = self
-				self['epgcursoractions'] = HelpableActionMap(self, 'DirectionActions',
-					{
-						'left': (self.prevService, _('Go to previous channel')),
-						'right': (self.nextService, _('Go to next channel')),
-						'up': (self.moveUp, _('Go to previous channel')),
-						'down': (self.moveDown, _('Go to next channel'))
-					}, -1)
-				self['epgcursoractions'].csel = self
-			elif self.type == EPG_TYPE_ENHANCED:
-				self['epgactions'] = HelpableActionMap(self, 'EPGSelectActions',
-					{
-						'nextBouquet': (self.nextBouquet, _('Go to next bouquet')),
-						'prevBouquet': (self.prevBouquet, _('Go to previous bouquet')),
-						'nextService': (self.nextService, _('Go to next channel')),
-						'prevService': (self.prevService, _('Go to previous channel')),
-						'input_date_time': (self.enterDateTime, _('Go to specific data/time')),
-						'info': (self.Info, _('Show detailed event info')),
-						'infolong': (self.InfoLong, _('Show single epg for current channel')),
-						'menu': (self.createSetup, _('Setup menu'))
-					}, -1)
-				self['epgactions'].csel = self
-				self['epgcursoractions'] = HelpableActionMap(self, 'DirectionActions',
-					{
-						'left': (self.prevPage, _('Move up a page')),
-						'right': (self.nextPage, _('Move down a page')),
-						'up': (self.moveUp, _('Go to previous channel')),
-						'down': (self.moveDown, _('Go to next channel'))
-					}, -1)
-				self['epgcursoractions'].csel = self
-			self['input_actions'] = HelpableNumberActionMap(self, 'NumberActions',
-				{
-					'0': (self.keyNumberGlobal, _('enter number to jump to channel.')),
-					'1': (self.keyNumberGlobal, _('enter number to jump to channel.')),
-					'2': (self.keyNumberGlobal, _('enter number to jump to channel.')),
-					'3': (self.keyNumberGlobal, _('enter number to jump to channel.')),
-					'4': (self.keyNumberGlobal, _('enter number to jump to channel.')),
-					'5': (self.keyNumberGlobal, _('enter number to jump to channel.')),
-					'6': (self.keyNumberGlobal, _('enter number to jump to channel.')),
-					'7': (self.keyNumberGlobal, _('enter number to jump to channel.')),
-					'8': (self.keyNumberGlobal, _('enter number to jump to channel.')),
-					'9': (self.keyNumberGlobal, _('enter number to jump to channel.'))
-				}, -1)
-			self['input_actions'].csel = self
-			self.list = []
-			self.servicelist = service
-			self.currentService = self.session.nav.getCurrentlyPlayingServiceOrGroup()
-		elif self.type == EPG_TYPE_GRAPH or self.type == EPG_TYPE_INFOBARGRAPH:
-			now = time() - int(config.epg.histminutes.value) * SECS_IN_MIN
-			if self.type == EPG_TYPE_GRAPH:
-				self.ask_time = self.ask_time = now - now % (int(config.epgselection.graph_roundto.value) * SECS_IN_MIN)
-				if not config.epgselection.graph_pig.value:
-					self.skinName = 'GraphicalEPG'
-				else:
-					self.skinName = 'GraphicalEPGPIG'
-			elif self.type == EPG_TYPE_INFOBARGRAPH:
-				self.ask_time = self.ask_time = now - now % (int(config.epgselection.infobar_roundto.value) * SECS_IN_MIN)
-				self.skinName = 'GraphicalInfoBarEPG'
-			self.closeRecursive = False
-			self.bouquetlist_active = False
-			self['bouquetlist'] = EPGBouquetList(graphic=graphic)
-			self['bouquetlist'].hide()
-			self['timeline_text'] = TimelineText(type=self.type,graphic=graphic)
-			self['Event'] = Event()
-			self['primetime'] = Label(_('PRIMETIME'))
-			self['change_bouquet'] = Label(_('CHANGE BOUQUET'))
-			self['jump'] = Label(_('JUMP 24 HOURS'))
-			self['page'] = Label(_('PAGE UP/DOWN'))
-			self.time_lines = []
-			for x in range(0, MAX_TIMELINES):
-				pm = Pixmap()
-				self.time_lines.append(pm)
-				self['timeline%d' % x] = pm
-
-			self['timeline_now'] = Pixmap()
-			self.updateTimelineTimer = eTimer()
-			self.updateTimelineTimer.callback.append(self.moveTimeLines)
-			self.updateTimelineTimer.start(60000)
-			self['bouquetokactions'] = HelpableActionMap(self, 'OkCancelActions',
-				{
-					'cancel': (self.BouquetlistHide, _('Close bouquet list.')),
-					'OK': (self.BouquetOK, _('Change to bouquet')),
-				}, -1)
-			self['bouquetokactions'].csel = self
-			self["bouquetokactions"].setEnabled(False)
-
-			self['bouquetcursoractions'] = HelpableActionMap(self, 'DirectionActions',
-				{
-					'left': (self.moveBouquetPageUp, _('Go to previous event')),
-					'right': (self.moveBouquetPageDown, _('Go to next event')),
-					'up': (self.moveBouquetUp, _('Go to previous channel')),
-					'down': (self.moveBouquetDown, _('Go to next channel'))
-				}, -1)
-			self['bouquetcursoractions'].csel = self
-			self["bouquetcursoractions"].setEnabled(False)
-
-			self['epgcursoractions'] = HelpableActionMap(self, 'DirectionActions',
-				{
-					'left': (self.leftPressed, _('Go to previous event')),
-					'right': (self.rightPressed, _('Go to next event')),
-					'up': (self.moveUp, _('Go to previous channel')),
-					'down': (self.moveDown, _('Go to next channel'))
-				}, -1)
-			self['epgcursoractions'].csel = self
-
-			self['epgactions'] = HelpableActionMap(self, 'EPGSelectActions',
-				{
-					'nextService': (self.nextService, _('Jump forward 24 hours')),
-					'prevService': (self.prevService, _('Jump back 24 hours')),
-					'nextBouquet': (self.nextBouquet, _('Go to next bouquet')),
-					'prevBouquet': (self.prevBouquet, _('Go to previous bouquet')),
-					'input_date_time': (self.enterDateTime, _('Go to specific data/time')),
-					'epg': (self.epgButtonPressed, _('Show single epg for current channel')),
-					'info': (self.Info, _('Show detailed event info')),
-					'infolong': (self.InfoLong, _('Show single epg for current channel')),
-					'tv': (self.Bouquetlist, _('Toggle between bouquet/epg lists')),
-					'tvlong': (self.togglePIG, _('Toggle picture In graphics')),
-					'menu': (self.createSetup, _('Setup menu'))
-				}, -1)
-			self['epgactions'].csel = self
-
-			self['input_actions'] = HelpableNumberActionMap(self, 'NumberActions',
-				{
-					'1': (self.keyNumberGlobal, _('Reduce time scale')),
-					'2': (self.keyNumberGlobal, _('Page up')),
-					'3': (self.keyNumberGlobal, _('Increase time scale')),
-					'4': (self.keyNumberGlobal, _('page left')),
-					'5': (self.keyNumberGlobal, _('Jump to current time')),
-					'6': (self.keyNumberGlobal, _('Page right')),
-					'7': (self.keyNumberGlobal, _('No of items switch (increase or reduced)')),
-					'8': (self.keyNumberGlobal, _('Page down')),
-					'9': (self.keyNumberGlobal, _('Jump to prime time')),
-					'0': (self.keyNumberGlobal, _('Move to home of list'))
-				}, -1)
-			self['input_actions'].csel = self
-
-		elif self.type == EPG_TYPE_MULTI:
-			self.skinName = 'EPGSelectionMulti'
-			self['bouquetlist'] = EPGBouquetList(graphic=graphic)
-			self['bouquetlist'].hide()
-			self['now_button'] = Pixmap()
-			self['next_button'] = Pixmap()
-			self['more_button'] = Pixmap()
-			self['now_button_sel'] = Pixmap()
-			self['next_button_sel'] = Pixmap()
-			self['more_button_sel'] = Pixmap()
-			self['now_text'] = Label()
-			self['next_text'] = Label()
-			self['more_text'] = Label()
-			self['date'] = Label()
-			self.bouquetlist_active = False
-			self['bouquetokactions'] = HelpableActionMap(self, 'OkCancelActions',
-				{
-					'OK': (self.BouquetOK, _('Change to bouquet')),
-				}, -1)
-			self['bouquetokactions'].csel = self
-			self["bouquetokactions"].setEnabled(False)
-
-			self['bouquetcursoractions'] = HelpableActionMap(self, 'DirectionActions',
-				{
-					'left': (self.moveBouquetPageUp, _('Go to previous event')),
-					'right': (self.moveBouquetPageDown, _('Go to next event')),
-					'up': (self.moveBouquetUp, _('Go to previous channel')),
-					'down': (self.moveBouquetDown, _('Go to next channel'))
-				}, -1)
-			self['bouquetcursoractions'].csel = self
-			self['bouquetcursoractions'].setEnabled(False)
-
-			self['epgcursoractions'] = HelpableActionMap(self, 'DirectionActions',
-				{
-					'left': (self.leftPressed, _('Go to previous event')),
-					'right': (self.rightPressed, _('Go to next event')),
-					'up': (self.moveUp, _('Go to previous channel')),
-					'down': (self.moveDown, _('Go to next channel'))
-				}, -1)
-			self['epgcursoractions'].csel = self
-
-			self['epgactions'] = HelpableActionMap(self, 'EPGSelectActions',
-				{
-					'nextService': (self.nextPage, _('Move down a page')),
-					'prevService': (self.prevPage, _('Move up a page')),
-					'nextBouquet': (self.nextBouquet, _('Go to next bouquet')),
-					'prevBouquet': (self.prevBouquet, _('Go to previous bouquet')),
-					'input_date_time': (self.enterDateTime, _('Go to specific data/time')),
-					'epg': (self.epgButtonPressed, _('Show single epg for current channel')),
-					'info': (self.Info, _('Show detailed event info')),
-					'infolong': (self.InfoLong, _('Show single epg for current channel')),
-					'tv': (self.Bouquetlist, _('Toggle between bouquet/epg lists')),
-					'menu': (self.createSetup, _('Setup menu'))
-				}, -1)
-			self['epgactions'].csel = self
-		if self.type == EPG_TYPE_GRAPH:
-			time_epoch=int(config.epgselection.graph_prevtimeperiod.value)
-		elif self.type == EPG_TYPE_INFOBARGRAPH:
-			time_epoch=int(config.epgselection.infobar_prevtimeperiod.value)
-		else:
-			time_epoch=None
-		self['list'] = EPGList(type=self.type, selChangedCB=self.onSelectionChanged, timer=session.nav.RecordTimer, time_epoch=time_epoch, overjump_empty=config.epgselection.overjump.value, graphic=graphic)
-		self.refreshTimer = eTimer()
-		self.refreshTimer.timeout.get().append(self.refreshlist)
-		self.listTimer = eTimer()
-		self.listTimer.callback.append(self.loadEPGData)
-		if not HardwareInfo().is_nextgen():
-			self.createTimer = eTimer()
-			self.createTimer.callback.append(self.onCreate)
-			self.onLayoutFinish.append(self.LayoutFinish)
-		else:
-			self.onLayoutFinish.append(self.onCreate)
-
-	def createSetup(self):
-		self.closeEventViewDialog()
-		key = None
-		if self.type == EPG_TYPE_SINGLE:
-			key = 'epgsingle'
-		elif self.type == EPG_TYPE_MULTI:
-			key = 'epgmulti'
-		elif self.type == EPG_TYPE_ENHANCED:
-			key = 'epgenhanced'
-		elif self.type == EPG_TYPE_INFOBAR:
-			key = 'epginfobar'
-		elif self.type == EPG_TYPE_GRAPH:
-			key = 'epggraphical'
-		elif self.type == EPG_TYPE_INFOBARGRAPH:
-			key = 'epginfobargraphical'
-		if key:
-			self.session.openWithCallback(self.onSetupClose, Setup, key)
-
-	def onSetupClose(self, test = None):
-		if self.type == EPG_TYPE_GRAPH or self.type == EPG_TYPE_INFOBARGRAPH:
-			if self.type == EPG_TYPE_GRAPH:
-				self.close('reopengraph')
-			elif self.type == EPG_TYPE_INFOBARGRAPH:
-				self.close('reopeninfobargraph')
-		elif self.type == EPG_TYPE_INFOBAR:
-				self.close('reopeninfobar')
-		else:
-			if  self.type in (EPG_TYPE_SINGLE, EPG_TYPE_ENHANCED, EPG_TYPE_INFOBAR):
-				self['list'].sortSingleEPG(int(config.epgselection.sort.value))
-			self['list'].setFontsize()
-			self['list'].setItemsPerPage()
-			self['list'].recalcEntrySize()
-
-	def togglePIG(self):
-		if not config.epgselection.graph_pig.value:
-			config.epgselection.graph_pig.setValue(True)
-		else:
-			config.epgselection.graph_pig.setValue(False)
-		config.epgselection.graph_pig.save()
-		configfile.save()
-		self.close('reopengraph')
-
-	def loadEPGData(self):
-		def populateBouquetList():
-			self['bouquetlist'].recalcEntrySize()
-			self['bouquetlist'].fillBouquetList(self.bouquets)
-			self['bouquetlist'].moveToService(self.StartBouquet)
-			self['bouquetlist'].setCurrentBouquet(self.StartBouquet)
-			self.setTitle(self['bouquetlist'].getCurrentBouquet())
-			self.services = self.getBouquetServices(self.StartBouquet)
-
-		serviceref = self.session.nav.getCurrentlyPlayingServiceOrGroup()
-		if self.type == EPG_TYPE_GRAPH or self.type == EPG_TYPE_INFOBARGRAPH:
-			populateBouquetList()
-			self['list'].fillGraphEPGNoRefresh(self.services, self.ask_time)
-			if self.type == EPG_TYPE_INFOBARGRAPH or not config.epgselection.graph_channel1.value:
-				self['list'].moveToService(serviceref)
-			self['list'].setCurrentlyPlaying(serviceref)
-			self.moveTimeLines()
-		if self.type == EPG_TYPE_MULTI:
-			populateBouquetList()
-			self['list'].fillMultiEPG(self.services, self.ask_time)
-			self['list'].moveToService(serviceref)
-			self['list'].setCurrentlyPlaying(serviceref)
-		self['lab1'].hide()
-
-	def getBouquetServices(self, bouquet):
-		servicelist = eServiceCenter.getInstance().list(bouquet)
-		if servicelist:
-			# Use getContent() instead of getNext() so
-			# That the list is sorted according to the "ORDER BY"
-			# mechanism
-			return [ServiceReference(service) for service in servicelist.getContent("R", True) if not (service.flags & (eServiceReference.isDirectory | eServiceReference.isMarker))]
-		else:
-			return []
-
-	def LayoutFinish(self):
-		self['lab1'].show()
-		self.createTimer.start(800)
-
-	def onCreate(self):
-		if not HardwareInfo().is_nextgen():
-			self.createTimer.stop()
-		self['list'].recalcEntrySize()
-		self.BouquetRoot = False
-		if self.type == EPG_TYPE_GRAPH or self.type == EPG_TYPE_INFOBARGRAPH:
-			self.getCurrentCursorLocation = None
-			if self.StartBouquet.toString().startswith('1:7:0'):
-				self.BouquetRoot = True
-			# set time_base on grid widget so that timeline shows correct time
-			self['list'].time_base = self.ask_time
-			self['timeline_text'].setEntries(self['list'], self['timeline_now'], self.time_lines, False)
-		elif self.type == EPG_TYPE_SINGLE or self.type == EPG_TYPE_ENHANCED or self.type == EPG_TYPE_INFOBAR:
-			title = None
-			if self.type == EPG_TYPE_SINGLE:
-				service = self.currentService
-			elif self.type == EPG_TYPE_ENHANCED or self.type == EPG_TYPE_INFOBAR:
-				service = ServiceReference(self.servicelist.getCurrentSelection())
-				title = ServiceReference(self.servicelist.getRoot()).getServiceName()
-			self['Service'].newService(service.ref)
-			if title:
-				title = title + ' - ' + service.getServiceName()
-			else:
-				title = service.getServiceName()
-			self.setTitle(title)
-			self['list'].fillSingleEPG(service)
-			self['list'].sortSingleEPG(int(config.epgselection.sort.value))
-		elif self.type == EPG_TYPE_SIMILAR:
-			self['list'].fillSimilarList(self.currentService, self.eventid)
-		self['lab1'].show()
-		self.show()
-		self.listTimer.start(1, True)
-
-	def refreshlist(self):
-		self.refreshTimer.stop()
-		if self.type == EPG_TYPE_GRAPH or self.type == EPG_TYPE_INFOBARGRAPH:
-			if self.getCurrentCursorLocation:
-				self.ask_time = self.getCurrentCursorLocation
-				self.getCurrentCursorLocation = None
-			self['list'].fillGraphEPG(None, self.ask_time)
-			self.moveTimeLines()
-		elif self.type == EPG_TYPE_MULTI:
-			self['list'].fillMultiEPG(self.services, self.ask_time)
-		elif self.type == EPG_TYPE_SINGLE or self.type == EPG_TYPE_ENHANCED or self.type == EPG_TYPE_INFOBAR:
-			try:
-				if self.type == EPG_TYPE_SINGLE:
-					service = self.currentService
-				elif self.type == EPG_TYPE_ENHANCED or self.type == EPG_TYPE_INFOBAR:
-					service = ServiceReference(self.servicelist.getCurrentSelection())
-				if not self.cureventindex:
-					index = self['list'].getCurrentIndex()
-				else:
-					index = self.cureventindex
-					self.cureventindex = None
-				self['list'].fillSingleEPG(service)
-				self['list'].sortSingleEPG(int(config.epgselection.sort.value))
-				self['list'].setCurrentIndex(index)
-			except:
-				pass
-
-	def moveUp(self):
-		self['list'].moveTo(self['list'].instance.moveUp)
-
-	def moveDown(self):
-		self['list'].moveTo(self['list'].instance.moveDown)
-
-	def updEvent(self, dir, visible = True):
-		ret = self['list'].selEntry(dir, visible)
-		if ret:
-			self.moveTimeLines(True)
-
-	def nextPage(self):
-		self['list'].moveTo(self['list'].instance.pageDown)
-
-	def prevPage(self):
-		self['list'].moveTo(self['list'].instance.pageUp)
-
-	def toTop(self):
-		self['list'].moveTo(self['list'].instance.moveTop)
-
-	def toEnd(self):
-		self['list'].moveTo(self['list'].instance.moveEnd)
-
-	def leftPressed(self):
-		if self.type == EPG_TYPE_MULTI:
-			self['list'].updateMultiEPG(-1)
-		else:
-			self.updEvent(-1)
-
-	def rightPressed(self):
-		if self.type == EPG_TYPE_MULTI:
-			self['list'].updateMultiEPG(1)
-		else:
-			self.updEvent(+1)
-
-	def Bouquetlist(self):
-		if not self.bouquetlist_active:
-			self.BouquetlistShow()
-		else:
-			self.BouquetlistHide()
-
-	def BouquetlistShow(self):
-		self.curindex = self['bouquetlist'].l.getCurrentSelectionIndex()
-		self["epgcursoractions"].setEnabled(False)
-		self["okactions"].setEnabled(False)
-		self['bouquetlist'].show()
-		self["bouquetokactions"].setEnabled(True)
-		self["bouquetcursoractions"].setEnabled(True)
-		self.bouquetlist_active = True
-
-	def BouquetlistHide(self, cancel=True):
-		self["bouquetokactions"].setEnabled(False)
-		self["bouquetcursoractions"].setEnabled(False)
-		self['bouquetlist'].hide()
-		if cancel:
-			self['bouquetlist'].setCurrentIndex(self.curindex)
-		self["okactions"].setEnabled(True)
-		self["epgcursoractions"].setEnabled(True)
-		self.bouquetlist_active = False
-
-	def getCurrentBouquet(self):
-		if self.BouquetRoot:
-			return self.StartBouquet
-		elif self.has_key('bouquetlist'):
-			cur = self["bouquetlist"].l.getCurrentSelection()
-			return cur and cur[1]
-		else:
-			return self.servicelist.getRoot()
-
-	def BouquetOK(self):
-		self.BouquetRoot = False
-		now = time() - int(config.epg.histminutes.value) * SECS_IN_MIN
-		self.services = self.getBouquetServices(self.getCurrentBouquet())
-		if self.type == EPG_TYPE_GRAPH or self.type == EPG_TYPE_INFOBARGRAPH:
-			if self.type == EPG_TYPE_GRAPH:
-				self.ask_time = self.ask_time = now - now % (int(config.epgselection.graph_roundto.value) * SECS_IN_MIN)
-			elif self.type == EPG_TYPE_INFOBARGRAPH:
-				self.ask_time = self.ask_time = now - now % (int(config.epgselection.infobar_roundto.value) * SECS_IN_MIN)
-			self['list'].setTimeFocus(time())
-			self['list'].fillGraphEPG(self.services, self.ask_time)
-			self.moveTimeLines(True)
-		elif self.type == EPG_TYPE_MULTI:
-			self['list'].fillMultiEPG(self.services, self.ask_time)
-		self['list'].instance.moveSelectionTo(0)
-		self.setTitle(self['bouquetlist'].getCurrentBouquet())
-		self.BouquetlistHide(False)
-
-	def moveBouquetUp(self):
-		self['bouquetlist'].moveTo(self['bouquetlist'].instance.moveUp)
-		self['bouquetlist'].fillBouquetList(self.bouquets)
-
-	def moveBouquetDown(self):
-		self['bouquetlist'].moveTo(self['bouquetlist'].instance.moveDown)
-		self['bouquetlist'].fillBouquetList(self.bouquets)
-
-	def moveBouquetPageUp(self):
-		self['bouquetlist'].moveTo(self['bouquetlist'].instance.pageUp)
-		self['bouquetlist'].fillBouquetList(self.bouquets)
-
-	def moveBouquetPageDown(self):
-		self['bouquetlist'].moveTo(self['bouquetlist'].instance.pageDown)
-		self['bouquetlist'].fillBouquetList(self.bouquets)
-
-	def nextBouquet(self):
-		if self.type == EPG_TYPE_MULTI or self.type == EPG_TYPE_GRAPH or self.type == EPG_TYPE_INFOBARGRAPH:
-			self.moveBouquetDown()
-			self.BouquetOK()
-		elif (self.type == EPG_TYPE_ENHANCED or self.type == EPG_TYPE_INFOBAR) and config.usage.multibouquet.value:
-			self.CurrBouquet = self.servicelist.getCurrentSelection()
-			self.CurrService = self.servicelist.getRoot()
-			self.servicelist.nextBouquet()
-			self.onCreate()
-
-	def prevBouquet(self):
-		if self.type == EPG_TYPE_MULTI or self.type == EPG_TYPE_GRAPH or self.type == EPG_TYPE_INFOBARGRAPH:
-			self.moveBouquetUp()
-			self.BouquetOK()
-		elif (self.type == EPG_TYPE_ENHANCED or self.type == EPG_TYPE_INFOBAR) and config.usage.multibouquet.value:
-			self.CurrBouquet = self.servicelist.getCurrentSelection()
-			self.CurrService = self.servicelist.getRoot()
-			self.servicelist.prevBouquet()
-			self.onCreate()
-
-	def nextService(self):
-		if self.type == EPG_TYPE_ENHANCED or self.type == EPG_TYPE_INFOBAR:
-			self.CurrBouquet = self.servicelist.getCurrentSelection()
-			self.CurrService = self.servicelist.getRoot()
-			self['list'].instance.moveSelectionTo(0)
-			if self.servicelist.inBouquet():
-				prev = self.servicelist.getCurrentSelection()
-				if prev:
-					prev = prev.toString()
-					while True:
-						if config.usage.quickzap_bouquet_change.value and self.servicelist.atEnd():
-							self.servicelist.nextBouquet()
-						else:
-							self.servicelist.moveDown()
-						cur = self.servicelist.getCurrentSelection()
-						if not cur or (not (cur.flags & 64)) or cur.toString() == prev:
-							break
-			else:
-				self.servicelist.moveDown()
-			if self.isPlayable():
-				self.onCreate()
-				if not self['list'].getCurrent()[1] and config.epgselection.overjump.value:
-					self.nextService()
-			else:
-				self.nextService()
-		elif self.type == EPG_TYPE_GRAPH or self.type == EPG_TYPE_INFOBARGRAPH:
-			self.updEvent(+24)
-		elif self.serviceChangeCB:
-			self.serviceChangeCB(1, self)
-
-	def prevService(self):
-		if self.type == EPG_TYPE_ENHANCED or self.type == EPG_TYPE_INFOBAR:
-			self.CurrBouquet = self.servicelist.getCurrentSelection()
-			self.CurrService = self.servicelist.getRoot()
-			self['list'].instance.moveSelectionTo(0)
-			if self.servicelist.inBouquet():
-				prev = self.servicelist.getCurrentSelection()
-				if prev:
-					prev = prev.toString()
-					while True:
-						if config.usage.quickzap_bouquet_change.value:
-							if self.servicelist.atBegin():
-								self.servicelist.prevBouquet()
-						self.servicelist.moveUp()
-						cur = self.servicelist.getCurrentSelection()
-						if not cur or (not (cur.flags & 64)) or cur.toString() == prev:
-							break
-			else:
-				self.servicelist.moveUp()
-			if self.isPlayable():
-				self.onCreate()
-				if not self['list'].getCurrent()[1] and config.epgselection.overjump.value:
-					self.prevService()
-			else:
-				self.prevService()
-		elif self.type == EPG_TYPE_GRAPH or self.type == EPG_TYPE_INFOBARGRAPH:
-			self.updEvent(-24)
-		elif self.serviceChangeCB:
-			self.serviceChangeCB(-1, self)
-
-	def enterDateTime(self):
-		global mepg_config_initialized
-		use_time = None
-		if self.type == EPG_TYPE_MULTI:
-			if not mepg_config_initialized:
-				config.misc.prev_mepg_time = ConfigClock(default=time())
-				mepg_config_initialized = True
-			use_time = config.misc.prev_mepg_time
-		elif self.type == EPG_TYPE_GRAPH:
-			use_time = config.epgselection.graph_prevtime
-		elif self.type == EPG_TYPE_INFOBARGRAPH:
-			use_time = config.epgselection.infobar_prevtime
-		if use_time:
-			self.session.openWithCallback(self.onDateTimeInputClosed, TimeDateInput, use_time)
-
-	def onDateTimeInputClosed(self, ret):
-		if len(ret) > 1:
-			if ret[0]:
-				self.ask_time = ret[1]
-				if self.type == EPG_TYPE_MULTI:
-					self['list'].fillMultiEPG(self.services, self.ask_time)
-				elif self.type == EPG_TYPE_GRAPH or self.type == EPG_TYPE_INFOBARGRAPH:
-					now = time() - int(config.epg.histminutes.value) * SECS_IN_MIN
-					if self.type == EPG_TYPE_GRAPH:
-						self.ask_time -= self.ask_time % (int(config.epgselection.graph_roundto.value) * SECS_IN_MIN)
-					elif self.type == EPG_TYPE_INFOBARGRAPH:
-						self.ask_time -= self.ask_time % (int(config.epgselection.infobar_roundto.value) * SECS_IN_MIN)
-					l = self['list']
-					# place the entered time halfway across the grid
-					l.setTimeFocus(self.ask_time)
-					l.fillGraphEPG(None, self.ask_time - l.getTimeEpoch() * SECS_IN_MIN / 2)
-					self.moveTimeLines(True)
-		if self.eventviewDialog and (self.type == EPG_TYPE_INFOBAR or self.type == EPG_TYPE_INFOBARGRAPH):
-			self.infoKeyPressed(True)
-
-	def infoKeyPressed(self, eventviewopen=False):
-		cur = self['list'].getCurrent()
-		event = cur[0]
-		service = cur[1]
-		if event is not None and not self.eventviewDialog and not eventviewopen:
-			if self.type != EPG_TYPE_SIMILAR:
-				if self.type == EPG_TYPE_INFOBARGRAPH:
-					self.eventviewDialog = self.session.instantiateDialog(EventViewSimple,event, service, skin='InfoBarEventView')
-					self.eventviewDialog.show()
-				else:
-					self.session.open(EventViewEPGSelect, event, service, callback=self.eventViewCallback, similarEPGCB=self.openSimilarList)
-		elif self.eventviewDialog and not eventviewopen:
-			self.eventviewDialog.hide()
-			del self.eventviewDialog
-			self.eventviewDialog = None
-		elif event is not None and self.eventviewDialog and eventviewopen:
-			if self.type != EPG_TYPE_SIMILAR:
-				if self.type == EPG_TYPE_INFOBAR or self.type == EPG_TYPE_INFOBARGRAPH:
-					self.eventviewDialog.hide()
-					self.eventviewDialog = self.session.instantiateDialog(EventViewSimple,event, service, skin='InfoBarEventView')
-					self.eventviewDialog.show()
-
+from Components.ActionMap import HelpableActionMap
+from Components.EpgList import EPG_TYPE_SINGLE
+from Screens.EpgSelectionChannel import EPGSelectionChannel
+
+
+# Keep for backwards compatibility with plugins, including the parameter naming.
+# This class assumes that EPGSelection is only used in the SingleEPG sense.
+class EPGSelection(EPGSelectionChannel):
+	def __init__(self, session, service=None, zapFunc=None, eventid=None, bouquetChangeCB=None, serviceChangeCB=None, EPGtype="similar", StartBouquet=None, StartRef=None, bouquets=None):
+		if EPGtype not in ("similar", "single"):
+			print "[EPGSelection] Warning: EPGSelection does not support type '%s'!" % EPGtype
+			print "               Attempting to continue in single EPG mode"
+		EPGSelectionChannel.__init__(self, session, service)
+
+		# Rewrite the EPG actions to invoke the compatibility functions.
+		helpDescription = _("EPG Commands")
+		self["epgactions"] = HelpableActionMap(self, "EPGSelectActions", {
+			"info": (self.Info, _("Show detailed event info")),
+			"epg": (self.epgButtonPressed, _("Show detailed event info")),
+			"menu": (self.createSetup, _("Setup menu"))
+		}, prio=-1, description=helpDescription)
+		self["colouractions"] = HelpableActionMap(self, "ColorActions", {
+			"red": (self.redButtonPressed, _("IMDB search for current event")),
+			"redlong": (self.redButtonPressedLong, _("Sort EPG list")),
+			"green": (self.greenButtonPressed, _("Add/Remove timer for current event")),
+			"greenlong": (self.greenButtonPressedLong, _("Show timer list")),
+			"yellow": (self.yellowButtonPressed, _("Search for similar events")),
+			"blue": (self.blueButtonPressed, _("Add an autotimer for current event")),
+			"bluelong": (self.blueButtonPressedLong, _("Show autotimer list"))
+		}, prio=-1, description=helpDescription)
+
+	# Backwards compatibility properties for plugins.
+	@property
+	def ChoiceBoxDialog(self):
+		return self.choiceBoxDialog
+
+	@ChoiceBoxDialog.setter
+	def ChoiceBoxDialog(self, value):
+		self.choiceBoxDialog = value
+
+	# Backwards compatibility functions for plugins.
+	# Button names.
 	def redButtonPressed(self):
-		self.closeEventViewDialog()
-		from InfoBar import InfoBar
-		InfoBarInstance = InfoBar.instance
-		if not InfoBarInstance.LongButtonPressed:
-			self.openIMDb()
+		self.openIMDb()
 
 	def redButtonPressedLong(self):
-		self.closeEventViewDialog()
-		from InfoBar import InfoBar
-		InfoBarInstance = InfoBar.instance
-		if InfoBarInstance.LongButtonPressed:
-			self.sortEpg()
+		self.sortEpg()
 
 	def greenButtonPressed(self):
-		self.closeEventViewDialog()
-		from InfoBar import InfoBar
-		InfoBarInstance = InfoBar.instance
-		if not InfoBarInstance.LongButtonPressed:
-			self.RecordTimerQuestion(True)
+		self.addEditTimer()
 
 	def greenButtonPressedLong(self):
-		self.closeEventViewDialog()
-		from InfoBar import InfoBar
-		InfoBarInstance = InfoBar.instance
-		if InfoBarInstance.LongButtonPressed:
-			self.showTimerList()
+		self.showTimerList()
 
 	def yellowButtonPressed(self):
-		self.closeEventViewDialog()
-		from InfoBar import InfoBar
-		InfoBarInstance = InfoBar.instance
-		if not InfoBarInstance.LongButtonPressed:
-			self.openEPGSearch()
+		self.openEPGSearch()
 
 	def blueButtonPressed(self):
-		self.closeEventViewDialog()
-		from InfoBar import InfoBar
-		InfoBarInstance = InfoBar.instance
-		if not InfoBarInstance.LongButtonPressed:
-			self.addAutoTimer()
+		self.addAutoTimer()
 
 	def blueButtonPressedLong(self):
-		self.closeEventViewDialog()
-		from InfoBar import InfoBar
-		InfoBarInstance = InfoBar.instance
-		if InfoBarInstance.LongButtonPressed:
-			self.showAutoTimerList()
-
-	def openSimilarList(self, eventid, refstr):
-		self.session.open(EPGSelection, refstr, None, eventid)
-
-	def setServices(self, services):
-		self.services = services
-		self.onCreate()
-
-	def setService(self, service):
-		self.currentService = service
-		self.onCreate()
+		self.showAutoTimerList()
 
-	def eventViewCallback(self, setEvent, setService, val):
-		l = self['list']
-		old = l.getCurrent()
-		if self.type == EPG_TYPE_GRAPH or self.type == EPG_TYPE_INFOBARGRAPH:
-			self.updEvent(val, False)
-		elif val == -1:
-			self.moveUp()
-		elif val == +1:
-			self.moveDown()
-		cur = l.getCurrent()
-		if (self.type == EPG_TYPE_MULTI or self.type == EPG_TYPE_GRAPH or self.type == EPG_TYPE_INFOBARGRAPH) and cur[0] is None and cur[1].ref != old[1].ref:
-			self.eventViewCallback(setEvent, setService, val)
-		else:
-			setService(cur[1])
-			setEvent(cur[0])
-
-	def eventSelected(self):
+	def Info(self):
 		self.infoKeyPressed()
 
-	def sortEpg(self):
-		if self.type == EPG_TYPE_SINGLE or self.type == EPG_TYPE_ENHANCED or self.type == EPG_TYPE_INFOBAR:
-			if config.epgselection.sort.value == '0':
-				config.epgselection.sort.setValue('1')
-			else:
-				config.epgselection.sort.setValue('0')
-			config.epgselection.sort.save()
-			configfile.save()
-			self['list'].sortSingleEPG(int(config.epgselection.sort.value))
-
-	def OpenSingleEPG(self):
-		cur = self['list'].getCurrent()
-		if cur[0] is not None:
-			event = cur[0]
-			serviceref = cur[1].ref
-			if serviceref is not None:
-				self.session.open(SingleEPG, serviceref)
-
-	def openIMDb(self):
-		try:
-			from Plugins.Extensions.IMDb.plugin import IMDB, IMDBEPGSelection
-			try:
-				cur = self['list'].getCurrent()
-				event = cur[0]
-				name = event.getEventName()
-			except:
-				name = ''
-
-			self.session.open(IMDB, name, False)
-		except ImportError:
-			self.session.open(MessageBox, _('The IMDb plugin is not installed!\nPlease install it.'), type=MessageBox.TYPE_INFO, timeout=10)
-
-	def openEPGSearch(self):
-		try:
-			from Plugins.Extensions.EPGSearch.EPGSearch import EPGSearch
-			try:
-				cur = self['list'].getCurrent()
-				event = cur[0]
-				name = event.getEventName()
-			except:
-				name = ''
-			self.session.open(EPGSearch, name, False)
-		except ImportError:
-			self.session.open(MessageBox, _('The EPGSearch plugin is not installed!\nPlease install it.'), type=MessageBox.TYPE_INFO, timeout=10)
+	def InfoLong(self):
+		self.OpenSingleEPG()
 
-	def addAutoTimer(self):
-		try:
-			from Plugins.Extensions.AutoTimer.AutoTimerEditor import addAutotimerFromEvent
-			cur = self['list'].getCurrent()
-			event = cur[0]
-			if not event:
-				return
-			serviceref = cur[1]
-			addAutotimerFromEvent(self.session, evt=event, service=serviceref)
-			self.refreshTimer.start(3000)
-		except ImportError:
-			self.session.open(MessageBox, _('The AutoTimer plugin is not installed!\nPlease install it.'), type=MessageBox.TYPE_INFO, timeout=10)
+	def infoKeyPressed(self):
+		self.openEventView()
 
-	def addAutoTimerSilent(self):
-		try:
-			from Plugins.Extensions.AutoTimer.AutoTimerEditor import addAutotimerFromEventSilent
-			cur = self['list'].getCurrent()
-			event = cur[0]
-			if not event:
-				return
-			serviceref = cur[1]
-			addAutotimerFromEventSilent(self.session, evt=event, service=serviceref)
-			self.refreshTimer.start(3000)
-		except ImportError:
-			self.session.open(MessageBox, _('The Autotimer plugin is not installed!\nPlease install it.'), type=MessageBox.TYPE_INFO, timeout=10)
+	def epgButtonPressed(self):
+		self.openEventView()
 
+	# Actions
 	def showTimerList(self):
-		from Screens.TimerEdit import TimerEditList
-		self.session.open(TimerEditList)
+		self.openTimerList()
 
 	def showAutoTimerList(self):
-		global autopoller
-		global autotimer
-		try:
-			from Plugins.Extensions.AutoTimer.plugin import main, autostart
-			from Plugins.Extensions.AutoTimer.AutoTimer import AutoTimer
-			from Plugins.Extensions.AutoTimer.AutoPoller import AutoPoller
-			autopoller = AutoPoller()
-			autotimer = AutoTimer()
-			try:
-				autotimer.readXml()
-			except SyntaxError as se:
-				self.session.open(MessageBox, _('Your config file is not well formed:\n%s') % str(se), type=MessageBox.TYPE_ERROR, timeout=10)
-				return
-
-			if autopoller is not None:
-				autopoller.stop()
-			from Plugins.Extensions.AutoTimer.AutoTimerOverview import AutoTimerOverview
-			self.session.openWithCallback(self.editCallback, AutoTimerOverview, autotimer)
-		except ImportError:
-			self.session.open(MessageBox, _('The Autotimer plugin is not installed!\nPlease install it.'), type=MessageBox.TYPE_INFO, timeout=10)
-
-	def editCallback(self, session):
-		global autopoller
-		global autotimer
-		if session is not None:
-			autotimer.writeXml()
-			autotimer.parseEPG()
-		if config.plugins.autotimer.autopoll.value:
-			if autopoller is None:
-				from Plugins.Extensions.AutoTimer.AutoPoller import AutoPoller
-				autopoller = AutoPoller()
-			autopoller.start()
-		else:
-			autopoller = None
-			autotimer = None
+		self.openAutoTimerList()
 
-	def timerAdd(self):
-		self.RecordTimerQuestion(True)
-
-	def editTimer(self, timer):
-		self.session.open(TimerEntry, timer)
-
-	def removeTimer(self, timer):
-		self.closeChoiceBoxDialog()
-		timer.afterEvent = AFTEREVENT.NONE
-		self.session.nav.RecordTimer.removeEntry(timer)
-		self['key_green'].setText(_('Add Timer'))
-		self.key_green_choice = self.ADD_TIMER
-		self.getCurrentCursorLocation = self['list'].getCurrentCursorLocation()
-		self.refreshlist()
+	def OpenSingleEPG(self):
+		self.openSingleEPG()
 
-	def disableTimer(self, timer):
-		self.closeChoiceBoxDialog()
-		timer.disable()
-		self.session.nav.RecordTimer.timeChanged(timer)
-		self['key_green'].setText(_('Add Timer'))
-		self.key_green_choice = self.ADD_TIMER
-		self.getCurrentCursorLocation = self['list'].getCurrentCursorLocation()
-		self.refreshlist()
+	def sortEpg(self):
+		self.sortEPG(self)
 
 	def RecordTimerQuestion(self, manual=False):
-		cur = self['list'].getCurrent()
-		event = cur[0]
-		serviceref = cur[1]
-		if event is None:
-			return
-		eventid = event.getEventId()
-		refstr = ':'.join(serviceref.ref.toString().split(':')[:11])
-		title = None
-		for timer in self.session.nav.RecordTimer.timer_list:
-			if timer.eit == eventid and ':'.join(timer.service_ref.ref.toString().split(':')[:11]) == refstr:
-				cb_func1 = lambda ret: self.removeTimer(timer)
-				cb_func2 = lambda ret: self.editTimer(timer)
-				cb_func3 = lambda ret: self.disableTimer(timer)
-				menu = [(_("Delete timer"), 'CALLFUNC', self.RemoveChoiceBoxCB, cb_func1), (_("Edit timer"), 'CALLFUNC', self.RemoveChoiceBoxCB, cb_func2), (_("Disable timer"), 'CALLFUNC', self.RemoveChoiceBoxCB, cb_func3)]
-				title = _("Select action for timer %s:") % event.getEventName()
-				break
-		else:
-			if not manual:
-				menu = [(_("Add Timer"), 'CALLFUNC', self.ChoiceBoxCB, self.doRecordTimer), (_("Add AutoTimer"), 'CALLFUNC', self.ChoiceBoxCB, self.addAutoTimerSilent)]
-				title = "%s?" % event.getEventName()
-			else:
-				newEntry = RecordTimerEntry(serviceref, checkOldTimers=True, dirname=preferredTimerPath(), *parseEvent(event))
-				self.session.openWithCallback(self.finishedAdd, TimerEntry, newEntry)
-		if title:
-			self.ChoiceBoxDialog = self.session.instantiateDialog(ChoiceBox, title=title, list=menu, keys=['green', 'blue'], skin_name="RecordTimerQuestion")
-			serviceref = eServiceReference(str(self['list'].getCurrent()[1]))
-			posy = self['list'].getSelectionPosition(serviceref)
-			self.ChoiceBoxDialog.instance.move(ePoint(posy[0]-self.ChoiceBoxDialog.instance.size().width(),self.instance.position().y()+posy[1]))
-			self.showChoiceBoxDialog()
-
-	def recButtonPressed(self):
-		from InfoBar import InfoBar
-		InfoBarInstance = InfoBar.instance
-		if not InfoBarInstance.LongButtonPressed:
-			self.RecordTimerQuestion()
-
-	def recButtonPressedLong(self):
-		from InfoBar import InfoBar
-		InfoBarInstance = InfoBar.instance
-		if InfoBarInstance.LongButtonPressed:
-			self.doZapTimer()
-
-	def RemoveChoiceBoxCB(self, choice):
-		self.closeChoiceBoxDialog()
-		if choice:
-			choice(self)
-
-	def ChoiceBoxCB(self, choice):
-		self.closeChoiceBoxDialog()
-		if choice:
-			try:
-				choice()
-			except:
-				choice
-
-	def showChoiceBoxDialog(self):
-		self['okactions'].setEnabled(False)
-		if self.has_key('epgcursoractions'):
-			self['epgcursoractions'].setEnabled(False)
-		self['colouractions'].setEnabled(False)
-		self['recordingactions'].setEnabled(False)
-		self['epgactions'].setEnabled(False)
-		self["dialogactions"].setEnabled(True)
-		self.ChoiceBoxDialog['actions'].execBegin()
-		self.ChoiceBoxDialog.show()
-		if self.has_key('input_actions'):
-			self['input_actions'].setEnabled(False)
-
-	def closeChoiceBoxDialog(self):
-		self["dialogactions"].setEnabled(False)
-		if self.ChoiceBoxDialog:
-			self.ChoiceBoxDialog['actions'].execEnd()
-			self.session.deleteDialog(self.ChoiceBoxDialog)
-		self['okactions'].setEnabled(True)
-		if self.has_key('epgcursoractions'):
-			self['epgcursoractions'].setEnabled(True)
-		self['colouractions'].setEnabled(True)
-		self['recordingactions'].setEnabled(True)
-		self['epgactions'].setEnabled(True)
-		if self.has_key('input_actions'):
-			self['input_actions'].setEnabled(True)
-
-	def doRecordTimer(self):
-		self.doInstantTimer(0)
-
-	def doZapTimer(self):
-		self.doInstantTimer(1)
-
-	def doInstantTimer(self, zap):
-		cur = self['list'].getCurrent()
-		event = cur[0]
-		serviceref = cur[1]
-		if event is None:
-			return
-		eventid = event.getEventId()
-		refstr = serviceref.ref.toString()
-		newEntry = RecordTimerEntry(serviceref, checkOldTimers=True, *parseEvent(event))
-		self.InstantRecordDialog = self.session.instantiateDialog(InstantRecordTimerEntry, newEntry, zap)
-		retval = [True, self.InstantRecordDialog.retval()]
-		self.session.deleteDialogWithCallback(self.finishedAdd, self.InstantRecordDialog, retval)
-
-	def finishedAdd(self, answer):
-		if answer[0]:
-			entry = answer[1]
-			simulTimerList = self.session.nav.RecordTimer.record(entry)
-			if simulTimerList is not None:
-				for x in simulTimerList:
-					if x.setAutoincreaseEnd(entry):
-						self.session.nav.RecordTimer.timeChanged(x)
-				simulTimerList = self.session.nav.RecordTimer.record(entry)
-				if simulTimerList is not None:
-					if not entry.repeated and not config.recording.margin_before.value and not config.recording.margin_after.value and len(simulTimerList) > 1:
-						change_time = False
-						conflict_begin = simulTimerList[1].begin
-						conflict_end = simulTimerList[1].end
-						if conflict_begin == entry.end:
-							entry.end -= 30
-							change_time = True
-						elif entry.begin == conflict_end:
-							entry.begin += 30
-							change_time = True
-						if change_time:
-							simulTimerList = self.session.nav.RecordTimer.record(entry)
-					if simulTimerList is not None:
-						self.session.openWithCallback(self.finishSanityCorrection, TimerSanityConflict, simulTimerList)
-			self["key_green"].setText(_("Change timer"))
-			self.key_green_choice = self.REMOVE_TIMER
-		else:
-			self['key_green'].setText(_('Add Timer'))
-			self.key_green_choice = self.ADD_TIMER
-		self.getCurrentCursorLocation = self['list'].getCurrentCursorLocation()
-		self.refreshlist()
+		self.recordTimerQuestion(manual)
 
-	def finishSanityCorrection(self, answer):
-		self.finishedAdd(answer)
-
-	def OK(self):
-		from InfoBar import InfoBar
-		InfoBarInstance = InfoBar.instance
-		if not InfoBarInstance.LongButtonPressed:
-			if self.zapnumberstarted:
-				self.dozumberzap()
-			else:
-				if config.epgselection.graph_ok.value == 'Zap' or config.epgselection.enhanced_ok.value == 'Zap' or config.epgselection.infobar_ok.value == 'Zap' or config.epgselection.multi_ok.value == 'Zap':
-					self.zapTo()
-				if config.epgselection.graph_ok.value == 'Zap + Exit' or config.epgselection.enhanced_ok.value == 'Zap + Exit' or config.epgselection.infobar_ok.value == 'Zap + Exit' or config.epgselection.multi_ok.value == 'Zap + Exit':
-					self.zap()
-
-	def OKLong(self):
-		from InfoBar import InfoBar
-		InfoBarInstance = InfoBar.instance
-		if InfoBarInstance.LongButtonPressed:
-			if self.zapnumberstarted:
-				self.dozumberzap()
-			else:
-				if config.epgselection.graph_oklong.value == 'Zap' or config.epgselection.enhanced_oklong.value == 'Zap' or config.epgselection.infobar_oklong.value == 'Zap' or config.epgselection.multi_oklong.value == 'Zap':
-					self.zapTo()
-				if config.epgselection.graph_oklong.value == 'Zap + Exit' or config.epgselection.enhanced_oklong.value == 'Zap + Exit' or config.epgselection.infobar_oklong.value == 'Zap + Exit' or config.epgselection.multi_oklong.value == 'Zap + Exit':
-					self.zap()
-
-	def epgButtonPressed(self):
-		self.OpenSingleEPG()
-
-	def Info(self):
-		from InfoBar import InfoBar
-		InfoBarInstance = InfoBar.instance
-		if not InfoBarInstance.LongButtonPressed:
-			if self.type == EPG_TYPE_GRAPH and config.epgselection.graph_info.value == 'Channel Info':
-				self.infoKeyPressed()
-			elif self.type == EPG_TYPE_GRAPH and config.epgselection.graph_info.value == 'Single EPG':
-				self.OpenSingleEPG()
-			else:
-				self.infoKeyPressed()
-
-	def InfoLong(self):
-		from InfoBar import InfoBar
-		InfoBarInstance = InfoBar.instance
-		if InfoBarInstance.LongButtonPressed:
-			if self.type == EPG_TYPE_GRAPH and config.epgselection.graph_infolong.value == 'Channel Info':
-				self.infoKeyPressed()
-			elif self.type == EPG_TYPE_GRAPH and config.epgselection.graph_infolong.value == 'Single EPG':
-				self.OpenSingleEPG()
-			else:
-				self.OpenSingleEPG()
-
-	def applyButtonState(self, state):
-		if state == 0:
-			self['now_button'].hide()
-			self['now_button_sel'].hide()
-			self['next_button'].hide()
-			self['next_button_sel'].hide()
-			self['more_button'].hide()
-			self['more_button_sel'].hide()
-			self['now_text'].hide()
-			self['next_text'].hide()
-			self['more_text'].hide()
-			self['key_red'].setText('')
-		else:
-			if state == 1:
-				self['now_button_sel'].show()
-				self['now_button'].hide()
-			else:
-				self['now_button'].show()
-				self['now_button_sel'].hide()
-			if state == 2:
-				self['next_button_sel'].show()
-				self['next_button'].hide()
-			else:
-				self['next_button'].show()
-				self['next_button_sel'].hide()
-			if state == 3:
-				self['more_button_sel'].show()
-				self['more_button'].hide()
-			else:
-				self['more_button'].show()
-				self['more_button_sel'].hide()
-
-	def onSelectionChanged(self):
-		cur = self['list'].getCurrent()
-		event = cur[0]
-		self['Event'].newEvent(event)
-		if cur[1] is None:
-			self['Service'].newService(None)
-		else:
-			self['Service'].newService(cur[1].ref)
-		if self.type == EPG_TYPE_MULTI:
-			count = self['list'].getCurrentChangeCount()
-			if self.ask_time != -1:
-				self.applyButtonState(0)
-			elif count > 1:
-				self.applyButtonState(3)
-			elif count > 0:
-				self.applyButtonState(2)
-			else:
-				self.applyButtonState(1)
-			datestr = ''
-			if event is not None:
-				now = time()
-				beg = event.getBeginTime()
-				nowTime = localtime(now)
-				begTime = localtime(beg)
-				if nowTime[2] != begTime[2]:
-					datestr = strftime(config.usage.date.dayshort.value, begTime)
-				else:
-					datestr = '%s' % _('Today')
-			self['date'].setText(datestr)
-		if cur[1] is None or cur[1].getServiceName() == '':
-			if self.key_green_choice != self.EMPTY:
-				self['key_green'].setText('')
-				self.key_green_choice = self.EMPTY
-			return
-		if event is None:
-			if self.key_green_choice != self.EMPTY:
-				self['key_green'].setText('')
-				self.key_green_choice = self.EMPTY
-			return
-		serviceref = cur[1]
-		eventid = event.getEventId()
-		refstr = ':'.join(serviceref.ref.toString().split(':')[:11])
-		isRecordEvent = False
-		for timer in self.session.nav.RecordTimer.timer_list:
-			if timer.eit == eventid and ':'.join(timer.service_ref.ref.toString().split(':')[:11]) == refstr:
-				isRecordEvent = True
-				break
-		if isRecordEvent and self.key_green_choice != self.REMOVE_TIMER:
-			self["key_green"].setText(_("Change timer"))
-			self.key_green_choice = self.REMOVE_TIMER
-		elif not isRecordEvent and self.key_green_choice != self.ADD_TIMER:
-			self['key_green'].setText(_('Add Timer'))
-			self.key_green_choice = self.ADD_TIMER
-		if self.eventviewDialog and (self.type == EPG_TYPE_INFOBAR or self.type == EPG_TYPE_INFOBARGRAPH):
-			self.infoKeyPressed(True)
-
-	def moveTimeLines(self, force = False):
-		self.updateTimelineTimer.start((60 - int(time()) % 60) * 1000)
-		self['timeline_text'].setEntries(self['list'], self['timeline_now'], self.time_lines, force)
-		self['list'].l.invalidate()
-
-	def isPlayable(self):
-		current = ServiceReference(self.servicelist.getCurrentSelection())
-		return not current.ref.flags & (eServiceReference.isMarker | eServiceReference.isDirectory)
-
-	def setServicelistSelection(self, bouquet, service):
-		if self.servicelist:
-			if self.servicelist.getRoot() != bouquet:
-				self.servicelist.clearPath()
-				self.servicelist.enterPath(self.servicelist.bouquet_root)
-				self.servicelist.enterPath(bouquet)
-			self.servicelist.setCurrentSelection(service)
-
-	def closeEventViewDialog(self):
-		if self.eventviewDialog:
-			self.eventviewDialog.hide()
-			del self.eventviewDialog
-			self.eventviewDialog = None
-
-	def closeScreen(self):
-		if self.type == EPG_TYPE_SINGLE:
-			self.close()
-			return # stop and do not continue.
-		if self.session.nav.getCurrentlyPlayingServiceOrGroup() and self.StartRef and self.session.nav.getCurrentlyPlayingServiceOrGroup().toString() != self.StartRef.toString():
-			if self.zapFunc and self.StartRef and self.StartBouquet:
-				if ((self.type == EPG_TYPE_GRAPH and config.epgselection.graph_preview_mode.value) or
-					(self.type == EPG_TYPE_MULTI and config.epgselection.multi_preview_mode.value) or
-					(self.type in (EPG_TYPE_INFOBAR, EPG_TYPE_INFOBARGRAPH) and config.epgselection.infobar_preview_mode.value in ('1', '2')) or
-					(self.type == EPG_TYPE_ENHANCED and config.epgselection.enhanced_preview_mode.value)):
-					if '0:0:0:0:0:0:0:0:0' not in self.StartRef.toString():
-						self.zapFunc(None, zapback = True)
-				elif '0:0:0:0:0:0:0:0:0' in self.StartRef.toString():
-					self.session.nav.playService(self.StartRef)
-				else:
-					self.zapFunc(None, False)
-		if self.session.pipshown:
-			self.session.pipshown = False
-			del self.session.pip
-		self.closeEventViewDialog()
-		self.close(True)
-
-	def zap(self):
-		if self.zapFunc:
-			self.zapSelectedService()
-			self.closeEventViewDialog()
-			self.close(True)
-		else:
-			self.closeEventViewDialog()
-			self.close()
-
-	def zapSelectedService(self, prev=False):
-		currservice = self.session.nav.getCurrentlyPlayingServiceReference() and str(self.session.nav.getCurrentlyPlayingServiceReference().toString()) or None
-		if self.session.pipshown:
-			self.prevch = self.session.pip.getCurrentService() and str(self.session.pip.getCurrentService().toString()) or None
-		else:
-			self.prevch = self.session.nav.getCurrentlyPlayingServiceReference() and str(self.session.nav.getCurrentlyPlayingServiceReference().toString()) or None
-		lst = self["list"]
-		count = lst.getCurrentChangeCount()
-		if count == 0:
-			ref = lst.getCurrent()[1]
-			if ref is not None:
-				if (self.type == EPG_TYPE_INFOBAR or self.type == EPG_TYPE_INFOBARGRAPH) and config.epgselection.infobar_preview_mode.value == '2':
-					if not prev:
-						if self.session.pipshown:
-							self.session.pipshown = False
-							del self.session.pip
-						self.zapFunc(ref.ref, bouquet = self.getCurrentBouquet(), preview = False)
-						return
-					if not self.session.pipshown:
-						self.session.pip = self.session.instantiateDialog(PictureInPicture)
-						self.session.pip.show()
-						self.session.pipshown = True
-					n_service = self.pipServiceRelation.get(str(ref.ref), None)
-					if n_service is not None:
-						service = eServiceReference(n_service)
-					else:
-						service = ref.ref
-					if self.currch == service.toString():
-						if self.session.pipshown:
-							self.session.pipshown = False
-							del self.session.pip
-						self.zapFunc(ref.ref, bouquet = self.getCurrentBouquet(), preview = False)
-						return
-					if self.prevch != service.toString() and currservice != service.toString():
-						self.session.pip.playService(service)
-						self.currch = self.session.pip.getCurrentService() and str(self.session.pip.getCurrentService().toString())
-				else:
-					self.zapFunc(ref.ref, bouquet = self.getCurrentBouquet(), preview = prev)
-					self.currch = self.session.nav.getCurrentlyPlayingServiceReference() and str(self.session.nav.getCurrentlyPlayingServiceReference().toString())
-				self['list'].setCurrentlyPlaying(self.session.nav.getCurrentlyPlayingServiceOrGroup())
-
-	def zapTo(self):
-		if self.session.nav.getCurrentlyPlayingServiceOrGroup() and '0:0:0:0:0:0:0:0:0' in self.session.nav.getCurrentlyPlayingServiceOrGroup().toString():
-			from Screens.InfoBarGenerics import setResumePoint
-			setResumePoint(self.session)
-		if self.zapFunc:
-			self.zapSelectedService(True)
-			self.refreshTimer.start(2000)
-		if not self.currch or self.currch == self.prevch:
-			if self.zapFunc:
-				self.zapFunc(None, False)
-				self.closeEventViewDialog()
-				self.close('close')
-			else:
-				self.closeEventViewDialog()
-				self.close()
-
-	def keyNumberGlobal(self, number):
-		if self.type == EPG_TYPE_GRAPH or self.type == EPG_TYPE_INFOBARGRAPH:
-# Set up some values for the differences
-#
-			tp_var, rndto_var, pthr_var, ptmin_var = {
-				EPG_TYPE_GRAPH:        (config.epgselection.graph_prevtimeperiod, config.epgselection.graph_roundto,
-							config.epgselection.graph_primetimehour, config.epgselection.graph_primetimemins),
-				EPG_TYPE_INFOBARGRAPH: (config.epgselection.infobar_prevtimeperiod, config.epgselection.infobar_roundto,
-							config.epgselection.infobar_primetimehour, config.epgselection.infobar_primetimemins),
-				}[self.type]
-			if number == 1:
-				timeperiod = int(tp_var.value)
-				if timeperiod > 60:
-					timeperiod -= 30
-					self['list'].setTimeEpoch(timeperiod)
-					tp_var.setValue(str(timeperiod))
-					self.moveTimeLines()
-			elif number == 2:
-				self.prevPage()
-			elif number == 3:
-				timeperiod = int(tp_var.value)
-				if timeperiod < 300:
-					timeperiod += 30
-					self['list'].setTimeEpoch(timeperiod)
-					tp_var.setValue(str(timeperiod))
-					self.moveTimeLines()
-			elif number == 4:
-				self.updEvent(-2)
-			elif number == 5:
-				now = time() - int(config.epg.histminutes.value) * SECS_IN_MIN
-				self.ask_time = now - now % (int(rndto_var.value) * SECS_IN_MIN)
-				self['list'].setTimeFocus(time())
-				self['list'].fillGraphEPG(None, self.ask_time)
-				self.moveTimeLines(True)
-			elif number == 6:
-				self.updEvent(+2)
-			elif number == 7 and (self.type == EPG_TYPE_GRAPH):
-				if config.epgselection.graph_heightswitch.value:
-					config.epgselection.graph_heightswitch.setValue(False)
-				else:
-					config.epgselection.graph_heightswitch.setValue(True)
-				self['list'].setItemsPerPage()
-				self['list'].fillGraphEPG(None)
-				self.moveTimeLines()
-			elif number == 8:
-				self.nextPage()
-			elif number == 9:
-				basetime = localtime(self['list'].getTimeBase())
-				basetime = (basetime[0], basetime[1], basetime[2], int(pthr_var.value), int(ptmin_var.value), 0, basetime[6], basetime[7], basetime[8])
-				self.ask_time = mktime(basetime)
-				if self.ask_time + 3600 < time():
-					self.ask_time += 86400
-				self['list'].fillGraphEPG(None, self.ask_time)
-				self.moveTimeLines(True)
-			elif number == 0:
-				self.toTop()
-				now = time() - int(config.epg.histminutes.value) * SECS_IN_MIN
-				self.ask_time = now - now % (int(rndto_var.value) * SECS_IN_MIN)
-				self['list'].setTimeFocus(time())
-				self['list'].fillGraphEPG(None, self.ask_time)
-				self.moveTimeLines()
-		else:
-			self.zapnumberstarted = True
-			self.NumberZapTimer.start(5000, True)
-			if not self.NumberZapField:
-				self.NumberZapField = str(number)
-			else:
-				self.NumberZapField += str(number)
-			self.handleServiceName()
-			self["number"].setText(self.zaptoservicename+'\n'+self.NumberZapField)
-			self["number"].show()
-			if len(self.NumberZapField) >= 4:
-				self.dozumberzap()
-
-	def dozumberzap(self):
-		self.zapnumberstarted = False
-		self.numberEntered(self.service, self.bouquet)
-
-	def handleServiceName(self):
-		if self.searchNumber:
-			self.service, self.bouquet = self.searchNumber(int(self.NumberZapField))
-			self.zaptoservicename = ServiceReference(self.service).getServiceName()
-
-	def numberEntered(self, service = None, bouquet = None):
-		if service is not None:
-			self.zapToNumber(service, bouquet)
-
-	def searchNumberHelper(self, serviceHandler, num, bouquet):
-		servicelist = serviceHandler.list(bouquet)
-		if servicelist is not None:
-			serviceIterator = servicelist.getNext()
-			while serviceIterator.valid():
-				if num == serviceIterator.getChannelNum():
-					return serviceIterator
-				serviceIterator = servicelist.getNext()
-		return None
-
-	def searchNumber(self, number):
-		bouquet = self.servicelist.getRoot()
-		service = None
-		serviceHandler = eServiceCenter.getInstance()
-		service = self.searchNumberHelper(serviceHandler, number, bouquet)
-		if config.usage.multibouquet.value:
-			service = self.searchNumberHelper(serviceHandler, number, bouquet)
-			if service is None:
-				bouquet = self.servicelist.bouquet_root
-				bouquetlist = serviceHandler.list(bouquet)
-				if bouquetlist is not None:
-					bouquet = bouquetlist.getNext()
-					while bouquet.valid():
-						if bouquet.flags & eServiceReference.isDirectory:
-							service = self.searchNumberHelper(serviceHandler, number, bouquet)
-							if service is not None:
-								playable = not service.flags & (eServiceReference.isMarker | eServiceReference.isDirectory) or service.flags & eServiceReference.isNumberedMarker
-								if not playable:
-									service = None
-								break
-							if config.usage.alternative_number_mode.value:
-								break
-						bouquet = bouquetlist.getNext()
-		return service, bouquet
-
-	def zapToNumber(self, service, bouquet):
-		self["number"].hide()
-		self.NumberZapField = None
-		self.CurrBouquet = bouquet
-		self.CurrService = service
-		if service is not None:
-			self.setServicelistSelection(bouquet, service)
-		self.onCreate()
-
-class SingleEPG(EPGSelection):
-	def __init__(self, session, service, EPGtype="single"):
-		EPGSelection.__init__(self, session, service=service, EPGtype=EPGtype)
-		self.skinName = 'EPGSelection'
+	# Things that need to be able to be overridden.
+	def refreshList(self):
+		try:
+			# Allow plugins to override using the old all lowercase method name.
+			self.refreshlist()
+		except AttributeError:
+			EPGSelectionChannel.refreshList(self)
diff --git a/lib/python/Screens/EventView.py b/lib/python/Screens/EventView.py
index 3354f53..0cd2f63 100644
--- a/lib/python/Screens/EventView.py
+++ b/lib/python/Screens/EventView.py
@@ -50,7 +50,7 @@ class EventViewBase:
 		self.similarEPGCB = similarEPGCB
 		self.cbFunc = callback
 		self.currentService = ref
-		self.isRecording = (not ref.ref.flags & eServiceReference.isGroup) and ref.ref.getPath()
+		self.isRecording = (not ref.ref.flags & eServiceReference.isGroup) and ref.ref.getPath() and ref.ref.getPath()[0] == '/'
 		self.event = event
 		self["Service"] = ServiceEvent()
 		self["Event"] = Event()
@@ -102,7 +102,7 @@ class EventViewBase:
 		self.session.nav.RecordTimer.removeEntry(timer)
 		self["key_green"].setText(_("Add timer"))
 		self.key_green_choice = self.ADD_TIMER
-	
+
 	def timerAdd(self):
 		if self.isRecording:
 			return
@@ -342,7 +342,7 @@ class EventViewEPGSelect(Screen, EventViewBase):
 		else:
 			self["key_yellow"] = Button("")
 			self["yellow"].hide()
-			
+
 		if multiEPGCB:
 			self["key_blue"] = Button(_("Multi EPG"))
 			self["epgactions3"] = ActionMap(["EventViewEPGActions"],
diff --git a/lib/python/Screens/InfoBar.py b/lib/python/Screens/InfoBar.py
index c3da39a..0d4106a 100644
--- a/lib/python/Screens/InfoBar.py
+++ b/lib/python/Screens/InfoBar.py
@@ -1,3 +1,4 @@
+import os
 from Tools.Profile import profile
 
 # workaround for required config entry dependencies.
@@ -96,7 +97,7 @@ class InfoBar(InfoBarBase, InfoBarShowHide,
 		self.mainMenu()
 
 	def doButtonsCheck(self):
-		if config.vixsettings.ColouredButtons.value:
+		if config.obhsettings.ColouredButtons.value:
 			self["key_yellow"].setText(_("Audio Panel"))
 
 			if config.usage.defaultEPGType.value == "Graphical EPG..." or config.usage.defaultEPGType.value == "None":
@@ -104,7 +105,7 @@ class InfoBar(InfoBarBase, InfoBarShowHide,
 			else:
 				self["key_red"].setText(_("EPG"))
 
-			if not config.vixsettings.Subservice.value:
+			if not config.obhsettings.Subservice.value:
 				self["key_green"].setText(_("Green Panel"))
 			else:
 				self["key_green"].setText(_("Subservices"))
@@ -152,13 +153,13 @@ class InfoBar(InfoBarBase, InfoBarShowHide,
 		else:
 			self.showTv()
 
-	def toogleTvRadio(self): 
+	def toogleTvRadio(self):
 		if self.radioTV == 1:
 			self.radioTV = 0
-			self.showTv() 
-		else: 
+			self.showTv()
+		else:
 			self.radioTV = 1
-			self.showRadio() 
+			self.showRadio()
 
 	def showTv(self):
 		if config.usage.tvradiobutton_mode.value == "MovieList":
@@ -188,11 +189,19 @@ class InfoBar(InfoBarBase, InfoBarShowHide,
 		self.rds_display.show()  # in InfoBarRdsDecoder
 		self.servicelist.correctChannelNumber()
 
+	def restartLastMovie(self):
+		service = enigma.eServiceReference(config.usage.last_movie_played.value)
+		if service:
+			if os.path.exists(service.getPath()):
+				from Components.ParentalControl import parentalControl
+				if parentalControl.isServicePlayable(service, self.openMoviePlayer):
+					self.openMoviePlayer(service)
+
 	def showMovies(self, defaultRef=None):
 		self.lastservice = self.session.nav.getCurrentlyPlayingServiceOrGroup()
 		if self.lastservice and ':0:/' in self.lastservice.toString():
 			self.lastservice = enigma.eServiceReference(config.movielist.curentlyplayingservice.value)
-		self.session.openWithCallback(self.movieSelected, Screens.MovieSelection.MovieSelection, defaultRef, timeshiftEnabled = self.timeshiftEnabled())
+		self.session.openWithCallback(self.movieSelected, Screens.MovieSelection.MovieSelection, defaultRef or enigma.eServiceReference(config.usage.last_movie_played.value), timeshiftEnabled = self.timeshiftEnabled())
 
 	def movieSelected(self, service):
 		ref = self.lastservice
@@ -263,7 +272,7 @@ class MoviePlayer(InfoBarBase, InfoBarShowHide, InfoBarLongKeyDetection, InfoBar
 		MoviePlayer.instance = self
 
 	def doButtonsCheck(self):
-		if config.vixsettings.ColouredButtons.value:
+		if config.obhsettings.ColouredButtons.value:
 			self["key_yellow"].setText(_("Audio Panel"))
 #			self["key_green"].setText(_("Green Panel"))
 		self["key_blue"].setText(_("Blue Panel"))
@@ -561,4 +570,4 @@ class MoviePlayer(InfoBarBase, InfoBarShowHide, InfoBarLongKeyDetection, InfoBar
 		Notifications.AddPopup(text = _("%s/%s: %s") % (index, n, self.ref2HumanName(ref)), type = MessageBox.TYPE_INFO, timeout = 5)
 
 	def ref2HumanName(self, ref):
-		return enigma.eServiceCenter.getInstance().info(ref).getName(ref)		
+		return enigma.eServiceCenter.getInstance().info(ref).getName(ref)
diff --git a/lib/python/Screens/InfoBarGenerics.py b/lib/python/Screens/InfoBarGenerics.py
index 6e1c5ee..2b8f932 100644
--- a/lib/python/Screens/InfoBarGenerics.py
+++ b/lib/python/Screens/InfoBarGenerics.py
@@ -6,6 +6,7 @@ from Components.Label import Label
 from Components.MovieList import AUDIO_EXTENSIONS, MOVIE_EXTENSIONS, DVD_EXTENSIONS
 from Components.PluginComponent import plugins
 from Components.ServiceEventTracker import ServiceEventTracker
+from Components.Sources.ServiceEvent import ServiceEvent
 from Components.Sources.Boolean import Boolean
 from Components.config import config, configfile, ConfigBoolean, ConfigClock
 from Components.SystemInfo import SystemInfo
@@ -24,7 +25,12 @@ from Screens.ChannelSelection import ChannelSelection, PiPZapSelection, BouquetS
 from Screens.ChoiceBox import ChoiceBox
 from Screens.Dish import Dish
 from Screens.EventView import EventViewEPGSelect, EventViewSimple
-from Screens.EpgSelection import EPGSelection
+from Screens.EpgSelectionGrid import EPGSelectionGrid
+from Screens.EpgSelectionInfobarGrid import EPGSelectionInfobarGrid
+from Screens.EpgSelectionInfobarSingle import EPGSelectionInfobarSingle
+from Screens.EpgSelectionMulti import EPGSelectionMulti
+from Screens.EpgSelectionSimilar import EPGSelectionSimilar
+from Screens.EpgSelectionSingle import EPGSelectionSingle
 from Screens.InputBox import InputBox
 from Screens.MessageBox import MessageBox
 from Screens.MinuteInput import MinuteInput
@@ -229,7 +235,7 @@ class InfoBarUnhandledKey:
 		except:
 			print '[InfoBarGenerics] KEY: %s' % key
 		self.unhandledKeyDialog.hide()
-		if self.closeSIB(key) and self.secondInfoBarScreen and self.secondInfoBarScreen.shown: 
+		if self.closeSIB(key) and self.secondInfoBarScreen and self.secondInfoBarScreen.shown:
 			if not config.usage.fix_second_infobar.value or mkey not in ("LEFT", "RIGHT", "BOUQUET+", "BOUQUET-"):
 				self.secondInfoBarScreen.hide()
 				self.secondInfoBarWasShown = False
@@ -349,7 +355,7 @@ class SecondInfoBar(Screen):
 		self["epg_description"].pageDown()
 
 	def __Show(self):
-		if config.vixsettings.ColouredButtons.value:
+		if config.obhsettings.ColouredButtons.value:
 			self["key_yellow"].setText(_("Audio Panel"))
 		self["key_red"].setText(_(" "))
 		self["key_blue"].setText(_("Blue Panel"))
@@ -537,7 +543,7 @@ class SecondInfoBar(Screen):
 		if id is not None:
 			self.hide()
 			self.secondInfoBarWasShown = False
-			self.session.open(EPGSelection, refstr, None, id)
+			self.session.open(EPGSelectionSimilar, refstr, id)
 
 class InfoBarShowHide(InfoBarScreenSaver):
 	""" InfoBar show/hide control, accepts toggleShow and hide actions, might start
@@ -645,7 +651,7 @@ class InfoBarShowHide(InfoBarScreenSaver):
 
 	def keyHide(self):
 		if self.__state == self.STATE_HIDDEN:
-			if config.vixsettings.InfoBarEpg_mode.value == "2":
+			if config.obhsettings.InfoBarEpg_mode.value == "2":
 				self.openInfoBarEPG()
 			else:
 				self.hide()
@@ -702,7 +708,7 @@ class InfoBarShowHide(InfoBarScreenSaver):
 			self.hide()
 			self.secondInfoBarScreen.show()
 			self.secondInfoBarWasShown = True
-		else: 
+		else:
 			self.show()
 		self.startHideTimer()
 
@@ -768,7 +774,6 @@ class InfoBarShowHide(InfoBarScreenSaver):
 				else:
 					self.secondInfoBarScreen.hide()
 					self.secondInfoBarWasShown = False
-					
 			elif isStandardInfoBar(self) and config.usage.show_second_infobar.value == "EPG":
 				self.showDefaultEPG()
 			elif isStandardInfoBar(self) and config.usage.show_second_infobar.value == "INFOBAREPG":
@@ -800,7 +805,7 @@ class InfoBarShowHide(InfoBarScreenSaver):
 	def toggleShowLong(self):
 		if self.LongButtonPressed:
 			if isinstance(self, InfoBarEPG):
-				if config.vixsettings.InfoBarEpg_mode.value == "1":
+				if config.obhsettings.InfoBarEpg_mode.value == "1":
 					self.openInfoBarEPG()
 
 	def lockShow(self):
@@ -917,17 +922,20 @@ class NumberZap(Screen):
 		if self.searchNumber:
 			self.service, self.bouquet = self.searchNumber(int(self["number"].getText()))
 			self["servicename"].setText(ServiceReference(self.service).getServiceName())
+			self["Service"].newService(self.service)
 			if not self.startBouquet:
 				self.startBouquet = self.bouquet
 
 	def keyBlue(self):
-		self.Timer.start(5000, True)
+		if config.misc.zapkey_delay.value > 0:
+			self.Timer.start(1000*config.misc.zapkey_delay.value, True)
 		if self.searchNumber:
 			if self.startBouquet == self.bouquet:
 				self.service, self.bouquet = self.searchNumber(int(self["number"].getText()), firstBouquetOnly = True)
 			else:
 				self.service, self.bouquet = self.searchNumber(int(self["number"].getText()))
 			self["servicename"].setText(ServiceReference(self.service).getServiceName())
+			self["Service"].newService(self.service)
 
 	def keyNumberGlobal(self, number):
 		if config.misc.zapkey_delay.value > 0:
@@ -938,7 +946,7 @@ class NumberZap(Screen):
 
 		self.handleServiceName()
 
-		if len(self.numberString) >= 5:
+		if len(self.numberString) >= int(config.usage.maxchannelnumlen.value):
 			self.keyOK()
 
 	def __init__(self, session, number, searchNumberFunction = None):
@@ -954,8 +962,11 @@ class NumberZap(Screen):
 		self["number"] = Label(self.numberString)
 		self["number_summary"] = StaticText(self.numberString)
 		self["servicename"] = Label()
+		self["Service"] = ServiceEvent()
 
-		self.handleServiceName()
+		self.onLayoutFinish.append(self.handleServiceName)
+		if config.misc.numzap_picon.value:
+			self.skinName = ["NumberZapPicon", "NumberZap"]
 
 		self["actions"] = NumberActionMap( [ "SetupActions", "ShortcutActions" ],
 			{
@@ -1159,13 +1170,13 @@ class InfoBarChannelSelection:
 			})
 
 	def LeftPressed(self):
-		if config.vixsettings.InfoBarEpg_mode.value == "3" and config.usage.show_second_infobar.value != "INFOBAREPG":
+		if config.obhsettings.InfoBarEpg_mode.value == "3" and config.usage.show_second_infobar.value != "INFOBAREPG":
 			self.openInfoBarEPG()
 		else:
 			self.zapUp()
 
 	def RightPressed(self):
-		if config.vixsettings.InfoBarEpg_mode.value == "3" and config.usage.show_second_infobar.value != "INFOBAREPG":
+		if config.obhsettings.InfoBarEpg_mode.value == "3" and config.usage.show_second_infobar.value != "INFOBAREPG":
 			self.openInfoBarEPG()
 		else:
 			self.zapDown()
@@ -1523,10 +1534,10 @@ class InfoBarEPG:
 		pluginlist = [(p.name, boundFunction(self.runPlugin, p)) for p in plugins.getPlugins(where = PluginDescriptor.WHERE_EVENTINFO)]
 		if pluginlist:
 			pluginlist.append((_("Event Info"), self.openEventView))
-			pluginlist.append((_("Graphical EPG"), self.openGraphEPG))
+			pluginlist.append((_("Grid EPG"), self.openGridEPG))
 			pluginlist.append((_("Infobar EPG"), self.openInfoBarEPG))
 			pluginlist.append((_("Multi EPG"), self.openMultiServiceEPG))
-			pluginlist.append((_("Show EPG for current channel..."), self.openSingleServiceEPG))
+			pluginlist.append((_("Single EPG"), self.openSingleServiceEPG))
 		return pluginlist
 
 	def getDefaultEPGtype(self):
@@ -1542,7 +1553,6 @@ class InfoBarEPG:
 			if getBrandOEM() not in ('xtrend', 'odin', 'ini', 'dags' ,'gigablue', 'xp'):
 				pluginlist = self.getEPGPluginList()
 				if pluginlist:
-#					pluginlist.append((_("Select default EPG type..."), self.SelectDefaultInfoPlugin))
 					self.session.openWithCallback(self.EventInfoPluginChosen, ChoiceBox, title=_("Please choose an extension..."), list=pluginlist, skin_name="EPGExtensionsList", reorderConfig="eventinfo_order")
 				else:
 					self.openSingleServiceEPG()
@@ -1557,21 +1567,10 @@ class InfoBarEPG:
 		else:
 			pluginlist = self.getEPGPluginList()
 			if pluginlist:
-#				pluginlist.append((_("Select default EPG type..."), self.SelectDefaultInfoPlugin))
 				self.session.openWithCallback(self.EventInfoPluginChosen, ChoiceBox, title=_("Please choose an extension..."), list = pluginlist, skin_name = "EPGExtensionsList")
 			else:
 				self.openSingleServiceEPG()
 
-	def SelectDefaultInfoPlugin(self):
-		self.session.openWithCallback(self.DefaultInfoPluginChosen, ChoiceBox, title=_("Please select a default EPG type..."), list = self.getEPGPluginList(), skin_name = "EPGExtensionsList")
-
-	def DefaultInfoPluginChosen(self, answer):
-		if answer is not None:
-			self.defaultEPGType = answer[1]
-			config.usage.defaultEPGType.value = answer[0]
-			config.usage.defaultEPGType.save()
-			configfile.save()
-
 	def runPlugin(self, plugin):
 		plugin(session = self.session, servicelist=self.servicelist)
 
@@ -1580,9 +1579,9 @@ class InfoBarEPG:
 			answer[1]()
 
 	def RedPressed(self):
-		if isStandardInfoBar(self):
+		if isStandardInfoBar(self) or isMoviePlayerInfoBar(self):
 			if config.usage.defaultEPGType.value != _("Graphical EPG") and config.usage.defaultEPGType.value != _("None"):
-					self.openGraphEPG()
+				self.openGridEPG()
 			else:
 				self.openSingleServiceEPG()
 
@@ -1599,7 +1598,6 @@ class InfoBarEPG:
 
 	def EPGPressed(self):
 		if isStandardInfoBar(self) or isMoviePlayerInfoBar(self):
-#			self.openGraphEPG()
 			self.openEventView()
 
 	def showEventInfoWhenNotVisible(self):
@@ -1639,11 +1637,6 @@ class InfoBarEPG:
 				services.append(ServiceReference(service))
 		return services
 
-	def openBouquetEPG(self, bouquet = None, bouquets = None):
-		if bouquet:
-			self.StartBouquet = bouquet
-		self.dlg_stack.append(self.session.openWithCallback(self.closed, EPGSelection, zapFunc=self.zapToService, EPGtype=self.EPGtype, StartBouquet=self.StartBouquet, StartRef=self.StartRef, bouquets = bouquets))
-
 	def closed(self, ret=False):
 		if not self.dlg_stack:
 			return
@@ -1658,109 +1651,68 @@ class InfoBarEPG:
 				self.dlg_stack[dlgs-1].close(dlgs > 1)
 		self.reopen(ret)
 
-	def MultiServiceEPG(self):
+	def multiServiceEPG(self, type, showBouquet):
+		def openEPG(bouquet, bouquets):
+			bouquet = bouquet or self.servicelist.getRoot()
+			startRef = self.lastservice if isMoviePlayerInfoBar(self) else self.session.nav.getCurrentlyPlayingServiceOrGroup()
+			self.dlg_stack.append(self.session.openWithCallback(self.closed, type,
+				self.zapToService, bouquet, startRef, bouquets))
+
 		bouquets = self.servicelist.getEPGBouquetList()
-		if bouquets is None:
-			cnt = 0
+		bouquetCount = len(bouquets) if bouquets else 0
+		if bouquetCount > 1 and showBouquet:
+			# show bouquet list
+			self.bouquetSel = self.session.openWithCallback(self.closed, EpgBouquetSelector, bouquets, openEPG, enableWrapAround=True)
+			self.dlg_stack.append(self.bouquetSel)
 		else:
-			cnt = len(bouquets)
-		if (self.EPGtype == "multi" and config.epgselection.multi_showbouquet.value) or (self.EPGtype == "graph" and config.epgselection.graph_showbouquet.value):
-			if cnt > 1: # show bouquet list
-				self.bouquetSel = self.session.openWithCallback(self.closed, EpgBouquetSelector, bouquets, self.openBouquetEPG, enableWrapAround=True)
-				self.dlg_stack.append(self.bouquetSel)
-			elif cnt == 1:
-				self.openBouquetEPG(bouquets=bouquets)
-		else:
-			self.openBouquetEPG(bouquets=bouquets)
+			openEPG(None, bouquets)
 
 	def openMultiServiceEPG(self):
-		if self.servicelist is None:
-			return
-		self.EPGtype = "multi"
-		self.StartBouquet = self.servicelist.getRoot()
-		if isMoviePlayerInfoBar(self):
-			self.StartRef = self.lastservice
-		else:
-			self.StartRef = self.session.nav.getCurrentlyPlayingServiceOrGroup()
-		self.MultiServiceEPG()
+		self.multiServiceEPG(EPGSelectionMulti, config.epgselection.multi.showbouquet.value)
 
-	def openGraphEPG(self, reopen=False):
-		if self.servicelist is None:
-			return
-		self.EPGtype = "graph"
-		if not reopen:
-			self.StartBouquet = self.servicelist.getRoot()
-			self.StartRef = self.session.nav.getCurrentlyPlayingServiceOrGroup()
-		self.MultiServiceEPG()
-
-	def openSingleServiceEPG(self, reopen=False):
-		if self.servicelist is None:
-			return
-		self.EPGtype = "enhanced"
-		self.SingleServiceEPG()
+	def openGridEPG(self):
+		self.multiServiceEPG(EPGSelectionGrid, config.epgselection.grid.showbouquet.value)
 
-	def openInfoBarEPG(self, reopen=False):
+	def openSingleServiceEPG(self):
 		if self.servicelist is None:
 			return
-		if not reopen:
-			self.StartBouquet = self.servicelist.getRoot()
-			self.StartRef = self.session.nav.getCurrentlyPlayingServiceOrGroup()
-		if config.epgselection.infobar_type_mode.value == 'single':
-			self.EPGtype = "infobar"
-			self.SingleServiceEPG()
-		else:
-			self.EPGtype = "infobargraph"
-			self.MultiServiceEPG()
+		startBouquet = self.servicelist.getRoot()
+		startRef = self.lastservice if isMoviePlayerInfoBar(self) else self.session.nav.getCurrentlyPlayingServiceOrGroup()
+		if startRef:
+			bouquets = self.servicelist.getEPGBouquetList()
+			services = self.getBouquetServices(startBouquet)
+			self.serviceSel = SimpleServicelist(services)
+			self.session.openWithCallback(self.singleServiceEPGClosed, EPGSelectionSingle,
+				self.zapToService, startBouquet, startRef, bouquets)
 
-	def showCoolTVGuide(self):
+	def openInfoBarEPG(self):
 		if self.servicelist is None:
 			return
-		if fileExists("/usr/lib/enigma2/python/Plugins/Extensions/CoolTVGuide/plugin.pyo"):
-			for plugin in plugins.getPlugins([PluginDescriptor.WHERE_EXTENSIONSMENU, PluginDescriptor.WHERE_EVENTINFO]):
-				if plugin.name == _("Cool TV Guide"):
-					self.runPlugin(plugin)
-					break
-		else:
-			self.session.open(MessageBox, _("The Cool TV Guide plugin is not installed!\nDont bother with it and use the default Obh EPG guide instead."), type = MessageBox.TYPE_INFO,timeout = 10 )
-
-	def SingleServiceEPG(self):
-		self.StartBouquet = self.servicelist.getRoot()
-		self.StartRef = self.session.nav.getCurrentlyPlayingServiceOrGroup()
-		if isMoviePlayerInfoBar(self):
-			ref = self.lastservice
+		startBouquet = self.servicelist.getRoot()
+		startRef = self.session.nav.getCurrentlyPlayingServiceOrGroup()
+		bouquets = self.servicelist.getEPGBouquetList()
+		if config.epgselection.infobar.type_mode.value == 'single':
+			self.session.openWithCallback(self.singleServiceEPGClosed, EPGSelectionInfobarSingle,
+				self.zapToService, startBouquet, startRef, bouquets)
 		else:
-			ref = self.session.nav.getCurrentlyPlayingServiceOrGroup()
-		if ref:
-			services = self.getBouquetServices(self.StartBouquet)
-			self.serviceSel = SimpleServicelist(services)
-			if self.serviceSel.selectService(ref):
-				self.session.openWithCallback(self.SingleServiceEPGClosed,EPGSelection, self.servicelist, zapFunc=self.zapToService, serviceChangeCB = self.changeServiceCB, EPGtype=self.EPGtype, StartBouquet=self.StartBouquet, StartRef=self.StartRef)
-			else:
-				self.session.openWithCallback(self.SingleServiceEPGClosed, EPGSelection, ref)
+			self.dlg_stack.append(self.session.openWithCallback(self.closed, EPGSelectionInfobarGrid,
+				self.zapToService, startBouquet, startRef, bouquets))
 
-	def changeServiceCB(self, direction, epg):
-		if self.serviceSel:
-			if direction > 0:
-				self.serviceSel.nextService()
-			else:
-				self.serviceSel.prevService()
-			epg.setService(self.serviceSel.currentService())
-
-	def SingleServiceEPGClosed(self, ret=False):
+	def singleServiceEPGClosed(self, ret=False):
 		self.serviceSel = None
 		self.reopen(ret)
 
 	def reopen(self, answer):
-		if answer == 'reopengraph':
-			self.openGraphEPG(True)
-		elif answer == 'reopeninfobargraph' or answer == 'reopeninfobar':
-			self.openInfoBarEPG(True)
+		if answer == 'reopengrid':
+			self.openGridEPG()
+		elif answer == 'reopeninfobar':
+			self.openInfoBarEPG()
 		elif answer == 'close' and isMoviePlayerInfoBar(self):
 			self.lastservice = self.session.nav.getCurrentlyPlayingServiceOrGroup()
 			self.close()
 
-	def openSimilarList(self, eventid, refstr):
-		self.session.open(EPGSelection, refstr, eventid=eventid)
+	def openSimilarList(self, eventId, refstr):
+		self.session.open(EPGSelectionSimilar, refstr, eventId=eventId)
 
 	def getNowNext(self):
 		epglist = [ ]
@@ -2561,7 +2513,7 @@ class InfoBarExtensions:
 	def __init__(self):
 		self.list = []
 
-		if config.vixsettings.ColouredButtons.value:
+		if config.obhsettings.ColouredButtons.value:
 			self["InstantExtensionsActions"] = HelpableActionMap(self, "InfobarExtensions",
 				{
 					"extensions": (self.showExtensionSelection, _("Show extensions...")),
@@ -3664,6 +3616,7 @@ class InfoBarCueSheetSupport:
 		self.cut_list = [ ]
 		self.is_closing = False
 		self.resume_point = None
+		self.force_next_resume = False
 		self.__event_tracker = ServiceEventTracker(screen=self, eventmap=
 			{
 				iPlayableService.evStart: self.__serviceStarted,
@@ -3727,9 +3680,10 @@ class InfoBarCueSheetSupport:
 
 		self.__findRecording()
 
-#		print "new service started! trying to download cuts!"
 		self.downloadCuesheet()
 
+		force_resume = self.force_next_resume
+		self.force_next_resume = False
 		self.resume_point = None
 		if self.ENABLE_RESUME_SUPPORT:
 			for (pts, what) in self.cut_list:
@@ -3745,12 +3699,13 @@ class InfoBarCueSheetSupport:
 			if seekable is None:
 				return # Should not happen?
 			length = seekable.getLength() or (None,0)
-#			print "seekable.getLength() returns:", length
 			# Hmm, this implies we don't resume if the length is unknown...
 			if (last > 900000) and (not length[1]  or (last < length[1] - 900000)):
 				self.resume_point = last
 				l = last / 90000
-				if "ask" in config.usage.on_movie_start.value or not length[1]:
+				if force_resume:
+					self.playLastCB(True)
+				elif "ask" in config.usage.on_movie_start.value or not length[1]:
 					Notifications.AddNotificationWithCallback(self.playLastCB, MessageBox, _("Do you want to resume playback?") + "\n" + (_("Resume position at %s") % ("%d:%02d:%02d" % (l/3600, l%3600/60, l%60))), timeout=30, default="yes" in config.usage.on_movie_start.value)
 				elif config.usage.on_movie_start.value == "resume":
 					Notifications.AddNotificationWithCallback(self.playLastCB, MessageBox, _("Resuming playback"), timeout=2, type=MessageBox.TYPE_INFO)
@@ -3769,9 +3724,9 @@ class InfoBarCueSheetSupport:
 						break
 
 	def playLastCB(self, answer):
-# This can occasionally get called with an empty (new?) self!?!
-# So avoid the inevitable crash that will follow if we don't check.
-#
+		# This can occasionally get called with an empty (new?) self!?!
+		# So avoid the inevitable crash that will follow if we don't check.
+		#
 		if answer == True and not hasattr(self, "resume_point"):
 			Notifications.AddPopup(text = _("Playback information missing\nPlayback aborted to avoid crash\nPlease retry"), type = MessageBox.TYPE_WARNING, timeout = 8)
 			return
@@ -3779,6 +3734,9 @@ class InfoBarCueSheetSupport:
 			self.doSeek(self.resume_point)
 		self.hideAfterResume()
 
+	def forceNextResume(self, force=True):
+		self.force_next_resume = force
+
 	def hideAfterResume(self):
 		if isinstance(self, InfoBarShowHide):
 			self.hide()
@@ -4048,6 +4006,7 @@ class InfoBarSubtitleSupport(object):
 		self["SubtitleSelectionAction"] = HelpableActionMap(self, "InfobarSubtitleSelectionActions",
 			{
 				"subtitleSelection": (self.subtitleSelection, _("Subtitle selection...")),
+				"toggleDefaultSubtitles": (self.toggleDefaultSubtitles, _("Toggle the default subtitles"))
 			})
 
 		self.selected_subtitle = None
@@ -4108,17 +4067,31 @@ class InfoBarSubtitleSupport(object):
 				self.enableSubtitle(cachedsubtitle)
 				self.doCenterDVBSubs()
 
-	def enableSubtitle(self, selectedSubtitle):
+	def toggleDefaultSubtitles(self):
 		subtitle = self.getCurrentServiceSubtitle()
-		self.selected_subtitle = selectedSubtitle
-		if subtitle and self.selected_subtitle:
-			subtitle.enableSubtitles(self.subtitle_window.instance, self.selected_subtitle)
-			self.subtitle_window.show()
-			self.doCenterDVBSubs()
+		subtitlelist = subtitle and subtitle.getSubtitleList()
+		if subtitlelist is None or len(subtitlelist) == 0:
+			self.subtitle_window.showMessage(_("No subtitles available"), True)
+		elif self.selected_subtitle:
+			self.enableSubtitle(None)
+			self.subtitle_window.showMessage(_("Subtitles off"), True)
+			self.selected_subtitle = None
 		else:
-			if subtitle:
-				subtitle.disableSubtitles(self.subtitle_window.instance)
-			self.subtitle_window.hide()
+			self.enableSubtitle(subtitlelist[0])
+			self.subtitle_window.showMessage(_("Subtitles on"), False)
+
+	def enableSubtitle(self, newSubtitle):
+		if self.selected_subtitle != newSubtitle:
+			subtitle = self.getCurrentServiceSubtitle()
+			self.selected_subtitle = newSubtitle
+			if subtitle and newSubtitle:
+				subtitle.enableSubtitles(self.subtitle_window.instance, newSubtitle)
+				self.subtitle_window.show()
+				self.doCenterDVBSubs()
+			else:
+				if subtitle:
+					subtitle.disableSubtitles(self.subtitle_window.instance)
+				self.subtitle_window.hide()
 
 	def restartSubtitle(self):
 		if self.selected_subtitle:
diff --git a/lib/python/Screens/MBRestart.py b/lib/python/Screens/MBRestart.py
deleted file mode 100755
index 2815082..0000000
--- a/lib/python/Screens/MBRestart.py
+++ /dev/null
@@ -1,179 +0,0 @@
-from os import mkdir, path
-from shutil import copyfile
-from boxbranding import getMachineBuild, getMachineMtdRoot
-from Components.Sources.StaticText import StaticText
-from Components.ActionMap import ActionMap
-from Components.ChoiceList import ChoiceList, ChoiceEntryComponent
-from Components.Console import Console
-from Components.Label import Label
-from Components.SystemInfo import SystemInfo
-from Screens.Screen import Screen
-from Screens.Standby import TryQuitMainloop
-from Screens.MessageBox import MessageBox
-from Tools.Directories import fileExists, fileCheck, pathExists, fileHas
-from Tools.BoundFunction import boundFunction
-from Tools.Multiboot import GetImagelist, GetCurrentImage, GetCurrentImageMode
-
-class MultiBoot(Screen):
-
-	skin = """
-	<screen name="MultiBoot" position="center,center" size="750,900" flags="wfNoBorder" backgroundColor="transparent">
-		<eLabel name="b" position="0,0" size="750,700" backgroundColor="#00ffffff" zPosition="-2" />
-		<eLabel name="a" position="1,1" size="748,698" backgroundColor="#00000000" zPosition="-1" />
-		<widget source="Title" render="Label" position="60,10" foregroundColor="#00ffffff" size="480,50" halign="left" font="Regular; 28" backgroundColor="#00000000" />
-		<eLabel name="line" position="1,60" size="748,1" backgroundColor="#00ffffff" zPosition="1" />
-		<eLabel name="line2" position="1,250" size="748,4" backgroundColor="#00ffffff" zPosition="1" />
-		<widget name="config" position="2,280" size="730,380" halign="center" font="Regular; 22" backgroundColor="#00000000" foregroundColor="#00e5b243" />
-		<widget source="labe14" render="Label" position="2,80" size="730,30" halign="center" font="Regular; 22" backgroundColor="#00000000" foregroundColor="#00ffffff" />
-		<widget source="labe15" render="Label" position="2,130" size="730,60" halign="center" font="Regular; 22" backgroundColor="#00000000" foregroundColor="#00ffffff" />
-		<widget source="key_red" render="Label" position="30,200" size="150,30" noWrap="1" zPosition="1" valign="center" font="Regular; 20" halign="left" backgroundColor="#00000000" foregroundColor="#00ffffff" />
-		<widget source="key_green" render="Label" position="200,200" size="150,30" noWrap="1" zPosition="1" valign="center" font="Regular; 20" halign="left" backgroundColor="#00000000" foregroundColor="#00ffffff" />
-		<eLabel position="20,200" size="6,40" backgroundColor="#00e61700" /> <!-- Should be a pixmap -->
-		<eLabel position="190,200" size="6,40" backgroundColor="#0061e500" /> <!-- Should be a pixmap -->
-	</screen>
-	"""
-
-	def __init__(self, session, *args):
-		Screen.__init__(self, session)
-		self.skinName = "MultiBoot"
-		screentitle = _("Multiboot Image Restart")
-		self["key_red"] = StaticText(_("Cancel"))
-		if not SystemInfo["HasSDmmc"] or SystemInfo["HasSDmmc"] and pathExists('/dev/%s4' %(SystemInfo["canMultiBoot"][2])):
-			self["labe14"] = StaticText(_("Use the cursor keys to select an installed image and then Reboot button."))
-		else:
-			self["labe14"] = StaticText(_("SDcard is not initialised for multiboot - Exit and use ViX MultiBoot Manager to initialise"))			
-		self["labe15"] = StaticText(_(" "))
-		self["key_green"] = StaticText(_("Reboot"))
-		if SystemInfo["canMode12"]:
-			self["labe15"] = StaticText(_("Mode 1 suppports Kodi, PiP may not work.\nMode 12 supports PiP, Kodi may not work."))
-		self["config"] = ChoiceList(list=[ChoiceEntryComponent('',((_("Retrieving image slots - Please wait...")), "Queued"))])
-		imagedict = []
-		self.mtdboot = "%s1" % SystemInfo["canMultiBoot"][2]
- 		if SystemInfo["canMultiBoot"][2] == "sda":
-			self.mtdboot = "%s3" %getMachineMtdRoot()[0:8]
-		self.getImageList = None
-		self.title = screentitle
-		if not SystemInfo["HasSDmmc"] or SystemInfo["HasSDmmc"] and pathExists('/dev/%s4' %(SystemInfo["canMultiBoot"][2])):
-			self.startit()
-
-		self["actions"] = ActionMap(["OkCancelActions", "ColorActions", "DirectionActions", "KeyboardInputActions", "MenuActions"],
-		{
-			"red": boundFunction(self.close, None),
-			"green": self.reboot,
-			"ok": self.reboot,
-			"cancel": boundFunction(self.close, None),
-			"up": self.keyUp,
-			"down": self.keyDown,
-			"left": self.keyLeft,
-			"right": self.keyRight,
-			"upRepeated": self.keyUp,
-			"downRepeated": self.keyDown,
-			"leftRepeated": self.keyLeft,
-			"rightRepeated": self.keyRight,
-			"menu": boundFunction(self.close, True),
-		}, -1)
-		self.onLayoutFinish.append(self.layoutFinished)
-
-	def layoutFinished(self):
-		self.setTitle(self.title)
-
-	def startit(self):
-		self.getImageList = GetImagelist(self.ImageList)
-
-	def ImageList(self, imagedict):
-		list = []
-		mode = GetCurrentImageMode() or 0
-		currentimageslot = GetCurrentImage()
-		print "[MultiBoot Restart] reboot1 slot:\n", currentimageslot 
-		if SystemInfo["HasSDmmc"]:
-			currentimageslot += 1			#allow for mmc as 1st slot, then SDCard slots
-			print "[MultiBoot Restart] reboot2 slot:\n", currentimageslot 
-		if imagedict:
-			if not SystemInfo["canMode12"]:
-				for x in sorted(imagedict.keys()):
-					if imagedict[x]["imagename"] != _("Empty slot"):
-						list.append(ChoiceEntryComponent('',((_("slot%s -%s - %s (current image)") if x == currentimageslot else _("slot%s -%s- %s ")) % (x, imagedict[x]['part'][0:3], imagedict[x]['imagename']), x)))
-			else:
-				for x in range(1, SystemInfo["canMultiBoot"][1] + 1):
-					if imagedict[x]["imagename"] != _("Empty slot"):
-						list.append(ChoiceEntryComponent('',((_("slot%s - %s mode 1 (current image)") if x == currentimageslot and mode != 12 else _("slot%s - %s mode 1")) % (x, imagedict[x]['imagename']), x)))
-				list.append("                                 ")
-				list.append("                                 ")
-				for x in range(1, SystemInfo["canMultiBoot"][1] + 1):
-						if SystemInfo["canMode12"] and imagedict[x]["imagename"] != _("Empty slot"):
-							list.append(ChoiceEntryComponent('',((_("slot%s - %s mode 12 (current image)") if x == currentimageslot and mode == 12 else _("slot%s - %s mode 12")) % (x, imagedict[x]['imagename']), x + 12)))
-		else:
-			list.append(ChoiceEntryComponent('',((_("No images found")), "Waiter")))
-		self["config"].setList(list)
-
-	def reboot(self):
-		self.currentSelected = self["config"].l.getCurrentSelection()
-		if self.currentSelected[0][1] != "Queued":
-			self.container = Console()
-			if pathExists('/tmp/startupmount'):
-				self.ContainterFallback()
-			else:
-				mkdir('/tmp/startupmount')
-				if SystemInfo["HasRootSubdir"]:
-					if fileExists("/dev/block/by-name/bootoptions"):
-						print "[MultiBoot Restart] bootoptions"
-						self.container.ePopen('mount /dev/block/by-name/bootoptions /tmp/startupmount', self.ContainterFallback)
-					elif fileExists("/dev/block/by-name/boot"):
-						print "[MultiBoot Restart] by-name/boot"
-						self.container.ePopen('mount /dev/block/by-name/boot /tmp/startupmount', self.ContainterFallback)
-				else:
-					print "[MultiBoot Restart] mtdboot"
-					self.container.ePopen('mount /dev/%s /tmp/startupmount' % self.mtdboot, self.ContainterFallback)
-
-	def ContainterFallback(self, data=None, retval=None, extra_args=None):
-		self.container.killAll()
-		slot12 = 1
-		slot = self.currentSelected[0][1]
-		Startup = False
-		print "[MultiBoot Restart] reboot3 slot:", slot
-		if pathExists("/tmp/startupmount/STARTUP"):
-			if  fileExists("/tmp/startupmount/STARTUP_1"):
-				if slot < 12:
-					Startup = "/tmp/startupmount/STARTUP_%s" %slot
-				else:
-					slot12 = slot 								#	BOXMODE	OE-A		STARTUP_1 -> STARTUP_n
-					slot -= 12
-					Startup = "/tmp/startupmount/STARTUP_%s" %slot
-					f = open('%s' %Startup, 'r').read().replace("boxmode=1'", "boxmode=12'").replace("%s" %SystemInfo["canMode12"][0], "%s" %SystemInfo["canMode12"][1])
-					print "[MultiBoot Restart] reboot4 mode12:", f
-					open('/tmp/startupmount/STARTUP', 'w').write(f)
-			elif fileExists("/tmp/startupmount/STARTUP_LINUX_4"):
-				Startup = "/tmp/startupmount/STARTUP_LINUX_%s" %slot
-			elif  fileExists("/tmp/startupmount/STARTUP_LINUX_4_BOXMODE_1"):
-				if slot < 12:
-					Startup = "/tmp/startupmount/STARTUP_LINUX_%s_BOXMODE_1" %slot
-				else:
-					slot -= 12
-					Startup = "/tmp/startupmount/STARTUP_LINUX_%s_BOXMODE_12" %slot
-			if Startup == False:
-				self.session.open(MessageBox, _("Multiboot ERROR! - invalid STARTUP in boot partition."), MessageBox.TYPE_INFO, timeout=20)
-			else:
-				if slot12 < 12:
-					copyfile("%s" % Startup, "/tmp/startupmount/STARTUP")
-				self.session.open(TryQuitMainloop, 2)
-		else:
-			self.session.open(MessageBox, _("Multiboot ERROR! - no STARTUP in boot partition."), MessageBox.TYPE_INFO, timeout=20)
-
-	def selectionChanged(self):
-		currentSelected = self["config"].l.getCurrentSelection()
-
-	def keyLeft(self):
-		self["config"].instance.moveSelection(self["config"].instance.moveUp)
-		self.selectionChanged()
-
-	def keyRight(self):
-		self["config"].instance.moveSelection(self["config"].instance.moveDown)
-		self.selectionChanged()
-
-	def keyUp(self):
-		self["config"].instance.moveSelection(self["config"].instance.moveUp)
-		self.selectionChanged()
-
-	def keyDown(self):
-		self["config"].instance.moveSelection(self["config"].instance.moveDown)
-		self.selectionChanged()
diff --git a/lib/python/Screens/ParentalControlSetup.py b/lib/python/Screens/ParentalControlSetup.py
index d38c5dd..06c8ef8 100644
--- a/lib/python/Screens/ParentalControlSetup.py
+++ b/lib/python/Screens/ParentalControlSetup.py
@@ -186,7 +186,7 @@ class ParentalControlSetup(Screen, ConfigListScreen, ProtectedScreen):
 	def confirmNewPinEntered(self, answer1, answer2):
 		if answer2 is not None:
 			if answer1 == answer2:
-				self.session.open(MessageBox, _("The PIN code has been changed successfully."), MessageBox.TYPE_ERROR, timeout=3)
+				self.session.open(MessageBox, _("The PIN code has been changed successfully."), MessageBox.TYPE_INFO, timeout=3)
 				config.ParentalControl.servicepin[0].value = answer1
 				config.ParentalControl.servicepin[0].save()
 				self.createSetup()
diff --git a/lib/python/Screens/Satconfig.py b/lib/python/Screens/Satconfig.py
index b3c1901..ecb65ac 100644
--- a/lib/python/Screens/Satconfig.py
+++ b/lib/python/Screens/Satconfig.py
@@ -102,7 +102,7 @@ class NimSetup(Screen, ConfigListScreen, ServiceStopScreen):
 		self.commandOrder = self.cableScanType = self.cableConfigScanDetails = self.advancedUnicable = self.advancedFormat = self.advancedPosition = self.advancedType = self.advancedManufacturer =\
 		self.advancedSCR = self.advancedConnected = self.showAdditionalMotorOptions = self.selectSatsEntry = self.advancedSelectSatsEntry = self.singleSatEntry = self.toneamplitude = 	self.scpc =\
 		self.t2mirawmode = self.forcelnbpower = self.forcetoneburst = self.terrestrialRegionsEntry = self.cableRegionsEntry = self.configModeDVBS = self.configModeDVBC = self.configModeDVBT =\
-		self.configModeATSC = None
+		self.configModeATSC = self.externallyPowered = None
 
 		self.have_advanced = False
 		self.indent = "  %s" if self.nim.isCombined() else "%s"
@@ -137,10 +137,10 @@ class NimSetup(Screen, ConfigListScreen, ServiceStopScreen):
 					if self.nimConfig.diseqcMode.value in ("positioner", "positioner_select"):
 						self.createPositionerSetup(self.list)
 				elif self.nimConfig.configMode.value == "equal":
-					self.nimConfig.connectedTo.setChoices([((str(id), nimmanager.getNimDescription(id))) for id in nimmanager.canEqualTo(self.nim.slot)])
+					self.nimConfig.connectedTo.setChoices([((str(id), nimmanager.getNimDescription(id))) for id in nimmanager.canEqualTo(self.slotid)])
 					self.list.append(getConfigListEntry(self.indent % _("Tuner"), self.nimConfig.connectedTo, _("This setting allows the tuner configuration to be a duplication of how another tuner is already configured.")))
 				elif self.nimConfig.configMode.value == "satposdepends":
-					self.nimConfig.connectedTo.setChoices([((str(id), nimmanager.getNimDescription(id))) for id in nimmanager.canDependOn(self.nim.slot)])
+					self.nimConfig.connectedTo.setChoices([((str(id), nimmanager.getNimDescription(id))) for id in nimmanager.canDependOn(self.slotid)])
 					self.list.append(getConfigListEntry(self.indent % _("Tuner"), self.nimConfig.connectedTo, _("Select the tuner that controls the motorised dish.")))
 				elif self.nimConfig.configMode.value == "loopthrough":
 					self.nimConfig.connectedTo.setChoices([((str(id), nimmanager.getNimDescription(id))) for id in nimmanager.canConnectTo(self.slotid)])
@@ -300,7 +300,7 @@ class NimSetup(Screen, ConfigListScreen, ServiceStopScreen):
 			self.advancedLof, self.advancedPowerMeasurement, self.turningSpeed, self.advancedType, self.advancedSCR, self.advancedPosition, self.advancedFormat, self.advancedManufacturer,\
 			self.advancedUnicable, self.advancedConnected, self.toneburst, self.committedDiseqcCommand, self.uncommittedDiseqcCommand, self.singleSatEntry,	self.commandOrder,\
 			self.showAdditionalMotorOptions, self.cableScanType, self.multiType, self.cableConfigScanDetails, self.terrestrialCountriesEntry, self.cableCountriesEntry, \
-			self.toneamplitude, self.scpc, self.t2mirawmode, self.forcelnbpower, self.forcetoneburst):
+			self.toneamplitude, self.scpc, self.t2mirawmode, self.forcelnbpower, self.forcetoneburst, self.externallyPowered):
 				self.createSetup()
 
 	def run(self):
@@ -372,6 +372,7 @@ class NimSetup(Screen, ConfigListScreen, ServiceStopScreen):
 			if currLnb.lof.value == "unicable":
 				self.advancedUnicable = getConfigListEntry(self.indent % ("%s%s" % ("SCR (Unicable/JESS) ", _("type"))), currLnb.unicable, _("Select the type of Single Cable Reception device you are using."))
 				self.list.append(self.advancedUnicable)
+				self.externallyPowered = getConfigListEntry(self.indent % _("Externally powered"), currLnb.powerinserter, _("Select whether your SCR device is externally powered."))
 				if currLnb.unicable.value == "unicable_user":
 					self.advancedFormat = getConfigListEntry(self.indent % _("Format"), currLnb.format, _("Select the protocol used by your SCR device. Choices are 'SCR Unicable' (Unicable), or 'SCR JESS' (JESS, also known as Unicable II)."))
 					self.advancedPosition = getConfigListEntry(self.indent % _("Position"), currLnb.positionNumber, _("Only change this setting if you are using a SCR device that has been reprogrammed with a custom programmer. For further information check with the person that reprogrammed the device."))
@@ -383,6 +384,10 @@ class NimSetup(Screen, ConfigListScreen, ServiceStopScreen):
 					self.list.append(getConfigListEntry(self.indent % "LOF/L", currLnb.lofl, _("Consult your SCR device spec sheet for this information.")))
 					self.list.append(getConfigListEntry(self.indent % "LOF/H", currLnb.lofh, _("Consult your SCR device spec sheet for this information.")))
 					self.list.append(getConfigListEntry(self.indent % _("Threshold"), currLnb.threshold, _("Consult your SCR device spec sheet for this information.")))
+					if not SystemInfo["LnbPowerAlwaysOn"]:
+						self.list.append(self.externallyPowered)
+					if not currLnb.powerinserter.value:
+						self.list.append(getConfigListEntry(self.indent % _("Bootup time"), currLnb.bootuptime, _("Consult your SCR device spec sheet for this information.")))
 				else:
 					self.advancedManufacturer = getConfigListEntry(self.indent % _("Manufacturer"), currLnb.unicableManufacturer, _("Select the manufacturer of your SCR device. If the manufacturer is not listed, set 'SCR' to 'user defined' and enter the device parameters manually according to its spec sheet."))
 					self.advancedType = getConfigListEntry(self.indent % _("Model"), currLnb.unicableProduct, _("Select the model number of your SCR device. If the model number is not listed, set 'SCR' to 'user defined' and enter the device parameters manually according to its spec sheet."))
@@ -393,6 +398,8 @@ class NimSetup(Screen, ConfigListScreen, ServiceStopScreen):
 					if currLnb.positions.value > 1:
 						self.list.append(self.advancedPosition)
 					self.list.append(self.advancedSCR)
+					if not SystemInfo["LnbPowerAlwaysOn"]:
+						self.list.append(self.externallyPowered)
 				choices = []
 				connectable = nimmanager.canConnectTo(self.slotid)
 				for id in connectable:
@@ -624,7 +631,7 @@ class NimSetup(Screen, ConfigListScreen, ServiceStopScreen):
 		self.nimConfig = self.nim.config
 		self.createSetup()
 		self.setTitle(_("Setup") + " " + self.nim.friendly_full_description)
-		
+
 		if not self.selectionChanged in self["config"].onSelectionChanged:
 			self["config"].onSelectionChanged.append(self.selectionChanged)
 		self.selectionChanged()
@@ -662,7 +669,7 @@ class NimSetup(Screen, ConfigListScreen, ServiceStopScreen):
 
 	def keyCancel(self):
 		if self["config"].isChanged():
-			self.session.openWithCallback(self.cancelConfirm, MessageBox, _("Really close without saving settings?"), default = True)
+			self.session.openWithCallback(self.cancelConfirm, MessageBox, _("Really close without saving settings?"), default = False)
 		else:
 			self.restartPrevService()
 
diff --git a/lib/python/Screens/SkinSelector.py b/lib/python/Screens/SkinSelector.py
index 802f703..ee84578 100644
--- a/lib/python/Screens/SkinSelector.py
+++ b/lib/python/Screens/SkinSelector.py
@@ -1,187 +1,254 @@
-# -*- coding: utf-8 -*-
-from Screens.Screen import Screen
-from Screens.Standby import TryQuitMainloop
-from Screens.MessageBox import MessageBox
-from Components.ActionMap import NumberActionMap
-from Components.Pixmap import Pixmap
-from Components.Sources.StaticText import StaticText
-from Components.MenuList import MenuList
-from Components.config import config, configfile
-from Tools.Directories import resolveFilename, SCOPE_ACTIVE_SKIN
-from enigma import eEnv, ePicLoad, eTimer
-import os
+import mmap
+import re
 
-class SkinSelectorBase:
-	def __init__(self, session):
-		self.skinlist = []
-		self.previewPath = ""
+from enigma import ePicLoad, getDesktop
+from os import listdir
+from os.path import dirname, exists, isdir, join as pathjoin
 
-		self["key_red"] = StaticText(_("Close"))
+from skin import DEFAULT_SKIN, DEFAULT_DISPLAY_SKIN, EMERGENCY_SKIN, currentDisplaySkin, currentPrimarySkin, domScreens
+from Components.ActionMap import HelpableNumberActionMap
+from Components.config import config
+from Components.Pixmap import Pixmap
+from Components.Sources.List import List
+from Components.Sources.StaticText import StaticText
+from Screens.HelpMenu import HelpableScreen
+from Screens.MessageBox import MessageBox
+from Screens.Screen import Screen
+from Screens.Standby import TryQuitMainloop, QUIT_RESTART
+from Tools.Directories import resolveFilename, SCOPE_CURRENT_SKIN, SCOPE_LCDSKIN, SCOPE_SKIN
+
+
+class SkinSelector(Screen, HelpableScreen):
+	skinTemplate = """
+	<screen name="SkinSelector" position="center,center" size="%d,%d">
+		<widget name="preview" position="center,%d" size="%d,%d" alphatest="blend" />
+		<widget source="skins" render="Listbox" position="center,%d" size="%d,%d" enableWrapAround="1" scrollbarMode="showOnDemand">
+			<convert type="TemplatedMultiContent">
+				{
+				"template": [
+					MultiContentEntryText(pos = (%d, 0), size = (%d, %d), font = 0, flags = RT_HALIGN_LEFT | RT_VALIGN_CENTER, text = 1),
+					MultiContentEntryText(pos = (%d, 0), size = (%d, %d), font = 0, flags = RT_HALIGN_RIGHT | RT_VALIGN_CENTER, text = 2)
+				],
+				"fonts": [gFont("Regular",%d)],
+				"itemHeight": %d
+				}
+			</convert>
+		</widget>
+		<widget source="description" render="Label" position="center,e-%d" size="%d,%d" font="Regular;%d" valign="center" />
+		<widget source="key_red" render="Label" position="%d,e-%d" size="%d,%d" backgroundColor="key_red" font="Regular;%d" foregroundColor="key_text" halign="center" valign="center" />
+		<widget source="key_green" render="Label" position="%d,e-%d" size="%d,%d" backgroundColor="key_green" font="Regular;%d" foregroundColor="key_text" halign="center" valign="center" />
+	</screen>"""
+	scaleData = [
+		670, 570,
+		10, 356, 200,
+		230, 650, 240,
+		10, 350, 30,
+		370, 260, 30,
+		25,
+		30,
+		85, 650, 25, 20,
+		10, 50, 140, 40, 20,
+		160, 50, 140, 40, 20
+	]
+	skin = None
+
+	def __init__(self, session, menu_path="", screenTitle=_("GUI Skin")):
+		Screen.__init__(self, session)
+		HelpableScreen.__init__(self)
+		if SkinSelector.skin is None:
+			self.initialiseSkin()
+		if config.usage.show_menupath.value == 'large':
+			menu_path += screenTitle
+			title = menu_path
+			self["menu_path_compressed"] = StaticText("")
+		elif config.usage.show_menupath.value == 'small':
+			title = screenTitle
+			self["menu_path_compressed"] = StaticText(menu_path + " >" if not menu_path.endswith(" / ") else menu_path[:-3] + " >" or "")
+		else:
+			title = screenTitle
+			self["menu_path_compressed"] = StaticText("")
+		Screen.setTitle(self, title)
+		self.rootDir = resolveFilename(SCOPE_SKIN)
+		self.config = config.skin.primary_skin
+		self.current = currentPrimarySkin
+		self.xmlList = ["skin.xml"]
+		self.onChangedEntry = []
+		self["skins"] = List(enableWrapAround=True)
+		self["preview"] = Pixmap()
+		self["key_red"] = StaticText(_("Cancel"))
 		self["key_green"] = StaticText(_("Save"))
-		self["introduction"] = StaticText(_("Please wait... Loading list..."))
-		self["SkinList"] = MenuList([])
-		self["Preview"] = Pixmap()
-
-		self["actions"] = NumberActionMap(["SetupActions", "DirectionActions", "TimerEditActions", "ColorActions"],
-		{
-			"ok": self.ok,
-			"cancel": self.close,
-			"red": self.close,
-			"green": self.ok,
-			"up": self.up,
-			"down": self.down,
-			"left": self.left,
-			"right": self.right,
-			"log": self.info,
-		}, -1)
-
+		self["description"] = StaticText(_("Please wait... Loading list..."))
+		self["actions"] = HelpableNumberActionMap(self, ["SetupActions", "DirectionActions", "ColorActions"], {
+			"ok": (self.save, _("Save and activate the currently selected skin")),
+			"cancel": (self.cancel, _("Cancel any changes to the currently active skin")),
+			"close": (self.cancelRecursive, _("Cancel any changes to the currently active skin and exit all menus")),
+			"red": (self.cancel, _("Cancel any changes to the currently active skin")),
+			"green": (self.save, _("Save and activate the currently selected skin")),
+			"up": (self.up, _("Move to the previous skin")),
+			"down": (self.down, _("Move to the next skin")),
+			"left": (self.left, _("Move to the previous page")),
+			"right": (self.right, _("Move to the next page"))
+		}, -1, description=_("Skin Selection Actions"))
 		self.picload = ePicLoad()
 		self.picload.PictureData.get().append(self.showPic)
-
 		self.onLayoutFinish.append(self.layoutFinished)
-		self.listTimer = eTimer()
-		self.listTimer.callback.append(self.refreshList)
+
+	def initialiseSkin(self):
+		element, path = domScreens.get("SkinSelector", (None, None))
+		if element is None:  # This skin does not have a SkinConverter screen.
+			buildSkin = True
+		else:  # Test the skin's SkinConverter screen to ensure it works with the new code.
+			buildSkin = False
+			widgets = element.findall("widget")
+			if widgets is not None:
+				for widget in widgets:
+					name = widget.get("name", None)
+					source = widget.get("source", None)
+					if name and name in ("Preview", "SkinList") or source == "introduction":
+						print "[SkinSelector] Warning: Current skin '%s' does not support this version of SkinSelector!    Please contact the skin's author!" % config.skin.primary_skin.value
+						del domScreens["SkinSelector"]  # It is incompatible, delete the screen from the skin.
+						buildSkin = True
+						break
+		if buildSkin:  # Build the embedded skin and scale it to the current screen resolution.
+			# The skin template is designed for a HD screen so the scaling factor is 720.
+			SkinSelector.skin = SkinSelector.skinTemplate % tuple([x * getDesktop(0).size().height() / 720 for x in SkinSelector.scaleData])
+			# print "[SkinSelector] DEBUG: Height=%d\n" % getDesktop(0).size().height(), SkinSelector.skin
+		else:
+			SkinSelector.skin = "<screen />"
 
 	def showPic(self, picInfo=""):
 		ptr = self.picload.getData()
 		if ptr is not None:
-			self["Preview"].instance.setPixmap(ptr.__deref__())
-			self["Preview"].show()
+			self["preview"].instance.setPixmap(ptr.__deref__())
 
 	def layoutFinished(self):
-		self.picload.setPara((self["Preview"].instance.size().width(), self["Preview"].instance.size().height(), 1.0, 1, 1, 1, "#ff000000"))
-		self.show()
-		self.listTimer.start(1, True)
+		self.picload.setPara((self["preview"].instance.size().width(), self["preview"].instance.size().height(), 1.0, 1, 1, 1, "#ff000000"))
+		self.refreshList()
 
 	def refreshList(self):
-		if self.SKINXML and os.path.exists(os.path.join(self.root, self.SKINXML)):
-			self.skinlist.append(self.DEFAULTSKIN)
-		if self.PICONSKINXML and os.path.exists(os.path.join(self.root, self.PICONSKINXML)):
-			self.skinlist.append(self.PICONDEFAULTSKIN)
+		resolutions = {
+			"480": _("NTSC"),
+			"576": _("PAL"),
+			"720": _("HD"),
+			"1080": _("FHD"),
+			"2160": _("4K"),
+			"4320": _("8K"),
+			"8640": _("16K")
+		}
+		emergency = _("< Emergency >")
+		default = _("< Default >")
+		defaultPicon = _("< Default + Picon >")
+		current = _("< Current >")
+		pending = _("< Pending restart >")
+		displayPicon = pathjoin(dirname(DEFAULT_DISPLAY_SKIN), "skin_display_picon.xml")
+		skinList = []
+		# Find and list the available skins...
+		for dir in [dir for dir in listdir(self.rootDir) if isdir(pathjoin(self.rootDir, dir))]:
+			previewPath = pathjoin(self.rootDir, dir)
+			for skinFile in self.xmlList:
+				skin = pathjoin(dir, skinFile)
+				skinPath = pathjoin(self.rootDir, skin)
+				if exists(skinPath):
+					resolution = None
+					if skinFile == "skin.xml":
+						with open(skinPath, "r") as fd:
+							mm = mmap.mmap(fd.fileno(), 0, prot=mmap.PROT_READ)
+							resolution = re.search("\<?resolution.*?\syres\s*=\s*\"(\d+)\"", mm)
+							resolution = resolution and resolutions.get(resolution.group(1), None)
+							mm.close()
+						print "[SkinSelector] Resolution of skin '%s': '%s'." % (skinPath, "Unknown" if resolution is None else resolution)
+						# Code can be added here to reject unsupported resolutions.
+					# The "piconprev.png" image should be "prevpicon.png" to keep it with its partner preview image.
+					preview = pathjoin(previewPath, "piconprev.png" if skinFile == "skin_display_picon.xml" else "prev.png")
+					if skin == EMERGENCY_SKIN:
+						list = [emergency, emergency, dir, skin, resolution, preview]
+					elif skin == DEFAULT_SKIN:
+						list = [dir, default, dir, skin, resolution, preview]
+					elif skin == DEFAULT_DISPLAY_SKIN:
+						list = [default, default, dir, skin, resolution, preview]
+					elif skin == displayPicon:
+						list = [dir, defaultPicon, dir, skin, resolution, preview]
+					else:
+						list = [dir, "", dir, skin, resolution, preview]
+					if skin == self.current:
+						list[1] = current
+					elif skin == self.config.value:
+						list[1] = pending
+					# 0=SortKey, 1=Label, 2=Flag, 3=Directory, 4=Skin, 5=Resolution, 6=Preview
+					skinList.append(tuple([list[0].upper()] + list))
+		skinList.sort()
+		self["skins"].setList(skinList)
+		# Set the list pointer to the current skin...
+		for index in range(len(skinList)):
+			if skinList[index][4] == self.config.value:
+				self["skins"].setIndex(index)
+				break
+		self.loadPreview()
+
+	def loadPreview(self):
+		self.changedEntry()
+		preview = self["skins"].getCurrent()[6]
+		if not exists(preview):
+			preview = resolveFilename(SCOPE_CURRENT_SKIN, "noprev.png")
+		self.picload.startDecode(preview)
+		resolution = self["skins"].getCurrent()[5]
+		msg = "" if resolution is None else " %s" % resolution
+		if self["skins"].getCurrent()[4] == self.config.value:
+			self["description"].setText(_("Press OK to keep the currently selected%s skin.") % msg)
+		else:
+			self["description"].setText(_("Press OK to activate the selected%s skin.") % msg)
 
-		for root, dirs, files in os.walk(self.root, followlinks=True):
-			for subdir in dirs:
-				dir = os.path.join(root,subdir)
-				if os.path.exists(os.path.join(dir,self.SKINXML)):
-					self.skinlist.append(subdir)
-			dirs = []
-		self.skinlist.sort()
-		self["SkinList"].l.setList(self.skinlist)
-		self["introduction"].setText(_("Press OK to activate the selected skin."))
+	def cancel(self):
+		self.close(False)
 
-		tmp = self.config.value.find("/"+self.SKINXML)
-		if tmp != -1:
-			tmp = self.config.value[:tmp]
-			idx = 0
-			for skin in self.skinlist:
-				if skin == tmp:
-					break
-				idx += 1
-			if idx < len(self.skinlist):
-				self["SkinList"].moveToIndex(idx)
-		self.loadPreview()
+	def cancelRecursive(self):
+		self.close(True)
 
-	def ok(self):
-		if not self["SkinList"].getCurrent() or not self.SKINXML:
-			return
-		if self["SkinList"].getCurrent() == self.DEFAULTSKIN:
-			self.skinfile = ""
-			self.skinfile = os.path.join(self.skinfile, self.SKINXML)
-		elif self["SkinList"].getCurrent() == self.PICONDEFAULTSKIN:
-			self.skinfile = ""
-			self.skinfile = os.path.join(self.skinfile, self.PICONSKINXML)
+	def save(self):
+		label = self["skins"].getCurrent()[1]
+		skin = self["skins"].getCurrent()[4]
+		if skin == self.config.value:
+			if skin == self.current:
+				print "[SkinSelector] Selected skin: '%s' (Unchanged!)" % pathjoin(self.rootDir, skin)
+				self.cancel()
+			else:
+				print "[SkinSelector] Selected skin: '%s' (Trying to restart again!)" % pathjoin(self.rootDir, skin)
+				restartBox = self.session.openWithCallback(self.restartGUI, MessageBox, _("To apply the selected '%s' skin the GUI needs to restart. Would you like to restart the GUI now?") % label, MessageBox.TYPE_YESNO)
+				restartBox.setTitle(_("SkinSelector: Restart GUI"))
+		elif skin == self.current:
+			print "[SkinSelector] Selected skin: '%s' (Pending skin '%s' cancelled!)" % (pathjoin(self.rootDir, skin), pathjoin(self.rootDir, self.config.value))
+			self.config.value = skin
+			self.config.save()
+			self.cancel()
 		else:
-			self.skinfile = self["SkinList"].getCurrent()
-			self.skinfile = os.path.join(self.skinfile, self.SKINXML)
+			print "[SkinSelector] Selected skin: '%s'" % pathjoin(self.rootDir, skin)
+			restartBox = self.session.openWithCallback(self.restartGUI, MessageBox, _("To save and apply the selected '%s' skin the GUI needs to restart. Would you like to save the selection and restart the GUI now?") % label, MessageBox.TYPE_YESNO)
+			restartBox.setTitle(_("SkinSelector: Restart GUI"))
 
-		print "[SkinSelector] Selected Skin: "+self.root+self.skinfile
-		restartbox = self.session.openWithCallback(self.restartGUI,MessageBox,_("GUI needs a restart to apply a new skin\nDo you want to restart the GUI now?"), MessageBox.TYPE_YESNO)
-		restartbox.setTitle(_("Restart GUI now?"))
+	def restartGUI(self, answer):
+		if answer is True:
+			self.config.value = self["skins"].getCurrent()[4]
+			self.config.save()
+			self.session.open(TryQuitMainloop, QUIT_RESTART)
+		self.refreshList()
 
 	def up(self):
-		self["SkinList"].up()
+		self["skins"].up()
 		self.loadPreview()
 
 	def down(self):
-		self["SkinList"].down()
+		self["skins"].down()
 		self.loadPreview()
 
 	def left(self):
-		self["SkinList"].pageUp()
+		self["skins"].pageUp()
 		self.loadPreview()
 
 	def right(self):
-		self["SkinList"].pageDown()
+		self["skins"].pageDown()
 		self.loadPreview()
 
-	def info(self):
-		aboutbox = self.session.open(MessageBox,_("Enigma2 skin selector"), MessageBox.TYPE_INFO)
-		aboutbox.setTitle(_("About..."))
-
-	def loadPreview(self):
-		self.changedEntry()
-		if self["SkinList"].getCurrent() == self.DEFAULTSKIN:
-			pngpath = "."
-			pngpath = os.path.join(os.path.join(self.root, pngpath), "prev.png")
-		elif self["SkinList"].getCurrent() == self.PICONDEFAULTSKIN:
-			pngpath = "."
-			pngpath = os.path.join(os.path.join(self.root, pngpath), "piconprev.png")
-		else:
-			pngpath = self["SkinList"].getCurrent()
-			if not pngpath :
-				pngpath = "."
-			pngpath = os.path.join(os.path.join(self.root, pngpath), "prev.png")
-
-		if not os.path.exists(pngpath):
-			pngpath = resolveFilename(SCOPE_ACTIVE_SKIN, "noprev.png")
-
-		if self.previewPath != pngpath:
-			self.previewPath = pngpath
-
-		self.picload.startDecode(self.previewPath)
-
-	def restartGUI(self, answer):
-		if answer is True:
-			if isinstance(self, LcdSkinSelector):
-				config.skin.display_skin.value = self.skinfile
-				config.skin.display_skin.save()
-			else:
-				config.skin.primary_skin.value = self.skinfile
-				config.skin.primary_skin.save()
-			self.session.open(TryQuitMainloop, 3)
-
-class SkinSelector(Screen, SkinSelectorBase):
-	SKINXML = "skin.xml"
-	DEFAULTSKIN = _("< Default >")
-	PICONSKINXML = None
-	PICONDEFAULTSKIN = None
-
-	skinlist = []
-	root = os.path.join(eEnv.resolve("${datadir}"),"enigma2")
-
-	def __init__(self, session, menu_path="", skin_name=None):
-		Screen.__init__(self, session)
-		SkinSelectorBase.__init__(self, session)
-		self.onChangedEntry = []
-		self.skinName = ["SkinSelector"]
-		if isinstance(skin_name, str):
-			self.skinName.insert(0,skin_name)
-
-		screentitle = _("Skin")
-		if config.usage.show_menupath.value == 'large':
-			menu_path += screentitle
-			title = menu_path
-			self["menu_path_compressed"] = StaticText("")
-		elif config.usage.show_menupath.value == 'small':
-			title = screentitle
-			self["menu_path_compressed"] = StaticText(menu_path + " >" if not menu_path.endswith(' / ') else menu_path[:-3] + " >" or "")
-		else:
-			title = screentitle
-			self["menu_path_compressed"] = StaticText("")
-		Screen.setTitle(self, title)
-		self.config = config.skin.primary_skin
-
-	# for summary
+	# For summary screen.
 	def changedEntry(self):
 		for x in self.onChangedEntry:
 			x()
@@ -190,66 +257,37 @@ class SkinSelector(Screen, SkinSelectorBase):
 		return SkinSelectorSummary
 
 	def getCurrentName(self):
-		current = self["SkinList"].getCurrent()
-		return None if current is None else current.replace("_", " ")
-
+		current = self["skins"].getCurrent()[1]
+		if current:
+			current = current.replace("_", " ")
+		return current
 
-class LcdSkinSelector(Screen, SkinSelectorBase):
-	SKINXML = "skin_display.xml"
-	DEFAULTSKIN = _("< Default >")
-	PICONSKINXML = "skin_display_picon.xml"
-	PICONDEFAULTSKIN = _("< Default with Picon >")
 
-	skinlist = []
-	root = os.path.join(eEnv.resolve("${datadir}"),"enigma2/display/")
-
-	def __init__(self, session, menu_path=""):
-		Screen.__init__(self, session)
-		SkinSelectorBase.__init__(self, session)
-		self.onChangedEntry = []
-		screentitle = _("Skin setup")
-		if config.usage.show_menupath.value == 'large':
-			menu_path += screentitle
-			title = menu_path
-			self["menu_path_compressed"] = StaticText("")
-		elif config.usage.show_menupath.value == 'small':
-			title = screentitle
-			self["menu_path_compressed"] = StaticText(menu_path + " >" if not menu_path.endswith(' / ') else menu_path[:-3] + " >" or "")
-		else:
-			title = screentitle
-			self["menu_path_compressed"] = StaticText("")
-		Screen.setTitle(self, title)
-		self.skinName = "SkinSelector"
+class LcdSkinSelector(SkinSelector):
+	def __init__(self, session, menu_path="", screenTitle=_("Display Skin")):
+		SkinSelector.__init__(self, session, menu_path=menu_path, screenTitle=screenTitle)
+		self.skinName = ["LcdSkinSelector", "SkinSelector"]
+		self.rootDir = resolveFilename(SCOPE_LCDSKIN)
 		self.config = config.skin.display_skin
-
-	# for summary
-	def changedEntry(self):
-		for x in self.onChangedEntry:
-			x()
-
-	def createSummary(self):
-		return SkinSelectorSummary
-
-	def getCurrentName(self):
-		current = self["SkinList"].getCurrent()
-		return None if current is None else current.replace("_", " ")
+		self.current = currentDisplaySkin
+		self.xmlList = ["skin_display.xml", "skin_display_picon.xml"]
 
 
 class SkinSelectorSummary(Screen):
 	def __init__(self, session, parent):
-		Screen.__init__(self, session, parent = parent)
+		Screen.__init__(self, session, parent=parent)
 		self["Name"] = StaticText("")
-		if hasattr(self.parent,"onChangedEntry"):
+		if hasattr(self.parent, "onChangedEntry"):
 			self.onShow.append(self.addWatcher)
 			self.onHide.append(self.removeWatcher)
 
 	def addWatcher(self):
-		if hasattr(self.parent,"onChangedEntry"):
+		if hasattr(self.parent, "onChangedEntry"):
 			self.parent.onChangedEntry.append(self.selectionChanged)
 			self.selectionChanged()
 
 	def removeWatcher(self):
-		if hasattr(self.parent,"onChangedEntry"):
+		if hasattr(self.parent, "onChangedEntry"):
 			self.parent.onChangedEntry.remove(self.selectionChanged)
 
 	def selectionChanged(self):
diff --git a/lib/python/Screens/Standby.py b/lib/python/Screens/Standby.py
index 8f9afce..a325fb3 100644
--- a/lib/python/Screens/Standby.py
+++ b/lib/python/Screens/Standby.py
@@ -1,20 +1,21 @@
-from Screens.Screen import Screen
+from os import path
+from gettext import dgettext
+from time import localtime, time
+from enigma import eDVBVolumecontrol, eTimer, eDVBLocalTimeHandler, eServiceReference, eStreamServer
+from boxbranding import getMachineBrand, getMachineName, getBoxType, getBrandOEM, getMachineBuild
+from GlobalActions import globalActionMap
+
 from Components.ActionMap import ActionMap
-from Components.config import config
 from Components.AVSwitch import AVSwitch
+from Components.config import config
 from Components.Console import Console
 import Components.ParentalControl
 from Components.SystemInfo import SystemInfo
 from Components.Sources.StaticText import StaticText
-from GlobalActions import globalActionMap
-from enigma import eDVBVolumecontrol, eTimer, eDVBLocalTimeHandler, eServiceReference, eStreamServer
 from Components.Sources.StreamService import StreamServiceList
-from boxbranding import getMachineBrand, getMachineName, getBoxType, getBrandOEM, getMachineBuild
-from Tools import Notifications
-from time import localtime, time
 import Screens.InfoBar
-from gettext import dgettext
-import os
+from Screens.Screen import Screen
+from Tools import Notifications
 
 inStandby = None
 
@@ -38,11 +39,11 @@ def setLCDMiniTVMode(value):
 
 class Standby2(Screen):
 	def Power(self):
-#		if (getBrandOEM() in ('dinobot') or getMachineBuild() in ('viper4k', 'gbmv200', 'sf8008', 'beyonwizv2')):
-#			try:
-#				open("/proc/stb/hdmi/output", "w").write("on")
-#			except:
-#				pass
+		if getBrandOEM() in ('dinobot') or SystemInfo["HasHiSi"]:
+			try:
+				open("/proc/stb/hdmi/output", "w").write("on")
+			except:
+				pass
 		print "[Standby] leave standby"
 		self.close(True)
 
@@ -62,7 +63,7 @@ class Standby2(Screen):
 
 		print "[Standby] enter standby"
 
-		if os.path.exists("/usr/scripts/standby_enter.sh"):
+		if path.exists("/usr/scripts/standby_enter.sh"):
 			Console().ePopen("/usr/scripts/standby_enter.sh")
 
 		self["actions"] = ActionMap( [ "StandbyActions" ],
@@ -114,11 +115,12 @@ class Standby2(Screen):
 			self.avswitch.setInput("SCART")
 		else:
 			self.avswitch.setInput("AUX")
-#		if (getBrandOEM() in ('dinobot') or getMachineBuild() in ('viper4k', 'gbmv200', 'sf8008', 'beyonwizv2')):
-#			try:
-#				open("/proc/stb/hdmi/output", "w").write("off")
-#			except:
-#				pass
+		if getBrandOEM() in ('dinobot') or SystemInfo["HasHiSi"]:
+			try:
+				open("/proc/stb/hdmi/output", "w").write("off")
+			except:
+				pass
+
 		self.onFirstExecBegin.append(self.__onFirstExecBegin)
 		self.onClose.append(self.__onClose)
 
@@ -141,7 +143,7 @@ class Standby2(Screen):
 		globalActionMap.setEnabled(True)
 		self.avswitch.setInput("ENCODER")
 		self.leaveMute()
-		if os.path.exists("/usr/scripts/standby_leave.sh"):
+		if path.exists("/usr/scripts/standby_leave.sh"):
 			Console().ePopen("/usr/scripts/standby_leave.sh")
 
 	def __onFirstExecBegin(self):
@@ -312,7 +314,7 @@ class TryQuitMainloop(MessageBox):
 			self.hide()
 			if self.retval == 1:
 				config.misc.DeepStandby.value = True
-				if os.path.exists("/usr/scripts/standby_enter.sh"):
+				if path.exists("/usr/scripts/standby_enter.sh"):
 					Console().ePopen("/usr/scripts/standby_enter.sh")
 			self.session.nav.stopService()
 			self.quitScreen = self.session.instantiateDialog(QuitMainloopScreen,retvalue=self.retval)
diff --git a/lib/python/Screens/SubtitleDisplay.py b/lib/python/Screens/SubtitleDisplay.py
index 13ece59..c4bdd3c 100644
--- a/lib/python/Screens/SubtitleDisplay.py
+++ b/lib/python/Screens/SubtitleDisplay.py
@@ -1,6 +1,62 @@
 from Screens.Screen import Screen
+from Components.Label import Label
+from enigma import eTimer, getDesktop, eActionMap, gFont
+from Components.ActionMap import ActionMap
+from sys import maxint
+import skin
 
 class SubtitleDisplay(Screen):
-	pass
+	def __init__(self, session):
+		Screen.__init__(self, session)
+		eActionMap.getInstance().bindAction('', -maxint - 1, self.__keypress)
 
-	# not really much to do...
+		self.messageShown = False
+		self['message'] = Label()
+		self['message'].hide()
+
+		self.onClose.append(self.__close)
+		self.onLayoutFinish.append(self.__layoutFinished)
+
+	def __close(self):
+		eActionMap.getInstance().unbindAction('', self.__keypress)
+
+	def __layoutFinished(self):
+		# Not expecting skins to contain this element
+		label = self['message']
+		label.instance.setFont(gFont("Regular", 50))
+		label.instance.setZPosition(1)
+		label.instance.setNoWrap(1)
+		label.instance.setHAlign(1)
+		label.instance.setVAlign(1)
+
+	def __keypress(self, key, flag):
+		# Releasing the subtitle button after a long press unintentionally pops up the subtitle dialog,
+		# This blocks it without causing issues for anyone that sets the buttons up the other way round
+		if self.messageShown:
+			# whilst the notification is shown any keydown event dismisses the notification
+			if flag == 0:
+				self.hideMessage()
+			else: # any key repeat or keyup event is discarded
+				return 1
+
+	def showMessage(self, message, hideScreen):
+		padding = (40,10)
+		label = self['message']
+		label.setText(message)
+		size = label.getSize()
+		label.resize(size[0]+padding[0]*2, size[1]+padding[1]*2)
+		label.move((getDesktop(0).size().width()-size[0]-padding[0]) // 2, getDesktop(0).size().height()-size[1]-padding[1]*2-30)
+		label.show()
+		self.messageShown = True
+		self.show()
+		self.hideTimer = eTimer()
+		self.hideTimer.callback.append(self.hideScreen if hideScreen else self.hideMessage)
+		self.hideTimer.start(2000, True)
+
+	def hideMessage(self):
+		self.messageShown = False
+		self['message'].hide()
+
+	def hideScreen(self):
+		self.hideMessage()
+		self.hide()
diff --git a/lib/python/Screens/TimerEdit.py b/lib/python/Screens/TimerEdit.py
index e201a06..f96e407 100644
--- a/lib/python/Screens/TimerEdit.py
+++ b/lib/python/Screens/TimerEdit.py
@@ -14,6 +14,7 @@ from Screens.ParentalControlSetup import ProtectedScreen
 from Screens.InputBox import PinInput
 from ServiceReference import ServiceReference
 from Screens.TimerEntry import TimerEntry, TimerLog
+from Screens.Setup import Setup
 from Tools.BoundFunction import boundFunction
 from Tools.FuzzyDate import FuzzyTime
 from time import time
@@ -27,10 +28,11 @@ class TimerEditList(Screen, ProtectedScreen):
 	DELETE = 4
 	STOP = 5
 
-	def __init__(self, session, menu_path = ""):
+	def __init__(self, session, menu_path = "", selectItem = None):
 		Screen.__init__(self, session)
 		screentitle = _("Timer List")
 		self.menu_path = menu_path
+		self.selectItem = selectItem
 		ProtectedScreen.__init__(self)
 		if config.usage.show_menupath.value == 'large':
 			self.menu_path += screentitle
@@ -52,11 +54,8 @@ class TimerEditList(Screen, ProtectedScreen):
 		Screen.setTitle(self, title)
 		
 		self.onChangedEntry = [ ]
-		list = [ ]
-		self.list = list
-		self.fillTimerList()
-
-		self["timerlist"] = TimerList(list)
+		self.list = []
+		self["timerlist"] = TimerList(self.list)
 
 		self.key_red_choice = self.EMPTY
 		self.key_yellow_choice = self.EMPTY
@@ -78,10 +77,37 @@ class TimerEditList(Screen, ProtectedScreen):
 				"left": self.left,
 				"right": self.right,
 				"up": self.up,
-				"down": self.down
+				"down": self.down,
+				"moveTop": self.moveTop,
+				"moveEnd": self.moveEnd,
+				"menu": self.createSetup
 			}, -1)
 		self.session.nav.RecordTimer.on_state_change.append(self.onStateChange)
-		self.onShown.append(self.updateState)
+		self.onLayoutFinish.append(self.onCreate)
+
+	def onCreate(self):
+		self.fillTimerList()
+		self["timerlist"].l.setList(self.list)
+
+		if self.selectItem is not None:
+			(event, service) = self.selectItem
+			if event is not None:
+				eventid = event.getEventId()
+				refstr = ':'.join(service.ref.toString().split(':')[:11])
+				idx = 0
+				for (timer, processed) in self.list:
+					if timer.eit == eventid and ':'.join(timer.service_ref.ref.toString().split(':')[:11]) == refstr:
+						self["timerlist"].moveToIndex(idx)
+						break
+					idx += 1
+		self.updateState()
+
+	def createSetup(self):
+		def onSetupClose(test = None):
+			self.refill()
+			pass
+
+		self.session.openWithCallback(onSetupClose, Setup, 'recording')
 
 	def isProtected(self):
 		return config.ParentalControl.setuppinactive.value and (not config.ParentalControl.config_sections.main_menu.value or hasattr(self.session, 'infobar') and self.session.infobar is None) and config.ParentalControl.config_sections.timer_menu.value and config.ParentalControl.servicepin[0].value
@@ -105,12 +131,19 @@ class TimerEditList(Screen, ProtectedScreen):
 		self["timerlist"].instance.moveSelection(self["timerlist"].instance.pageDown)
 		self.updateState()
 
+	def moveTop(self):
+		self["timerlist"].instance.moveSelection(self["timerlist"].instance.moveTop)
+		self.updateState()
+
+	def moveEnd(self):
+		self["timerlist"].instance.moveSelection(self["timerlist"].instance.moveEnd)
+		self.updateState()
+
 	def toggleDisabledState(self):
 		cur = self["timerlist"].getCurrent()
 		if cur:
 			t = cur
 			if t.disabled:
-# 				print "[TimerEdit] try to ENABLE timer"
 				t.enable()
 				timersanitycheck = TimerSanityCheck(self.session.nav.RecordTimer.timer_list, cur)
 				if not timersanitycheck.check():
@@ -254,8 +287,14 @@ class TimerEditList(Screen, ProtectedScreen):
 		list = self.list
 		del list[:]
 		list.extend([(timer, False) for timer in self.session.nav.RecordTimer.timer_list])
-		list.extend([(timer, True) for timer in self.session.nav.RecordTimer.processed_timers])
-		if config.usage.timerlist_finished_timer_position.index: #end of list
+		now = time()
+		if config.usage.timerlist_finished_timer_position.index == 2:
+			# if the "hide" option is set, continue to add disabled timers so
+			# timer conflicts remain visible
+			list.extend([(timer, True) for timer in self.session.nav.RecordTimer.processed_timers if timer.disabled and timer.end > now])
+		else:
+			list.extend([(timer, True) for timer in self.session.nav.RecordTimer.processed_timers])
+		if config.usage.timerlist_finished_timer_position.index == 1: #end of list
 			list.sort(cmp = eol_compare)
 		else:
 			list.sort(key = lambda x: x[0].begin)
@@ -336,10 +375,7 @@ class TimerEditList(Screen, ProtectedScreen):
 
 
 	def finishedEdit(self, answer):
-# 		print "[TimerEdit] finished edit"
-
 		if answer[0]:
-# 			print "[TimerEdit] Edited timer"
 			entry = answer[1]
 			timersanitycheck = TimerSanityCheck(self.session.nav.RecordTimer.timer_list, entry)
 			success = False
@@ -363,11 +399,8 @@ class TimerEditList(Screen, ProtectedScreen):
 
 			self.fillTimerList()
 			self.updateState()
-# 		else:
-# 			print "[TimerEdit] Timeredit aborted"
 
 	def finishedAdd(self, answer):
-# 		print "[TimerEdit] finished add"
 		if answer[0]:
 			entry = answer[1]
 			simulTimerList = self.session.nav.RecordTimer.record(entry)
@@ -380,8 +413,6 @@ class TimerEditList(Screen, ProtectedScreen):
 					self.session.openWithCallback(self.finishSanityCorrection, TimerSanityConflict, simulTimerList, self.menu_path)
 			self.fillTimerList()
 			self.updateState()
-# 		else:
-# 			print "[TimerEdit] Timeredit aborted"
 
 	def finishSanityCorrection(self, answer):
 		self.finishedAdd(answer)
diff --git a/lib/python/Screens/VideoWizard.py b/lib/python/Screens/VideoWizard.py
index 4fdf454..57e52f6 100644
--- a/lib/python/Screens/VideoWizard.py
+++ b/lib/python/Screens/VideoWizard.py
@@ -19,6 +19,9 @@ has_dvi = getHaveDVI() in ('True',)
 has_jack = getHaveAVJACK() in ('True',)
 has_scart = getHaveSCART() in ('True',)
 
+if boxtype == 'dm8000' or boxtype == 'dm800':
+	has_dvi = True
+
 
 class VideoWizardSummary(WizardSummary):
 	def __init__(self, session, parent):
diff --git a/lib/python/Screens/VirtualKeyBoard.py b/lib/python/Screens/VirtualKeyBoard.py
index e2d5835..e2a5556 100644
--- a/lib/python/Screens/VirtualKeyBoard.py
+++ b/lib/python/Screens/VirtualKeyBoard.py
@@ -1,8 +1,8 @@
-import copy
-import skin
+from copy import copy, deepcopy
 
-from enigma import eListboxPythonMultiContent, gFont, getPrevAsciiCode, RT_HALIGN_LEFT, RT_HALIGN_CENTER, RT_HALIGN_RIGHT, RT_VALIGN_TOP, RT_VALIGN_CENTER, RT_VALIGN_BOTTOM, BT_SCALE
+from enigma import BT_SCALE, RT_HALIGN_CENTER, RT_HALIGN_LEFT, RT_HALIGN_RIGHT, RT_VALIGN_BOTTOM, RT_VALIGN_CENTER, RT_VALIGN_TOP, eListboxPythonMultiContent, getPrevAsciiCode, gFont
 
+from skin import fonts, parameters
 from Components.ActionMap import HelpableNumberActionMap
 from Components.Input import Input
 from Components.Label import Label
@@ -13,15 +13,28 @@ from Components.Sources.StaticText import StaticText
 from Screens.ChoiceBox import ChoiceBox
 from Screens.HelpMenu import HelpableScreen
 from Screens.Screen import Screen
-from Tools.Directories import resolveFilename, SCOPE_CURRENT_SKIN
+from Tools.Directories import SCOPE_CURRENT_SKIN, resolveFilename
 from Tools.LoadPixmap import LoadPixmap
 from Tools.NumericalTextInput import NumericalTextInput
 
+VKB_DONE_ICON = 0
+VKB_ENTER_ICON = 1
+VKB_OK_ICON = 2
+VKB_SAVE_ICON = 3
+VKB_SEARCH_ICON = 4
+VKB_DONE_TEXT = 5
+VKB_ENTER_TEXT = 6
+VKB_OK_TEXT = 7
+VKB_SAVE_TEXT = 8
+VKB_SEARCH_TEXT = 9
+
+SPACE = u"SPACEICON"  # Symbol to be used for a SPACE on the keyboard.  Must be u"SPACE" (any case), u"SPACEICON" or u"SPACEICONALT".
+
 
 class VirtualKeyBoardList(MenuList):
 	def __init__(self, list, enableWrapAround=False):
 		MenuList.__init__(self, list, enableWrapAround, eListboxPythonMultiContent)
-		font = skin.fonts.get("VirtualKeyBoard", ("Regular", 28, 45))
+		font = fonts.get("VirtualKeyBoard", ("Regular", 28, 45))
 		self.l.setFont(0, gFont(font[0], font[1]))
 		self.l.setFont(1, gFont(font[0], font[1] * 5 / 9))  # Smaller font is 56% the height of bigger font
 		self.l.setItemHeight(font[2])
@@ -32,19 +45,6 @@ class VirtualKeyBoardEntryComponent:
 		pass
 
 
-VKB_DONE_ICON = 0
-VKB_ENTER_ICON = 1
-VKB_OK_ICON = 2
-VKB_SAVE_ICON = 3
-VKB_SEARCH_ICON = 4
-VKB_DONE_TEXT = 5
-VKB_ENTER_TEXT = 6
-VKB_OK_TEXT = 7
-VKB_SAVE_TEXT = 8
-VKB_SEARCH_TEXT = 9
-
-SPACE = u"SPACEICON"  # Symbol to be used for a SPACE on the keyboard.  Must be u"SPACE" (any case), u"SPACEICON" or u"SPACEICONALT".
-
 # For more information about using VirtualKeyBoard see /doc/VIRTUALKEYBOARD
 #
 class VirtualKeyBoard(Screen, HelpableScreen):
@@ -489,24 +489,24 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 			"uk_01": [_("Ukrainian"), _("Russian"), self.ukranian(self.russian)],
 			"uk_UA": [_("Ukrainian"), _("Ukraine"), self.ukranianEnhanced(self.russian)]
 		}
-
 		self["actions"] = HelpableNumberActionMap(self, "VirtualKeyBoardActions", {
 			"cancel": (self.cancel, _("Cancel any text changes and exit")),
 			"save": (self.save, _("Save / Enter text and exit")),
-			"shift": (self.shiftSelected, _("Select the virtual keyboard shifted character set for the next character only")),
-			"capsLock": (self.capsLockSelected, _("Select the virtual keyboard shifted character set")),
-			"select": (self.processSelect, _("Select the character or action under the virtual keyboard cursor")),
-			"locale": (self.localeMenu, _("Select the virtual keyboard locale from a menu")),
-			"up": (self.up, _("Move the virtual keyboard cursor up")),
-			"left": (self.left, _("Move the virtual keyboard cursor left")),
-			"right": (self.right, _("Move the virtual keyboard cursor right")),
-			"down": (self.down, _("Move the virtual keyboard cursor down")),
-			"first": (self.cursorFirst, _("Move the text buffer cursor to the first character")),
-			"prev": (self.cursorLeft, _("Move the text buffer cursor left")),
-			"next": (self.cursorRight, _("Move the text buffer cursor right")),
-			"last": (self.cursorLast, _("Move the text buffer cursor to the last character")),
-			"backspace": (self.backSelected, _("Delete the character to the left of text buffer cursor")),
-			"delete": (self.forwardSelected, _("Delete the character under the text buffer cursor")),
+			"shift": (self.shiftSelected, _("Select the shifted character set for the next character only")),
+			"capsLock": (self.capsLockSelected, _("Select the shifted character set")),
+			"select": (self.processSelect, _("Select the character or action under the keyboard cursor")),
+			"locale": (self.localeMenu, _("Select the locale from a menu")),
+			"up": (self.up, _("Move the keyboard cursor up")),
+			"left": (self.left, _("Move the keyboard cursor left")),
+			"right": (self.right, _("Move the keyboard cursor right")),
+			"down": (self.down, _("Move the keyboard cursor down")),
+			"first": (self.cursorFirst, _("Move the text cursor to the first character")),
+			"prev": (self.cursorLeft, _("Move the text cursor left")),
+			"next": (self.cursorRight, _("Move the text cursor right")),
+			"last": (self.cursorLast, _("Move the text cursor to the last character")),
+			"backspace": (self.backSelected, _("Delete the character to the left of text cursor")),
+			"delete": (self.forwardSelected, _("Delete the character under the text cursor")),
+			"erase": (self.eraseAll, _("Delete the all the text")),
 			"toggleOverwrite": (self.keyToggleOW, _("Toggle new text inserts before or overwrites existing text")),
 			"1": (self.keyNumberGlobal, _("Number or SMS style data entry")),
 			"2": (self.keyNumberGlobal, _("Number or SMS style data entry")),
@@ -520,7 +520,6 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 			"0": (self.keyNumberGlobal, _("Number or SMS style data entry")),
 			"gotAsciiCode": (self.keyGotAscii, _("Keyboard data entry"))
 		}, -2, description=_("Virtual KeyBoard Functions"))
-
 		self.lang = language.getLanguage()
 		self["prompt"] = Label(prompt)
 		self["text"] = Input(text=text, maxSize=maxSize, visible_width=visible_width, type=type, currPos=len(text.decode("utf-8", "ignore")) if currPos is None else currPos, allMarked=allMarked)
@@ -533,9 +532,9 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 		self["key_green"] = StaticText(_(greenLabel))
 		self["key_yellow"] = StaticText(_("Shift"))
 		self["key_blue"] = StaticText(self.shiftMsgs[1])
+		self["key_text"] = StaticText(_("TEXT"))
 		self["key_help"] = StaticText(_("HELP"))
-
-		width, height = skin.parameters.get("VirtualKeyBoard", (45, 45))
+		width, height = parameters.get("VirtualKeyBoard", (45, 45))
 		if self.bg_l is None or self.bg_m is None or self.bg_r is None:
 			self.width = width
 			self.height = height
@@ -545,11 +544,11 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 		# Alignment -> (Horizontal, Vertical):
 		# 	Horizontal alignment: 0=Auto, 1=Left, 2=Center, 3=Right (Auto=Left on left, Center on middle, Right on right).
 		# 	Vertical alignment: 0=Auto, 1=Top, 2=Center, 3=Bottom (Auto=Center).
-		self.alignment = skin.parameters.get("VirtualKeyBoardAlignment", (0, 0))
+		self.alignment = parameters.get("VirtualKeyBoardAlignment", (0, 0))
 		# Padding -> (Left/Right, Top/Botton) in pixels
-		self.padding = skin.parameters.get("VirtualKeyBoardPadding", (4, 4))
+		self.padding = parameters.get("VirtualKeyBoardPadding", (4, 4))
 		# Text color for each shift level.  (Ensure there is a color for each shift level!)
-		self.shiftColors = skin.parameters.get("VirtualKeyBoardShiftColors", (0x00ffffff, 0x00ffffff, 0x0000ffff, 0x00ff00ff))
+		self.shiftColors = parameters.get("VirtualKeyBoardShiftColors", (0x00ffffff, 0x00ffffff, 0x0000ffff, 0x00ff00ff))
 		self.language = None
 		self.location = None
 		self.keyList = []
@@ -568,7 +567,7 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 		self.onLayoutFinish.append(self.buildVirtualKeyBoard)
 
 	def arabic(self, base):
-		keyList = copy.deepcopy(base)
+		keyList = deepcopy(base)
 		keyList[1][0][8] = u"\u066D"
 		keyList.extend([[
 			[u"\u0630", u"\u0661", u"\u0662", u"\u0663", u"\u0664", u"\u0665", u"\u0666", u"\u0667", u"\u0668", u"\u0669", u"\u0660", u"-", u"=", u"BACKSPACEICON"],
@@ -586,7 +585,7 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 		return keyList
 
 	def belgian(self, base):
-		keyList = copy.deepcopy(base)
+		keyList = deepcopy(base)
 		keyList[0][0][6] = u"\u00A7"
 		keyList[0][0][8] = u"!"
 		keyList[0][0][12] = u"-"
@@ -608,7 +607,7 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 		return keyList
 
 	def dutch(self, base):
-		keyList = copy.deepcopy(base)
+		keyList = deepcopy(base)
 		keyList[0][0][0] = u"@"
 		keyList[0][0][11] = u"/"
 		keyList[0][0][12] = u"\u00B0"
@@ -635,7 +634,7 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 		return keyList
 
 	def estonian(self, base):
-		keyList = copy.deepcopy(base)
+		keyList = deepcopy(base)
 		keyList[0][0][0] = u"\u02C7"
 		keyList[0][1][11] = u"\u00FC"
 		keyList[0][1][12] = u"\u00F5"
@@ -666,7 +665,7 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 		return keyList
 
 	def germanSwiss(self, base):
-		keyList = copy.deepcopy(base)
+		keyList = deepcopy(base)
 		keyList[0][0][0] = u"\u00A7"
 		keyList[0][0][11] = u"'"
 		keyList[0][0][12] = u"^"
@@ -699,7 +698,7 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 		return keyList
 
 	def hungarian(self, base):
-		keyList = copy.deepcopy(base)
+		keyList = deepcopy(base)
 		keyList[0][0][0] = u"0"
 		keyList[0][0][10] = u"\u00F6"
 		keyList[0][0][11] = u"\u00FC"
@@ -736,7 +735,7 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 		return keyList
 
 	def latvianStandard(self, base):
-		keyList = copy.deepcopy(base)
+		keyList = deepcopy(base)
 		keyList[0][3][1] = u"\\"
 		keyList[1][3][1] = u"|"
 		keyList.append([
@@ -756,7 +755,7 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 		return keyList
 
 	def lithuanian(self, base):
-		keyList = copy.deepcopy(base)
+		keyList = deepcopy(base)
 		keyList[0][0] = [u"`", u"\u0105", u"\u010D", u"\u0119", u"\u0117", u"\u012F", u"\u0161", u"\u0173", u"\u016B", u"9", u"0", u"-", u"\u017E", u"BACKSPACEICON"]
 		keyList[0][3][1] = u"\\"
 		keyList[1][0] = [u"~", u"\u0104", u"\u010C", u"\u0118", u"\u0116", u"\u012E", u"\u0160", u"\u0172", u"\u016A", u"(", u")", u"_", u"\u017D", u"BACKSPACEICON"]
@@ -771,7 +770,7 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 		return keyList
 
 	def norwegian(self, base):
-		keyList = copy.deepcopy(base)
+		keyList = deepcopy(base)
 		keyList[0][0][0] = u"|"
 		keyList[0][0][12] = u"\\"
 		keyList[0][2][10] = u"\u00F8"
@@ -785,7 +784,7 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 		return keyList
 
 	def persian(self, base):
-		keyList = copy.deepcopy(base)
+		keyList = deepcopy(base)
 		keyList.append([
 			[u"\u00F7", u"\u06F1", u"\u06F2", u"\u06F3", u"\u06F4", u"\u06F5", u"\u06F6", u"\u06F7", u"\u06F8", u"\u06F9", u"\u06F0", u"-", u"=", u"BACKSPACEICON"],
 			[u"FIRSTICON", u"\u0636", u"\u0635", u"\u062B", u"\u0642", u"\u0641", u"\u063A", u"\u0639", u"\u0647", u"\u062E", u"\u062D", u"\u062C", u"\u0686", u"\u067E"],
@@ -803,7 +802,7 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 		return keyList
 
 	def polish(self, base):
-		keyList = copy.deepcopy(base)
+		keyList = deepcopy(base)
 		keyList[0][0][0] = u"\u02DB"
 		keyList[0][0][11] = u"+"
 		keyList[0][1][11] = u"\u017C"
@@ -831,7 +830,7 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 		return keyList
 
 	def polishProgrammers(self, base):
-		keyList = copy.deepcopy(base)
+		keyList = deepcopy(base)
 		keyList[0][3][1] = u"\\"
 		keyList[1][3][1] = u"|"
 		keyList.append([
@@ -844,7 +843,7 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 		return keyList
 
 	def slovak(self, base):
-		keyList = copy.deepcopy(base)
+		keyList = deepcopy(base)
 		keyList[0][0] = [u";", u"+", u"\u013E", u"\u0161", u"\u010D", u"\u0165", u"\u017E", u"\u00FD", u"\u00E1", u"\u00ED", u"\u00E9", u"=", u"\u00B4", u"BACKSPACEICON"]
 		keyList[0][1][11] = u"\u00FA"
 		keyList[0][1][12] = u"\u00E4"
@@ -871,7 +870,7 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 		return keyList
 
 	def ukranian(self, base):
-		keyList = copy.deepcopy(base)
+		keyList = deepcopy(base)
 		keyList[0][1][12] = u"\u0457"
 		keyList[0][1][13] = u"\\"
 		keyList[0][2][11] = u"\u0454"
@@ -891,10 +890,10 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 		return keyList
 
 	def unitedKingdom(self, base):
-		keyList = copy.deepcopy(base)
+		keyList = deepcopy(base)
 		keyList[0][1][13] = u"#"
 		keyList[0][3] = [u"CAPSLOCKICON", u"\\", u"z", u"x", u"c", u"v", u"b", u"n", u"m", u",", u".", u"/", u"CAPSLOCKICON", u"CAPSLOCKICON"]
-		keyList[0][4] = copy.copy(self.footer)
+		keyList[0][4] = copy(self.footer)
 		keyList[0][4][10] = u"\u00A6"
 		keyList[1][0][0] = u"\u00AC"
 		keyList[1][0][2] = u"\""
@@ -902,7 +901,7 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 		keyList[1][1][13] = u"~"
 		keyList[1][2][11] = u"@"
 		keyList[1][3] = [u"CAPSLOCKICON", u"|", u"Z", u"X", u"C", u"V", u"B", u"N", u"M", u"<", u">", u"?", u"CAPSLOCKICON", u"CAPSLOCKICON"]
-		keyList[1][4] = copy.copy(self.footer)
+		keyList[1][4] = copy(self.footer)
 		keyList[1][4][10] = u"\u20AC"
 		return keyList
 
@@ -957,7 +956,7 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 					res.append(MultiContentEntryPixmapAlphaBlend(pos=(x, 0), size=(w, self.height), png=self.bg_l))
 					x += w
 					w = self.bg_m.size().width() + (self.width * (width - 1))
-					res.append(MultiContentEntryPixmapAlphaBlend(pos=(x, 0), size=(w, self.height), png=self.bg_m, flags = BT_SCALE))
+					res.append(MultiContentEntryPixmapAlphaBlend(pos=(x, 0), size=(w, self.height), png=self.bg_m, flags=BT_SCALE))
 					x += w
 					w = self.bg_r.size().width()
 					res.append(MultiContentEntryPixmapAlphaBlend(pos=(x, 0), size=(w, self.height), png=self.bg_r))
@@ -970,7 +969,7 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 					res.append(MultiContentEntryPixmapAlphaBlend(pos=(xHighlight, 0), size=(w, self.height), png=highlight[0]))
 					xHighlight += w
 					w = highlight[1].size().width() + (self.width * (width - 1))
-					res.append(MultiContentEntryPixmapAlphaBlend(pos=(xHighlight, 0), size=(w, self.height), png=highlight[1], flags = BT_SCALE))
+					res.append(MultiContentEntryPixmapAlphaBlend(pos=(xHighlight, 0), size=(w, self.height), png=highlight[1], flags=BT_SCALE))
 					xHighlight += w
 					w = highlight[2].size().width()
 					res.append(MultiContentEntryPixmapAlphaBlend(pos=(xHighlight, 0), size=(w, self.height), png=highlight[2]))
@@ -1034,7 +1033,7 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 		self.list[self.selectedKey / self.keyboardWidth].append(MultiContentEntryPixmapAlphaBlend(pos=(x, 0), size=(w, self.height), png=self.sel_l))
 		x += w
 		w = self.sel_m.size().width() + (self.width * (width - 1))
-		self.list[self.selectedKey / self.keyboardWidth].append(MultiContentEntryPixmapAlphaBlend(pos=(x, 0), size=(w, self.height), png=self.sel_m, flags = BT_SCALE))
+		self.list[self.selectedKey / self.keyboardWidth].append(MultiContentEntryPixmapAlphaBlend(pos=(x, 0), size=(w, self.height), png=self.sel_m, flags=BT_SCALE))
 		x += w
 		w = self.sel_r.size().width()
 		self.list[self.selectedKey / self.keyboardWidth].append(MultiContentEntryPixmapAlphaBlend(pos=(x, 0), size=(w, self.height), png=self.sel_r))
@@ -1131,6 +1130,10 @@ class VirtualKeyBoard(Screen, HelpableScreen):
 	def forwardSelected(self):
 		self["text"].deleteForward()
 
+	def eraseAll(self):
+		self['text'].deleteAllChars()
+		self['text'].update()
+
 	def cursorFirst(self):
 		self["text"].home()
 
diff --git a/lib/python/Tools/Directories.py b/lib/python/Tools/Directories.py
index 9177e11..b277db6 100644
--- a/lib/python/Tools/Directories.py
+++ b/lib/python/Tools/Directories.py
@@ -1,4 +1,6 @@
 # -*- coding: utf-8 -*-
+import errno
+import inspect
 import os
 
 from enigma import eEnv, getDesktop
@@ -21,7 +23,9 @@ SCOPE_PLUGINS = 9
 SCOPE_MEDIA = 10
 SCOPE_PLAYLIST = 11
 SCOPE_CURRENT_SKIN = 12
-
+SCOPE_CURRENT_PLUGIN_ABSOLUTE = 13
+SCOPE_CURRENT_PLUGIN_RELATIVE = 14
+SCOPE_KEYMAPS = 15
 SCOPE_METADIR = 16
 SCOPE_CURRENT_PLUGIN = 17
 SCOPE_TIMESHIFT = 18
@@ -33,6 +37,7 @@ SCOPE_AUTORECORD = 22
 SCOPE_DEFAULTDIR = 23
 SCOPE_DEFAULTPARTITION = 24
 SCOPE_DEFAULTPARTITIONMOUNTDIR = 25
+SCOPE_LIBDIR = 26
 
 PATH_CREATE = 0
 PATH_DONTCREATE = 1
@@ -51,16 +56,20 @@ defaultPaths = {
 	SCOPE_MEDIA: ("/media/", PATH_DONTCREATE),
 	SCOPE_PLAYLIST: (eEnv.resolve("${sysconfdir}/enigma2/playlist/"), PATH_CREATE),
 	SCOPE_CURRENT_SKIN: (eEnv.resolve("${datadir}/enigma2/"), PATH_DONTCREATE),
+	SCOPE_CURRENT_PLUGIN_ABSOLUTE: (eEnv.resolve("${libdir}/enigma2/python/Plugins/"), PATH_DONTCREATE),
+	SCOPE_CURRENT_PLUGIN_RELATIVE: (eEnv.resolve("${libdir}/enigma2/python/Plugins/"), PATH_DONTCREATE),
+	SCOPE_KEYMAPS: (eEnv.resolve("${datadir}/keymaps/"), PATH_CREATE),
 	SCOPE_METADIR: (eEnv.resolve("${datadir}/meta"), PATH_CREATE),
 	SCOPE_CURRENT_PLUGIN: (eEnv.resolve("${libdir}/enigma2/python/Plugins/"), PATH_CREATE),
 	SCOPE_TIMESHIFT: ("/media/hdd/timeshift/", PATH_DONTCREATE),
 	SCOPE_ACTIVE_SKIN: (eEnv.resolve("${datadir}/enigma2/"), PATH_DONTCREATE),
 	SCOPE_LCDSKIN: (eEnv.resolve("${datadir}/enigma2/display/"), PATH_DONTCREATE),
-	SCOPE_CURRENT_LCDSKIN: ("${datadir}/enigma2/display/", PATH_DONTCREATE),
+	SCOPE_CURRENT_LCDSKIN: (eEnv.resolve("${datadir}/enigma2/display/"), PATH_DONTCREATE),
 	SCOPE_AUTORECORD: ("/media/hdd/movie/", PATH_DONTCREATE),
 	SCOPE_DEFAULTDIR: (eEnv.resolve("${datadir}/enigma2/defaults/"), PATH_CREATE),
 	SCOPE_DEFAULTPARTITION: ("/dev/mtdblock6", PATH_DONTCREATE),
-	SCOPE_DEFAULTPARTITIONMOUNTDIR: (eEnv.resolve("${datadir}/enigma2/dealer"), PATH_CREATE)
+	SCOPE_DEFAULTPARTITIONMOUNTDIR: (eEnv.resolve("${datadir}/enigma2/dealer"), PATH_CREATE),
+	SCOPE_LIBDIR: (eEnv.resolve("${libdir}/"), PATH_DONTCREATE)
 }
 
 def resolveFilename(scope, base="", path_prefix=None):
@@ -83,8 +92,8 @@ def resolveFilename(scope, base="", path_prefix=None):
 	if flag == PATH_CREATE and not pathExists(path):
 		try:
 			os.makedirs(path)
-		except OSError, e:
-			print "[Directories] Error %d: Couldn't create directory '%s' (%s)" % (e.errno, path, os.strerror(e.errno))
+		except (IOError, OSError) as err:
+			print "[Directories] Error %d: Couldn't create directory '%s' (%s)" % (err.errno, path, err.strerror)
 			return None
 	# Remove any suffix data and restore it at the end.
 	suffix = None
@@ -102,6 +111,15 @@ def resolveFilename(scope, base="", path_prefix=None):
 			from Components.config import config
 			skin = os.path.dirname(config.skin.primary_skin.value)
 			path = os.path.join(path, skin)
+		elif scope in (SCOPE_CURRENT_PLUGIN_ABSOLUTE, SCOPE_CURRENT_PLUGIN_RELATIVE):
+			callingCode = os.path.normpath(inspect.stack()[1][1])
+			plugins = os.path.normpath(defaultPaths[SCOPE_PLUGINS][0])
+			path = None
+			if comparePath(plugins, callingCode):
+				pluginCode = callingCode[len(plugins) + 1:].split(os.sep)
+				if len(pluginCode) > 2:
+					relative = "%s%s%s" % (pluginCode[0], os.sep, pluginCode[1])
+					path = os.path.join(plugins, relative)
 	elif scope in (SCOPE_CURRENT_SKIN, SCOPE_ACTIVE_SKIN):
 		# This import must be here as this module finds the config file as part of the config initialisation.
 		from Components.config import config
@@ -169,6 +187,15 @@ def resolveFilename(scope, base="", path_prefix=None):
 		file = os.path.join(defaultPaths[SCOPE_PLUGINS][0], base)
 		if pathExists(file):
 			path = file
+	elif scope in (SCOPE_CURRENT_PLUGIN_ABSOLUTE, SCOPE_CURRENT_PLUGIN_RELATIVE):
+		callingCode = os.path.normpath(inspect.stack()[1][1])
+		plugins = os.path.normpath(defaultPaths[SCOPE_PLUGINS][0])
+		path = None
+		if comparePath(plugins, callingCode):
+			pluginCode = callingCode[len(plugins) + 1:].split(os.sep)
+			if len(pluginCode) > 2:
+				relative = os.path.join("%s%s%s" % (pluginCode[0], os.sep, pluginCode[1]), base)
+				path = os.path.join(plugins, relative)
 	else:
 		path, flags = defaultPaths.get(scope)
 		path = os.path.join(path, base)
@@ -176,11 +203,25 @@ def resolveFilename(scope, base="", path_prefix=None):
 	# If the path is a directory then ensure that it ends with a "/".
 	if os.path.isdir(path) and not path.endswith("/"):
 		path += "/"
+	if scope == SCOPE_CURRENT_PLUGIN_RELATIVE:
+		path = path[len(plugins) + 1:]
 	# If a suffix was supplier restore it.
 	if suffix is not None:
 		path = "%s:%s" % (path, suffix)
 	return path
 
+def comparePath(leftPath, rightPath):
+	if leftPath.endswith(os.sep):
+		leftPath = leftPath[:-1]
+	if rightPath.endswith(os.sep):
+		rightPath = rightPath[:-1]
+	left = leftPath.split(os.sep)
+	right = rightPath.split(os.sep)
+	for segment in range(len(left)):
+		if left[segment] != right[segment]:
+			return False
+	return True
+
 def bestRecordingLocation(candidates):
 	path = ""
 	biggest = 0
@@ -194,8 +235,8 @@ def bestRecordingLocation(candidates):
 				if size > biggest:
 					biggest = size
 					path = candidate[1]
-		except Exception, e:
-			print "[Directories] Error %d: Couldn't get free space for '%s' (%s)" % (e.errno, candidate[1], os.strerror(e.errno))
+		except (IOError, OSError) as err:
+			print "[Directories] Error %d: Couldn't get free space for '%s' (%s)" % (err.errno, candidate[1], err.strerror)
 	return path
 
 def defaultRecordingLocation(candidate=None):
@@ -326,8 +367,8 @@ def copyfile(src, dst):
 			if not buf:
 				break
 			f2.write(buf)
-	except OSError, e:
-		print "[Directories] Error %d: Copying file '%s' to '%s'! (%s)" % (e.errno, src, dst, os.strerror(e.errno))
+	except (IOError, OSError) as err:
+		print "[Directories] Error %d: Copying file '%s' to '%s'! (%s)" % (err.errno, src, dst, err.strerror)
 		status = -1
 	if f1 is not None:
 		f1.close()
@@ -337,14 +378,14 @@ def copyfile(src, dst):
 		st = os.stat(src)
 		try:
 			os.chmod(dst, S_IMODE(st.st_mode))
-		except OSError, e:
-			print "[Directories] Error %d: Setting modes from '%s' to '%s'! (%s)" % (e.errno, src, dst, os.strerror(e.errno))
+		except (IOError, OSError) as err:
+			print "[Directories] Error %d: Setting modes from '%s' to '%s'! (%s)" % (err.errno, src, dst, err.strerror)
 		try:
 			os.utime(dst, (st.st_atime, st.st_mtime))
-		except OSError, e:
-			print "[Directories] Error %d: Setting times from '%s' to '%s'! (%s)" % (e.errno, src, dst, os.strerror(e.errno))
-	except OSError, e:
-		print "[Directories] Error %d: Obtaining stats from '%s' to '%s'! (%s)" % (e.errno, src, dst, os.strerror(e.errno))
+		except (IOError, OSError) as err:
+			print "[Directories] Error %d: Setting times from '%s' to '%s'! (%s)" % (err.errno, src, dst, err.strerror)
+	except (IOError, OSError) as err:
+		print "[Directories] Error %d: Obtaining stats from '%s' to '%s'! (%s)" % (err.errno, src, dst, err.strerror)
 	return status
 
 def copytree(src, dst, symlinks=False):
@@ -366,20 +407,20 @@ def copytree(src, dst, symlinks=False):
 				copytree(srcname, dstname, symlinks)
 			else:
 				copyfile(srcname, dstname)
-		except OSError, e:
-			print "[Directories] Error %d: Copying tree '%s' to '%s'! (%s)" % (e.errno, srcname, dstname, os.strerror(e.errno))
+		except (IOError, OSError) as err:
+			print "[Directories] Error %d: Copying tree '%s' to '%s'! (%s)" % (err.errno, srcname, dstname, err.strerror)
 	try:
 		st = os.stat(src)
 		try:
 			os.chmod(dst, S_IMODE(st.st_mode))
-		except OSError, e:
-			print "[Directories] Error %d: Setting modes from '%s' to '%s'! (%s)" % (e.errno, src, dst, os.strerror(e.errno))
+		except (IOError, OSError) as err:
+			print "[Directories] Error %d: Setting modes from '%s' to '%s'! (%s)" % (err.errno, src, dst, err.strerror)
 		try:
 			os.utime(dst, (st.st_atime, st.st_mtime))
-		except OSError, e:
-			print "[Directories] Error %d: Setting times from '%s' to '%s'! (%s)" % (e.errno, src, dst, os.strerror(e.errno))
-	except OSError, e:
-		print "[Directories] Error %d: Obtaining stats from '%s' to '%s'! (%s)" % (e.errno, src, dst, os.strerror(e.errno))
+		except (IOError, OSError) as err:
+			print "[Directories] Error %d: Setting times from '%s' to '%s'! (%s)" % (err.errno, src, dst, err.strerror)
+	except (IOError, OSError) as err:
+		print "[Directories] Error %d: Obtaining stats from '%s' to '%s'! (%s)" % (err.errno, src, dst, err.strerror)
 
 # Renames files or if source and destination are on different devices moves them in background
 # input list of (source, destination)
@@ -391,23 +432,23 @@ def moveFiles(fileList):
 		for item in fileList:
 			os.rename(item[0], item[1])
 			movedList.append(item)
-	except OSError, e:
-		if e.errno == 18:  # errno.EXDEV - Invalid cross-device link
+	except (IOError, OSError) as err:
+		if err.errno == errno.EXDEV:  # Invalid cross-device link
 			print "[Directories] Warning: Cannot rename across devices, trying slower move."
 			from Tools.CopyFiles import moveFiles as extMoveFiles  # OpenViX, OpenATV, Beyonwiz
 			# from Screens.CopyFiles import moveFiles as extMoveFiles  # OpenPLi
 			extMoveFiles(fileList, item[0])
 			print "[Directories] Moving files in background."
 		else:
-			print "[Directories] Error %d: Moving file '%s' to '%s'! (%s)" % (e.errno, item[0], item[1], os.strerror(e.errno))
+			print "[Directories] Error %d: Moving file '%s' to '%s'! (%s)" % (err.errno, item[0], item[1], err.strerror)
 			errorFlag = True
 	if errorFlag:
 		print "[Directories] Reversing renamed files due to error."
 		for item in movedList:
 			try:
 				os.rename(item[1], item[0])
-			except OSError, e:
-				print "[Directories] Error %d: Renaming '%s' to '%s'! (%s)" % (e.errno, item[1], item[0], os.strerror(e.errno))
+			except (IOError, OSError) as err:
+				print "[Directories] Error %d: Renaming '%s' to '%s'! (%s)" % (err.errno, item[1], item[0], err.strerror)
 				print "[Directories] Failed to undo move:", item
 
 def getSize(path, pattern=".*"):
diff --git a/lib/python/Tools/Multiboot.py b/lib/python/Tools/Multiboot.py
index ae04497..e6686de 100644
--- a/lib/python/Tools/Multiboot.py
+++ b/lib/python/Tools/Multiboot.py
@@ -1,149 +1,166 @@
-from Components.SystemInfo import SystemInfo
-from Components.Console import Console
-from boxbranding import getMachineMtdRoot
-from Tools.Directories import pathExists
-import os
+import glob
 import shutil
 import subprocess
+import tempfile
+
+from os import mkdir, path, rmdir, rename, remove, sep, stat
+
+from boxbranding import getMachineBuild, getMachineMtdRoot
+from Components.Console import Console
+from Components.SystemInfo import SystemInfo
 
-#		#default layout for 				Zgemma H7/Mut@nt HD51						 Giga4K						SF8008/trio4K
-# boot								/dev/mmcblk0p1						/dev/mmcblk0p1				/dev/mmcblk0p3
-# STARTUP_1 			Image 1: boot emmcflash0.kernel1 'root=/dev/mmcblk0p3 rw rootwait'	boot emmcflash0.kernel1: 'root=/dev/mmcblk0p5		boot emmcflash0.kernel 'root=/dev/mmcblk0p13 
-# STARTUP_2 			Image 2: boot emmcflash0.kernel2 'root=/dev/mmcblk0p5 rw rootwait'      boot emmcflash0.kernel2: 'root=/dev/mmcblk0p7		boot usb0.sda1 'root=/dev/sda2
-# STARTUP_3		        Image 3: boot emmcflash0.kernel3 'root=/dev/mmcblk0p7 rw rootwait'	boot emmcflash0.kernel3: 'root=/dev/mmcblk0p9		boot usb0.sda3 'root=/dev/sda4
-# STARTUP_4		        Image 4: boot emmcflash0.kernel4 'root=/dev/mmcblk0p9 rw rootwait'	NOT IN USE due to Rescue mode in mmcblk0p3		NOT IN USE due to only 4 partitions on SDcard
+class tmp:
+	dir = None
+
+def getMBbootdevice():
+	tmp.dir = tempfile.mkdtemp(prefix="Multiboot")
+	for device in ("/dev/block/by-name/bootoptions", "/dev/mmcblk0p1", "/dev/mmcblk1p1", "/dev/mmcblk0p3", "/dev/mmcblk0p4"):
+		if path.exists(device):
+			Console().ePopen("mount %s %s" % (device, tmp.dir))
+			if path.isfile(path.join(tmp.dir, "STARTUP")):
+				print "[Multiboot] [getMBbootdevices] Bootdevice found: %s" % device
+				return device
+			Console().ePopen("umount %s" % tmp.dir)
+	if not path.ismount(tmp.dir):
+		rmdir(tmp.dir)
+
+def getparam(line, param):
+	return line.rsplit("%s=" % param, 1)[1].split(" ", 1)[0]
+
+def getMultibootslots():
+	bootslots = {}
+	if SystemInfo["MBbootdevice"]:
+		for file in glob.glob(path.join(tmp.dir, "STARTUP_*")):
+			if "STARTUP_RECOVERY" in file:
+				SystemInfo["RecoveryMode"] = True
+				print "[multiboot] [getMultibootslots] RecoveryMode is set to:%s" % SystemInfo["RecoveryMode"]
+			slotnumber = file.rsplit("_", 3 if "BOXMODE" in file else 1)[1]
+			if slotnumber.isdigit() and slotnumber not in bootslots:
+				slot = {}
+				for line in open(file).readlines():
+					# print "Multiboot getMultibootslots readlines = %s " %line
+					if "root=" in line:
+						line = line.rstrip("\n")
+						root = getparam(line, "root")
+						if path.exists(root):
+							slot["root"] = root
+							slot["startupfile"] = path.basename(file)
+							if "rootsubdir" in line:
+								SystemInfo["HasRootSubdir"] = True
+								print "[multiboot] [getMultibootslots] HasRootSubdir is set to:%s" % SystemInfo["HasRootSubdir"]
+								slot["rootsubdir"] = getparam(line, "rootsubdir")
+								slot["kernel"] = getparam(line, "kernel")
+							elif "sda" in line:
+								slot["kernel"] = getparam(line, "kernel")	# sf8008 SD card slot pairs same as oldsystle MB
+								slot["rootsubdir"] = None
+							else:
+								slot["kernel"] = "%sp%s" % (root.split("p")[0], int(root.split("p")[1]) - 1)	# oldstyle MB kernel = root-1
+						break
+				if slot:
+					bootslots[int(slotnumber)] = slot
+		print "[multiboot] [getMultibootslots] Finished bootslots = %s" %bootslots
+		Console().ePopen("umount %s" % tmp.dir)
+		if not path.ismount(tmp.dir):
+			rmdir(tmp.dir)
+	print "[Multiboot] Bootslots found:", bootslots
+	return bootslots
 
 def GetCurrentImage():
-	if SystemInfo["HasRootSubdir"]:
-		return SystemInfo["HasRootSubdir"] and (int(open('/sys/firmware/devicetree/base/chosen/bootargs', 'r').read()[:-1].split("rootsubdir=linuxrootfs")[1].split(' ')[0]))
-	else:
-		f = open('/sys/firmware/devicetree/base/chosen/bootargs', 'r').read()
-		if "%s" %(SystemInfo["canMultiBoot"][2]) in f:
-			return SystemInfo["canMultiBoot"] and (int(open('/sys/firmware/devicetree/base/chosen/bootargs', 'r').read()[:-1].split("%s" % SystemInfo["canMultiBoot"][2])[1].split(' ')[0])-SystemInfo["canMultiBoot"][0])/2
+	if SystemInfo["canMultiBoot"]:
+		slot = [x[-1] for x in open("/sys/firmware/devicetree/base/chosen/bootargs", "r").read().split() if x.startswith("rootsubdir")]
+		if slot:
+			return int(slot[0])
 		else:
-			return 0	# if media not in SystemInfo["canMultiBoot"], then using SDcard and Image is in eMMC (1st slot) so tell caller with 0 return
+			root = getparam(open("/sys/firmware/devicetree/base/chosen/bootargs", "r").read(), "root")
+			for slot in SystemInfo["canMultiBoot"].keys():
+				if SystemInfo["canMultiBoot"][slot]["root"] == root:
+					return slot
 def GetCurrentKern():
 	if SystemInfo["HasRootSubdir"]:
-		return SystemInfo["HasRootSubdir"] and (int(open('/sys/firmware/devicetree/base/chosen/bootargs', 'r').read()[:-1].split("kernel=/dev/mmcblk0p")[1].split(' ')[0]))
+		return SystemInfo["HasRootSubdir"] and (int(open("/sys/firmware/devicetree/base/chosen/bootargs", "r").read()[:-1].split("kernel=/dev/mmcblk0p")[1].split(" ")[0]))
 
 def GetCurrentRoot():
 	if SystemInfo["HasRootSubdir"]:
-		return SystemInfo["HasRootSubdir"] and (int(open('/sys/firmware/devicetree/base/chosen/bootargs', 'r').read()[:-1].split("root=/dev/mmcblk0p")[1].split(' ')[0]))
+		return SystemInfo["HasRootSubdir"] and (int(open("/sys/firmware/devicetree/base/chosen/bootargs", "r").read()[:-1].split("root=/dev/mmcblk0p")[1].split(" ")[0]))
 
 def GetCurrentImageMode():
-	return SystemInfo["canMultiBoot"] and SystemInfo["canMode12"] and int(open('/sys/firmware/devicetree/base/chosen/bootargs', 'r').read().replace('\0', '').split('=')[-1])
-
-class GetImagelist():
-	MOUNT = 0
-	UNMOUNT = 1
-	NoRun = 0		# receivers only uses 1 media for multiboot
-	FirstRun = 1		# receiver uses eMMC and SD card for multiboot - so handle SDcard slots 1st via SystemInfo(canMultiBoot)
-	LastRun = 2		# receiver uses eMMC and SD card for multiboot - and then handle eMMC (currently one time)
-
-	def __init__(self, callback):
-		if SystemInfo["canMultiBoot"]:
-			(self.firstslot, self.numberofslots) = SystemInfo["canMultiBoot"][:2]
-			self.callback = callback
-			self.imagelist = {}
-			if not os.path.isdir('/tmp/testmount'):
-				os.mkdir('/tmp/testmount')
-			self.container = Console()
-			self.slot = 1
-			self.slot2 = 1
-			if SystemInfo["HasSDmmc"]:
-				self.SDmmc = self.FirstRun	# process SDcard slots
-			else:
-				self.SDmmc = self.NoRun		# only mmc slots
-			self.phase = self.MOUNT
-			self.part = SystemInfo["canMultiBoot"][2]	# pick up slot type
-			self.run()
-		else:
-			callback({})
-
-	def run(self):
-		if SystemInfo["HasRootSubdir"]:
-			if self.slot == 1 and os.path.islink("/dev/block/by-name/linuxrootfs"):
-				self.part2 = os.readlink("/dev/block/by-name/linuxrootfs")[5:]
-				self.container.ePopen('mount /dev/block/by-name/linuxrootfs /tmp/testmount' if self.phase == self.MOUNT else 'umount /tmp/testmount', self.appClosed)
-			else:
-				self.part2 = os.readlink("/dev/block/by-name/userdata")[5:]
-				self.container.ePopen('mount /dev/block/by-name/userdata /tmp/testmount' if self.phase == self.MOUNT else 'umount /tmp/testmount', self.appClosed)
-			if self.phase == self.MOUNT:
-				self.imagelist[self.slot2] = { 'imagename': _("Empty slot"), 'part': '%s' %self.part2 }
-		else:
-			if self.SDmmc == self.LastRun:
-				self.part2 = getMachineMtdRoot()	# process mmc slot
-				self.slot2 = 1
+	return bool(SystemInfo["canMultiBoot"]) and SystemInfo["canMode12"] and int(open("/sys/firmware/devicetree/base/chosen/bootargs", "r").read().replace("\0", "").split("=")[-1])
+
+def GetImagelist():
+	Imagelist = {}
+	tmp.dir = tempfile.mkdtemp(prefix="Multiboot")
+	for slot in sorted(SystemInfo["canMultiBoot"].keys()):
+		Console().ePopen("mount %s %s" % (SystemInfo["canMultiBoot"][slot]["root"], tmp.dir))
+		BuildVersion = "  "
+		Build = " "  # ViX Build No.
+		Dev = " "  # ViX Dev No.
+		Creator = " "  # Openpli Openvix Openatv etc
+		Date = " "
+		BuildType = " "  # release etc
+		Imagelist[slot] = {"imagename": _("Empty slot")}
+		imagedir = sep.join(filter(None, [tmp.dir, SystemInfo["canMultiBoot"][slot].get("rootsubdir", "")]))
+		if path.isfile(path.join(imagedir, "usr/bin/enigma2")):
+		# print "[multiboot] [GetImagelist] 2 slot = %s imagedir = %s" % (slot, imagedir)
+			Creator = open("%s/etc/issue" % imagedir).readlines()[-2].capitalize().strip()[:-6]
+			if Creator.startswith("Openvix"):
+				Creator = Creator.replace("-release", " rel")
+				reader = boxbranding_reader(imagedir)
+				BuildType = reader.getImageType()
+				Build = reader.getImageBuild()
+				Dev = BuildType != "release" and " %s" % reader.getImageDevBuild() or ""
+				BuildVersion = "%s %s %s %s" % (Creator, BuildType[0:3], Build, Dev)
 			else:
-				self.part2 = "%s" %(self.part + str(self.slot * 2 + self.firstslot))
-				if self.SDmmc == self.FirstRun:
-					self.slot2 += 1			# allow for mmc slot"
-			if self.phase == self.MOUNT:
-				self.imagelist[self.slot2] = { 'imagename': _("Empty slot"), 'part': '%s' %self.part2 }
-			self.container.ePopen('mount /dev/%s /tmp/testmount' %self.part2 if self.phase == self.MOUNT else 'umount /tmp/testmount', self.appClosed)
-
-	def appClosed(self, data, retval, extra_args):
-		if retval == 0 and self.phase == self.MOUNT:
-			BuildVersion = "  "	
-			Build = " "	#ViX Build No.#
-			Dev = " "	#ViX Dev No.#
-			Creator = " " 	#Openpli Openvix Openatv etc #
-			Date = " "	
-			BuildType = " "	#release etc #
-			self.OsPath = "NoPath"
-			if SystemInfo["HasRootSubdir"]:
-				if self.slot == 1 and os.path.isfile("/tmp/testmount/linuxrootfs1/usr/bin/enigma2"):
-					self.OsPath = "/tmp/testmount/linuxrootfs1"
-				elif os.path.isfile("/tmp/testmount/linuxrootfs%s/usr/bin/enigma2" % self.slot):
-					self.OsPath = "/tmp/testmount/linuxrootfs%s" % self.slot
-					print "multiboot tools 1 slots", self.slot, self.slot2
-			else:
-				if os.path.isfile("/tmp/testmount/usr/bin/enigma2"):
-					self.OsPath = '/tmp/testmount'
-			print "Tools/Multiboot OsPath %s " %self.OsPath
-			if self.OsPath != "NoPath":
-				Creator = open("%s/etc/issue" %self.OsPath).readlines()[-2].capitalize().strip()[:-6].replace("-release", " rel")
-				if Creator.startswith("Openvix"):
-					reader = boxbranding_reader(self.OsPath)
-					BuildType = reader.getImageType()
-					Build = reader.getImageBuild()
-					Dev = BuildType != "release" and " %s" % reader.getImageDevBuild() or ''
-					BuildVersion = "%s %s %s %s" % (Creator, BuildType[0:3], Build, Dev)
-				else:
+				try:
 					from datetime import datetime
-					Date = datetime.fromtimestamp(os.stat("%s/var/lib/opkg/status" %self.OsPath).st_mtime).strftime("%d-%m-%Y")
-					if Date.endswith("1970"):
-						try:
-							Date = datetime.fromtimestamp(os.stat("%s/usr/share/bootlogo.mvi" %self.OsPath).st_mtime).strftime("%d-%m-%Y")
-						except:
-							pass
-						Date = max(Date, datetime.fromtimestamp(os.stat("%s/usr/bin/enigma2" %self.OsPath).st_mtime).strftime("%d-%m-%Y"))
-					BuildVersion = "%s build date %s" % (Creator, Date)
-				self.imagelist[self.slot2] =  { 'imagename': '%s' %BuildVersion, 'part': '%s' %self.part2 }
-			self.phase = self.UNMOUNT
-			self.run()
-		elif self.slot < self.numberofslots:
-			self.slot += 1
-			self.slot2 = self.slot
-			self.phase = self.MOUNT
-			self.run()
-		elif self.SDmmc == self.FirstRun:
-			self.phase = self.MOUNT
-			self.SDmmc = self.LastRun
-			self.run()
-		else:
-			self.container.killAll()
-			if not os.path.ismount('/tmp/testmount'):
-				os.rmdir('/tmp/testmount')
-			self.callback(self.imagelist)
-
-
-class boxbranding_reader:		# many thanks to Huevos for creating this reader - well beyond my skill levels! 
+					date = datetime.fromtimestamp(stat(path.join(imagedir, "var/lib/opkg/status")).st_mtime).strftime("%Y-%m-%d")
+					if date.startswith("1970"):
+						date = datetime.fromtimestamp(stat(path.join(imagedir, "usr/share/bootlogo.mvi")).st_mtime).strftime("%Y-%m-%d")
+					date = max(date, datetime.fromtimestamp(stat(path.join(imagedir, "usr/bin/enigma2")).st_mtime).strftime("%Y-%m-%d"))
+				except Exception:
+					date = _("Unknown")
+				Creator = Creator.replace("-release", " ")
+				BuildVersion = "%s Image Date: %s" % (Creator, date)
+			Imagelist[slot] = {"imagename": "%s" % BuildVersion}
+		elif path.isfile(path.join(imagedir, "usr/bin/enigmax")):
+			Imagelist[slot] = { "imagename": _("Deleted image") }
+		Console().ePopen("umount %s" % tmp.dir)
+	if not path.ismount(tmp.dir):
+		rmdir(tmp.dir)
+	return Imagelist
+
+
+def emptySlot(slot):
+	tmp.dir = tempfile.mkdtemp(prefix="Multiboot")
+	Console().ePopen("mount %s %s" % (SystemInfo["canMultiBoot"][slot]["root"], tmp.dir))
+	imagedir = sep.join(filter(None, [tmp.dir, SystemInfo["canMultiBoot"][slot].get("rootsubdir", "")]))
+	if path.isfile(path.join(imagedir, "usr/bin/enigma2")):
+		rename((path.join(imagedir, "usr/bin/enigma2")), (path.join(imagedir, "usr/bin/enigmax")))
+		ret = 0
+	else:
+		print "[multiboot2] NO enigma2 found to rename"
+		ret = 4
+	Console().ePopen("umount %s" % tmp.dir)
+	if not path.ismount(tmp.dir):
+		rmdir(tmp.dir)
+	return	ret
+
+def restoreSlots():
+	for slot in SystemInfo["canMultiBoot"]:
+		tmp.dir = tempfile.mkdtemp(prefix="Multiboot")
+		Console().ePopen("mount %s %s" % (SystemInfo["canMultiBoot"][slot]["root"], tmp.dir))
+		imagedir = sep.join(filter(None, [tmp.dir, SystemInfo["canMultiBoot"][slot].get("rootsubdir", "")]))
+		if path.isfile(path.join(imagedir, "usr/bin/enigmax")):
+			rename((path.join(imagedir, "usr/bin/enigmax")), (path.join(imagedir, "usr/bin/enigma2")))
+		Console().ePopen("umount %s" % tmp.dir)
+	if not path.ismount(tmp.dir):
+		rmdir(tmp.dir)
+
+class boxbranding_reader:  # Many thanks to Huevos for creating this reader - well beyond my skill levels!
 	def __init__(self, OsPath):
-		if pathExists('%s/usr/lib64' %OsPath):
-			self.branding_path = "%s/usr/lib64/enigma2/python/" %OsPath
+		if path.exists("%s/usr/lib64" % OsPath):
+			self.branding_path = "%s/usr/lib64/enigma2/python/" % OsPath
 		else:
-			self.branding_path = "%s/usr/lib/enigma2/python/" %OsPath
+			self.branding_path = "%s/usr/lib/enigma2/python/" % OsPath
 		self.branding_file = "boxbranding.so"
 		self.tmp_path = "/tmp/"
 		self.helper_file = "helper.py"
@@ -181,95 +198,47 @@ class boxbranding_reader:		# many thanks to Huevos for creating this reader - we
 		self.removeBrandingFile()
 		self.addBrandingMethods()
 
-	def readBrandingFile(self): # reads boxbranding.so and updates self.output
-		output = eval(subprocess.check_output(['python', self.tmp_path + self.helper_file]))
+	def readBrandingFile(self):  # Reads boxbranding.so and updates self.output
+		output = eval(subprocess.check_output(["python", path.join(self.tmp_path, self.helper_file)]))
 		if output:
 			for att in self.output.keys():
 				self.output[att] = output[att]
 
-	def addBrandingMethods(self): # this creates reader.getBoxType(), reader.getImageDevBuild(), etc
-		l =  {}                
+	def addBrandingMethods(self):  # This creates reader.getBoxType(), reader.getImageDevBuild(), etc
+		loc = {}
 		for att in self.output.keys():
-			exec("def %s(self): return self.output['%s']" % (att, att), None, l)
-		for name, value in l.items():
+			exec("def %s(self): return self.output[\"%s\"]" % (att, att), None, loc)
+		for name, value in loc.items():
 			setattr(boxbranding_reader, name, value)
 
 	def createHelperFile(self):
-		f = open(self.tmp_path + self.helper_file, "w+")
+		f = open(path.join(self.tmp_path, self.helper_file), "w+")
 		f.write(self.helperFileContent())
 		f.close()
 
 	def copyBrandingFile(self):
-		shutil.copy2(self.branding_path + self.branding_file, self.tmp_path + self.branding_file)
+		shutil.copy2(path.join(self.branding_path, self.branding_file), path.join(self.tmp_path, self.branding_file))
 
 	def removeHelperFile(self):
-		self.removeFile(self.tmp_path + self.helper_file)
+		self.removeFile(path.join(self.tmp_path, self.helper_file))
 
 	def removeBrandingFile(self):
-		self.removeFile(self.tmp_path + self.branding_file)
+		self.removeFile(path.join(self.tmp_path, self.branding_file))
 
 	def removeFile(self, toRemove):
-			if os.path.isfile(toRemove):
-				os.remove(toRemove)
+		if path.isfile(toRemove):
+			remove(toRemove)
 
 	def helperFileContent(self):
-		eol = "\n"
 		out = []
-		out.append("try:%s" % eol)
-		out.append("\timport boxbranding%s" % eol)
-		out.append("\toutput = {%s" % eol)
+		out.append("try:")
+		out.append("\timport boxbranding")
+		out.append("\toutput = {")
 		for att in self.output.keys():
-			out.append('\t\t"%s": boxbranding.%s(),%s' % (att, att, eol))
-		out.append("\t}%s" % eol)
-		out.append("except:%s" % eol)
-		out.append("\t\toutput = None%s" % eol)
-		out.append("print output%s" % eol)
-		return ''.join(out)
-
-
-class EmptySlot():
-	MOUNT = 0
-	UNMOUNT = 1
-	def __init__(self, Contents, callback):
-		self.callback = callback
-		self.container = Console()
-		(self.firstslot, self.numberofslots, self.mtdboot) = SystemInfo["canMultiBoot"]
-		self.slot = Contents
-		if not os.path.isdir('/tmp/testmount'):
-			os.mkdir('/tmp/testmount')
-		if SystemInfo["HasRootSubdir"]:
-			self.part = "%s%s" %(self.mtdboot, GetCurrentRoot())
-		else:
-			if SystemInfo["HasSDmmc"]:			# allow for mmc & SDcard in passed slot number, so SDcard slot -1
-				self.slot -= 1
-			self.part = "%s%s" %(self.mtdboot, str(self.slot * 2 + self.firstslot))
-			if SystemInfo["HasSDmmc"] and self.slot == 0:	# this is the mmc slot, so pick up from MtdRoot
-				self.part = getMachineMtdRoot()
-		self.phase = self.MOUNT
-		self.run()
-
-	def run(self):
-		if SystemInfo["HasRootSubdir"]:
-			if self.slot == 1 and os.path.islink("/dev/block/by-name/linuxrootfs"):
-				self.container.ePopen('mount /dev/block/by-name/linuxrootfs /tmp/testmount' if self.phase == self.MOUNT else 'umount /tmp/testmount', self.appClosed)
-			else:
-				self.container.ePopen('mount /dev/block/by-name/userdata /tmp/testmount' if self.phase == self.MOUNT else 'umount /tmp/testmount', self.appClosed)
-		else:
-			self.container.ePopen('mount /dev/%s /tmp/testmount' %self.part if self.phase == self.MOUNT else 'umount /tmp/testmount', self.appClosed)
-
-	
-	def appClosed(self, data, retval, extra_args):
-		if retval == 0 and self.phase == self.MOUNT:
-			if SystemInfo["HasRootSubdir"]:
-				if os.path.isfile("/tmp/testmount/linuxrootfs%s/usr/bin/enigma2" %self.slot):
-					os.rename('/tmp/testmount/linuxrootfs%s/usr/bin/enigma2' %self.slot, '/tmp/testmount/linuxrootfs%s/usr/bin/enigmax.bin' %self.slot)
-			else:
-				if os.path.isfile("/tmp/testmount/usr/bin/enigma2"):
-					os.rename('/tmp/testmount/usr/bin/enigma2', '/tmp/testmount/usr/bin/enigmax.bin')
-			self.phase = self.UNMOUNT
-			self.run()
-		else:
-			self.container.killAll()
-			if not os.path.ismount('/tmp/testmount'):
-				os.rmdir('/tmp/testmount')
-			self.callback()
+			out.append("\t\t\"%s\": boxbranding.%s()," % (att, att))
+		out.append("\t}")
+		out.append("except Exception:")
+		out.append("\t\toutput = None")
+		out.append("print output")
+		out.append("")
+		return "\n".join(out)
diff --git a/lib/python/Tools/RedirectOutput.py b/lib/python/Tools/RedirectOutput.py
index 5c1d749..4c6823b 100644
--- a/lib/python/Tools/RedirectOutput.py
+++ b/lib/python/Tools/RedirectOutput.py
@@ -1,20 +1,22 @@
 import sys
-from enigma import ePythonOutput
 
-class EnigmaLogDebug:
+from enigma import ePythonOutput
 
-	lvlDebug = 4
 
-	def __init__(self):
-		self.line = ''
+class EnigmaLog:
+	def __init__(self, level):
+		self.level = level
+		self.line = ""
 
 	def write(self, data):
 		if isinstance(data, unicode):
-			data = data.encode("UTF-8")
+			data = data.encode(encoding="UTF-8", errors="ignore")
 		self.line += data
-		if '\n' in data:
-			ePythonOutput(self.line, self.lvlDebug)
-			self.line = ''
+		if "\n" in data:
+			ePythonOutput(self.line, self.level)  # OpenPLi, OpenViX
+			# frame = sys._getframe(1)  # OpenATV
+			# ePythonOutput(frame.f_code.co_filename, frame.f_lineno, frame.f_code.co_name, self.line)  # OpenATV
+			self.line = ""
 
 	def flush(self):
 		pass
@@ -22,26 +24,16 @@ class EnigmaLogDebug:
 	def isatty(self):
 		return True
 
-class EnigmaLogFatal:
-
-	lvlError = 1
 
+class EnigmaLogDebug(EnigmaLog):
 	def __init__(self):
-		self.line = ''
+		EnigmaLog.__init__(self, 4)  # lvlDebug = 4
 
-	def write(self, data):
-		if isinstance(data, unicode):
-			data = data.encode("UTF-8")
-		self.line += data
-		if '\n' in data:
-			ePythonOutput(self.line, self.lvlError)
-			self.line = ''
 
-	def flush(self):
-		pass
+class EnigmaLogFatal(EnigmaLog):
+	def __init__(self):
+		EnigmaLog.__init__(self, 1)  # lvlError = 1
 
-	def isatty(self):
-		return True
 
 sys.stdout = EnigmaLogDebug()
 sys.stderr = EnigmaLogFatal()
diff --git a/lib/python/Tools/TextBoundary.py b/lib/python/Tools/TextBoundary.py
index a14d78e..f0090da 100644
--- a/lib/python/Tools/TextBoundary.py
+++ b/lib/python/Tools/TextBoundary.py
@@ -2,6 +2,6 @@ from enigma import eLabel
 
 # Calls onto the static function in eLabel. This avoids causing an invalidate
 # on the parent container which is detrimental to UI performance, 
-# particularly in a complex screen like the graph EPG
+# particularly in a complex screen like the grid EPG
 def getTextBoundarySize(instance, font, targetSize, text):
 	return eLabel.calculateTextSize(font, text, targetSize)
diff --git a/lib/python/Tools/Trashcan.py b/lib/python/Tools/Trashcan.py
index 60df476..4201c64 100644
--- a/lib/python/Tools/Trashcan.py
+++ b/lib/python/Tools/Trashcan.py
@@ -134,42 +134,39 @@ class CleanTrashTask(Components.Task.PythonTask):
 		self.reserveBytes = reserveBytes
 
 	def work(self):
-		mounts=[]
-		matches = []
+		# add the default movie path
+		trashcanLocations = set([os.path.join(config.usage.default_path.value)])
+
+		# add the root and the movie directory of each mount
 		print "[Trashcan] probing folders"
 		f = open('/proc/mounts', 'r')
 		for line in f.readlines():
 			parts = line.strip().split()
 			if parts[1] == '/media/autofs':
 				continue
-			if config.usage.movielist_trashcan_network_clean.value and parts[1].startswith('/media/net'):
-				mounts.append(parts[1])
-			elif config.usage.movielist_trashcan_network_clean.value and parts[1].startswith('/media/autofs'):
-				mounts.append(parts[1])
-			elif not parts[1].startswith('/media/net') and not parts[1].startswith('/media/autofs'):
-				mounts.append(parts[1])
+			# skip network mounts unless the option to clean them is set
+			if (not config.usage.movielist_trashcan_network_clean.value and
+				(parts[1].startswith('/media/net') or parts[1].startswith('/media/autofs'))):
+				continue
+			# one trashcan in the root, one in movie subdirectory
+			trashcanLocations.add(parts[1])
+			trashcanLocations.add(os.path.join(parts[1], 'movie'))
 		f.close()
 
-		for mount in mounts:
-			if os.path.isdir(os.path.join(mount,'.Trash')):
-				matches.append(os.path.join(mount,'.Trash'))
-			if os.path.isdir(os.path.join(mount,'movie/.Trash')):
-				matches.append(os.path.join(mount,'movie/.Trash'))
-
-		print "[Trashcan] found following trashcan's:",matches
-		if len(matches):
-			for trashfolder in matches:
-				print "[Trashcan] looking in trashcan",trashfolder
+		for trashfolder in trashcanLocations:
+			trashfolder = os.path.join(trashfolder, '.Trash')
+			if os.path.isdir(trashfolder):
+				print "[Trashcan] looking in trashcan", trashfolder
 				trashsize = get_size(trashfolder)
 				diskstat = os.statvfs(trashfolder)
 				free = diskstat.f_bfree * diskstat.f_bsize
 				bytesToRemove = self.reserveBytes - free
-				print "[Trashcan] " + str(trashfolder) + ": Size:",trashsize
+				print "[Trashcan] " + str(trashfolder) + ": Size:", '{:,}'.format(trashsize)
 				candidates = []
 				size = 0
 				for root, dirs, files in os.walk(trashfolder, topdown=False):
 					for name in files:
-# Don't delete any per-directory config files from .Trash if the option is in use
+						# Don't delete any per-directory config files from .Trash if the option is in use
 						if (config.movielist.settings_per_directory.value and name == ".e2settings.pkl"):
 							continue
 						try:
@@ -201,7 +198,7 @@ class CleanTrashTask(Components.Task.PythonTask):
 							pass
 						bytesToRemove -= st_size
 						size -= st_size
-					print "[Trashcan] " + str(trashfolder) + ": Size now:",size
+					print "[Trashcan] " + str(trashfolder) + ": Size now:", '{:,}'.format(size)
 
 class TrashInfo(VariableText, GUIComponent):
 	FREE = 0
diff --git a/lib/python/enigma_python.i b/lib/python/enigma_python.i
index 66eb0a0..328cd08 100644
--- a/lib/python/enigma_python.i
+++ b/lib/python/enigma_python.i
@@ -424,6 +424,18 @@ int getLinkedSlotID(int fe)
 }
 %}
 
+PyObject *getFontFaces();
+%{
+PyObject *getFontFaces()
+{
+	std::vector<std::string> v = fontRenderClass::getInstance()->getFontFaces();
+	ePyObject result = PyList_New(v.size());
+	for (size_t i = 0; i < v.size(); i++)
+		PyList_SET_ITEM(result, i, PyString_FromString(v[i].c_str()));
+        return result;
+}
+%}
+
 /************** temp *****************/
 
 	/* need a better place for this, i agree. */
diff --git a/lib/service/listboxservice.cpp b/lib/service/listboxservice.cpp
index a1ce8f5..8eb010b 100644
--- a/lib/service/listboxservice.cpp
+++ b/lib/service/listboxservice.cpp
@@ -793,10 +793,10 @@ void eListboxServiceContent::paint(gPainter &painter, eWindowStyle &style, const
 				{
 					if ( isPlayable && service_info && !service_info->getEvent(*m_cursor, evt) )
 					{
-						std::string name = evt->getEventName();
-						if (name.empty())
-							continue;
 						text = evt->getEventName();
+						if (text.empty())
+							continue;
+						std::replace(text.begin(), text.end(), '\n', ' ');
 						if (serviceAvail)
 						{
 							if (!selected && m_color_set[eventForeground])
@@ -1019,7 +1019,7 @@ void eListboxServiceContent::paint(gPainter &painter, eWindowStyle &style, const
 						area = m_element_position[celServiceName];
 						if (m_element_position[celServiceEventProgressbar].left() == 0)
 							area.setLeft(0);
-						xoffset = pixmap_size.width() + m_items_distances;			
+						xoffset = pixmap_size.width() + m_items_distances;
 					}
 					else
 						area = m_element_position[celServiceNumber];
diff --git a/lib/service/servicedvb.cpp b/lib/service/servicedvb.cpp
index 4202e85..a9f23fc 100644
--- a/lib/service/servicedvb.cpp
+++ b/lib/service/servicedvb.cpp
@@ -3495,11 +3495,12 @@ void eDVBServicePlay::checkSubtitleTiming()
 		else
 			return;
 
+		// If subtitle is overdue or within 20ms the video timing then display it.
+		// If not, pause subtitle processing until the subtitle should be shown
 		int diff = show_time - pos;
-//		eDebug("[eDVBServicePlay] Subtitle show %d page.pts=%lld pts=%lld diff=%d", type, show_time, pos, diff);
-
-		if (diff < 20*90 || diff > 1800000)
+		if (diff < 20*90)
 		{
+			//eDebug("[eDVBServicePlay] Showing subtitle with pts:%lld Video pts:%lld diff:%.03fs. Page stack size %d", show_time, pos, diff / 90000.0f, m_dvb_subtitle_pages.size());
 			if (type == TELETEXT)
 			{
 				m_subtitle_widget->setPage(page);
@@ -3510,8 +3511,10 @@ void eDVBServicePlay::checkSubtitleTiming()
 				m_subtitle_widget->setPage(dvb_page);
 				m_dvb_subtitle_pages.pop_front();
 			}
-		} else
+		}
+		else
 		{
+			//eDebug("[eDVBServicePlay] Delay early subtitle by %.03fs. Page stack size %d", diff / 90000.0f, m_dvb_subtitle_pages.size());
 			m_subtitle_sync_timer->start(diff / 90, 1);
 			break;
 		}
@@ -3525,9 +3528,14 @@ void eDVBServicePlay::newDVBSubtitlePage(const eDVBSubtitlePage &p)
 		pts_t pos = 0;
 		if (m_decoder)
 			m_decoder->getPTS(0, pos);
-		if ( abs(pos-p.m_show_time)>1800000 && (m_is_pvr || m_timeshift_enabled))
+
+		// Where subtitles are delivered out of sync with video, only treat subtitles in the past as having bad timing.
+		// Those that are delivered too early are cached for displaying at the appropriate later time
+		// Note that this can be due to buggy drivers, as well as problems with the broadcast 
+		if (pos-p.m_show_time > 1800000 && (m_is_pvr || m_timeshift_enabled))
 		{
-			eDebug("[eDVBServicePlay] Subtitle without PTS and recording");
+			// Subtitles delivered over 20 seconds too late
+			eDebug("[eDVBServicePlay] Video pts:%lld, subtitle show_time:%lld, diff:%.02fs BAD TIMING", pos, p.m_show_time, (p.m_show_time - pos) / 90000.0f);
 			int subtitledelay = eConfigManager::getConfigIntValue("config.subtitles.subtitle_noPTSrecordingdelay", 315000);
 
 			eDVBSubtitlePage tmppage;
diff --git a/main/enigma.cpp b/main/enigma.cpp
index 91fae2b..ef09e3c 100644
--- a/main/enigma.cpp
+++ b/main/enigma.cpp
@@ -100,7 +100,7 @@ void keyEvent(const eRCKey &key)
 #include <lib/dvb/epgcache.h>
 
 /* Defined in eerror.cpp */
-void setDebugTime(bool enable);
+void setDebugTime(int level);
 
 class eMain: public eApplication, public sigc::trackable
 {
@@ -258,7 +258,7 @@ int main(int argc, char **argv)
 		debugLvl = 0;
 	printf("ENIGMA_DEBUG_LVL=%d\n", debugLvl);
 	if (getenv("ENIGMA_DEBUG_TIME"))
-		setDebugTime(atoi(getenv("ENIGMA_DEBUG_TIME")) != 0);
+		setDebugTime(atoi(getenv("ENIGMA_DEBUG_TIME")));
 
 	ePython python;
 	eMain main;
diff --git a/mytest.py b/mytest.py
index 75c1b8c..54507be 100644
--- a/mytest.py
+++ b/mytest.py
@@ -11,7 +11,7 @@ profile("PYTHON_START")
 # Don't remove this line. It may seem to do nothing, but if removed,
 # it will break output redirection for crash logs.
 import Tools.RedirectOutput
-from boxbranding import getBoxType, getBrandOEM, getImageVersion, getImageBuild, getImageDevBuild, getImageType, getMachineBuild
+from boxbranding import getBoxType, getBrandOEM, getImageVersion, getImageBuild, getImageDevBuild, getImageType, getMachineBuild, getImageArch
 print "[Image Type] %s" % getImageType()
 print "[Image Version] %s" % getImageVersion()
 print "[Image Build] %s" % getImageBuild()
@@ -26,8 +26,17 @@ enigma.eSocketNotifier = eBaseImpl.eSocketNotifier
 enigma.eConsoleAppContainer = eConsoleImpl.eConsoleAppContainer
 boxtype = getBoxType()
 
+if getImageArch() in ("aarch64"):
+	import usb.core
+	import usb.backend.libusb1
+	usb.backend.libusb1.get_backend(find_library=lambda x: "/lib64/libusb-1.0.so.0")
+
 from traceback import print_exc
 
+profile("Geolocation")
+import Tools.Geolocation
+Tools.Geolocation.InitGeolocation()
+
 profile("ClientMode")
 import Components.ClientMode
 Components.ClientMode.InitClientMode()
@@ -604,8 +613,10 @@ def runScreenTest():
 	return 0
 
 profile("Init:skin")
+print "[Enigma2] Initialising Skins."
 import skin
-skin.loadSkinData(enigma.getDesktop(0))
+skin.InitSkins()
+print "[Enigma2] Initialisation of Skins complete."
 
 profile("InputDevice")
 import Components.InputDevice
diff --git a/po/en_GB.po b/po/en_GB.po
index 816ce36..217fdc9 100644
--- a/po/en_GB.po
+++ b/po/en_GB.po
@@ -8,7 +8,7 @@ msgstr ""
 "Project-Id-Version: enigma2 3.0.0\n"
 "Report-Msgid-Bugs-To: \n"
 "POT-Creation-Date: 2016-08-20 17:10+0100\n"
-"PO-Revision-Date: 2016-08-21 14:08+0100\n"
+"PO-Revision-Date: 2020-04-19 19:25+0100\n"
 "Last-Translator: Ev0\n"
 "Language-Team: BH\n"
 "Language: en_GB\n"
@@ -17,7 +17,7 @@ msgstr ""
 "Content-Transfer-Encoding: 8bit\n"
 "Plural-Forms: nplurals=2; plural=(n != 1);\n"
 "X-Poedit-SourceCharset: UTF-8\n"
-"X-Generator: Poedit 1.8.8\n"
+"X-Generator: Poedit 2.3\n"
 
 msgid ""
 "\n"
@@ -4120,7 +4120,7 @@ msgid "Initialize"
 msgstr "Initialise"
 
 msgid "Initializing storage device..."
-msgstr "Initializing storage device..."
+msgstr "Initialising storage device..."
 
 msgid "Inotify Monitoring"
 msgstr "Inotify Monitoring"
diff --git a/po/it.po b/po/it.po
index eeac67d..32f0744 100755
--- a/po/it.po
+++ b/po/it.po
@@ -2,17 +2,161 @@ msgid ""
 msgstr ""
 "Project-Id-Version: Italian language translation for Enigma2 for OBH 4.3\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2019-01-01 13:48+0000\n"
-"PO-Revision-Date: \n"
-"Last-Translator: William <ghenessior@gmail.com>\n"
-"Language-Team: vuplus-community.net\n"
+"POT-Creation-Date: 2020-04-15 08:23+0000\n"
+"PO-Revision-Date: 2020-05-13 01:25+0000\n"
+"Last-Translator: Alexwilmac\n"
+"Language-Team: Alexwilmac & insanity\n"
 "Language: it_IT\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 "X-Poedit-SourceCharset: UTF-8\n"
 "Plural-Forms: nplurals=2; plural=(n != 1);\n"
-"X-Generator: Poedit 2.2.3\n"
+"X-Generator: Poedit 2.3\n"
+
+msgid "Accept the current selection"
+msgstr "Accetta la selezione corente"
+
+msgid "Always select OK"
+msgstr "Scegli sempre OK"
+
+msgid "Cancel the selection"
+msgstr "Annulla la selezione"
+
+msgid "Move up a line"
+msgstr "Sposta alla linea superiore"
+
+msgid "Move down a line"
+msgstr "Sposta alla linea inferiore"
+
+msgid "Use OpenTV EPG information when it is available. For reading OpenTV EPG data tuning to a dedicated transponder is required"
+msgstr "Usa le info EPG di tipo OpenTV. Per leggere tali informazioni è necessario sintonizzarsi su un canale dedicato"
+
+msgid "Enable OpenTV EPG"
+msgstr "Abilita l'EPG di tipo OpenTV"
+
+msgid "Infobar EPG activation"
+msgstr "Visualizzazione dell'EPG nella Infobar"
+
+msgid "Select how to activate the Infobar EPG. This will affect Infobar behaviour"
+msgstr "Modo per visualizzare l'EPG nella Infobar: questa scelta cambierà il comportamento della Infobar"
+
+msgid "Grid EPG"
+msgstr "EPG Grafico multicanale"
+
+msgid "Infobar Single EPG"
+msgstr "EPG Singolo nella Infobar"
+
+msgid "Infobar Grid EPG"
+msgstr "EPG Grafico multicanale nella Infobar"
+
+msgid "Multi EPG"
+msgstr "EPG Multiplo (singolo canale)"
+
+msgid "Select current service"
+msgstr "Seleziona il canale corrente"
+
+msgid "Select last browsed service"
+msgstr "Seleziona l'ultimo canale sfogliato"
+
+msgid "Select first service in bouquet"
+msgstr "Seleziona il primo canale del bouquet"
+
+msgid "Picon and Service Number"
+msgstr "Picon + Numero del canale"
+
+msgid "Picon, Service Number and Service Name"
+msgstr "Picon + Numero del canale + Nome del canale"
+
+msgid "Primetime"
+msgstr "Inizio prima serata"
+
+msgid "Select the desired primetime"
+msgstr "Scegli l'inizio della prima serata"
+
+msgid "Timeline"
+msgstr "Estensione temporale"
+
+msgid "Number of digits in channel number"
+msgstr "Numero di cifre digitabili per un canale"
+
+msgid "This allows you to set the number of digits you can input when selecting channels using number input."
+msgstr "Qui potete scegliere il numero massimo di cifre per digitare il numero di un canale."
+
+msgid "yes, but not in multi selections"
+msgstr "SÌ, ma non nelle selezioni multiple"
+
+msgid "Move to the next page"
+msgstr "Vai alla pagina seguente"
+
+msgid "Save and activate the currently selected skin"
+msgstr "Salva ed attiva la skin selezionata"
+
+msgid "Cancel any changes to the currently active skin"
+msgstr "Abbandona tutte le modifiche alla scelta della skin"
+
+msgid "Move to the previous page"
+msgstr "Vai alla pagina precedente"
+
+msgid "Move to the next skin"
+msgstr "Vai alla skin successiva"
+
+msgid "Move to the previous skin"
+msgstr "Vai alla skin precedente"
+
+msgid "Time zone"
+msgstr "Fuso orario"
+
+msgid "Time zone area"
+msgstr "Zona dei fusi orari"
+
+msgid "Select your time zone area or region."
+msgstr "Scegli l'area geografica del tuo fuso orario."
+
+msgid "Select the time zone within the area or region."
+msgstr "Scegli il fuso orario fra quelli della zona geografica indicata sopra."
+
+msgid "Allows you to set the maximum size (MB) of the individual debug logs. When that size is reached, the log file will be truncated to the maximum size every 60 minutes."
+msgstr "Imposta la grandezza massima in MB del registro degli errori.\n"
+"Quando viene raggiunto questo limite, il registro viene troncato perché non lo superi, con un controllo fatto ogni ora."
+
+msgid "Press OK to keep the currently selected%s skin."
+msgstr "Premi OK per mantenere la skin %s attualmente selezionata"
+
+msgid "Press OK to activate the selected%s skin."
+msgstr "Premi OK per scegliere la skin %s selezionata"
+
+msgid "Press OK to activate the selected skin."
+msgstr "Premi OK per scegliere la skin selezionata."
+
+msgid "Use separate Picon pack for Front Display"
+msgstr "Usa un pacchetto di picon diverse per il display frontale"
+
+msgid "This is the prefix of each entry in the debug log. 'boot time' is the number of seconds slnce the receiver was last booted."
+msgstr "Sceglie il formato del prefisso di ogni linea del registro degli errori: 'tempo dall'avvio' è il numero di secondi dall'ultimo avvio del ricevitore."
+
+msgid "Debug log time format *"
+msgstr "Formato dell'orario nel registro degli errori *"
+
+msgid "boot time and local time"
+msgstr "secondi dall'avvio e orario"
+
+msgid "local time"
+msgstr "orario"
+
+msgid "boot time"
+msgstr "secondi dall'avvio"
+
+msgid "Use piconlcd directory for picons on color LCD"
+msgstr "Usa le picon per il display a colori del decoder"
+
+msgid "Show picons during channel number input"
+msgstr "Mostra le picon mentre componi il numero di canale"
+
+msgid "Configure whether service picons will be shown in number zap."
+msgstr ""
+"Con SÌ, man mano che si compone un numero, verrà SUBITO visualizzata la picon del canale corrispondente.\n"
+"Può essere utile per controllare in tempo reale se si è composto il canale desiderato."
 
 msgid ""
 "\n"
@@ -175,18 +319,6 @@ msgstr " (0 - tutti i network)"
 msgid " (Channel %s)"
 msgstr " (Canale %s)"
 
-msgid " (Partition %d)"
-msgstr " (Partizione %d)"
-
-msgid " (PiP)"
-msgstr " (PiP)"
-
-msgid " (Radio)"
-msgstr " (Radio)"
-
-msgid " (TV)"
-msgstr " (TV)"
-
 msgid " (disabled)"
 msgstr " (disattivato)"
 
@@ -208,9 +340,6 @@ msgstr " - video0+video1"
 msgid " - video1"
 msgstr " - video1"
 
-msgid " Except %s"
-msgstr " Eccetto %s"
-
 msgid " and"
 msgstr "e"
 
@@ -356,7 +485,9 @@ msgstr "%s?"
 msgid "'%s' contains %d file(s) and %d sub-directories.\n"
 msgstr "'%s' contiene %d file(s) e %d sottocartelle.\n"
 
-msgid "'Network peer' automatically detects other Enigma2 receivers on the local network. You can also manually enter the URL or IP address."
+msgid ""
+"'Network peer' automatically detects other Enigma2 receivers on the local network. You can also manually "
+"enter the URL or IP address."
 msgstr ""
 "'Rete peer' rileva automaticamente altri ricevitori Enigma2 della rete locale.\n"
 "È anche possibile inserire manualmente il loro URL o l'indirizzo IP."
@@ -559,9 +690,6 @@ msgstr "720p 24Hz"
 msgid "< Default >"
 msgstr "< Predefinito >"
 
-msgid "< Default with Picon >"
-msgstr "< Predefinito con Picon >"
-
 msgid "<Current movielist location>"
 msgstr "<Percorso lista registrazioni corrente>"
 
@@ -666,8 +794,12 @@ msgstr ""
 "Registrazione in corso!\n"
 "Cosa si desidera fare?"
 
-msgid "A recording is currently running on the selected tuner. Please select a different tuner or consider to stop the recording to try again."
-msgstr "Una registrazione è attualmente in corso con il Tuner selezionato. Scegli un Tuner diverso o considera di interrompere la registrazione."
+msgid ""
+"A recording is currently running on the selected tuner. Please select a different tuner or consider to stop "
+"the recording to try again."
+msgstr ""
+"Una registrazione è attualmente in corso con il Tuner selezionato. Scegli un Tuner diverso o considera di "
+"interrompere la registrazione."
 
 msgid "A recording is currently running. Please stop the recording before trying to scan."
 msgstr "Registrazioni in corso! Arrestarle prima di effettuare una ricerca canali."
@@ -765,9 +897,6 @@ msgstr "Annullare modifica preferiti"
 msgid "About"
 msgstr "Info"
 
-msgid "About..."
-msgstr "Informazioni..."
-
 msgid "Accesspoint:"
 msgstr "Punto di accesso:"
 
@@ -817,8 +946,8 @@ msgid "Adapter settings"
 msgstr "Configurazione interfaccia"
 
 msgid ""
-"Adaptive date display allows recent dates to be displayed as 'Today' or 'Yesterday'.  It hides the year for recordings made this year.  It hides the day of the week for recordings made in "
-"previous years."
+"Adaptive date display allows recent dates to be displayed as 'Today' or 'Yesterday'.  It hides the year for "
+"recordings made this year.  It hides the day of the week for recordings made in previous years."
 msgstr ""
 "Visualizza le date recenti come \"Oggi\" o \"Ieri\" e nasconde l'anno\n"
 "per le registrazioni dell’anno corrente.\n"
@@ -929,18 +1058,19 @@ msgstr "Crea/Elim. timer per evento corrente"
 msgid "Adding schedule..."
 msgstr "Aggiungere pianificazione..."
 
-msgid "Additional Info"
-msgstr "Info aggiuntive"
-
-msgid "Additional motor options allow you to enter details from your motor's spec sheet so enigma can work out how long it will take to move the dish from one satellite to another satellite."
+msgid ""
+"Additional motor options allow you to enter details from your motor's spec sheet so enigma can work out how "
+"long it will take to move the dish from one satellite to another satellite."
 msgstr ""
-"Le opzioni addizionali del motore vi permettono di inserire i dettagli presi dalle specifiche del vostro motore, cosicché il sistema può capire quanto tempo serve a spostare la parabola da un "
-"satellite all’altro."
+"Le opzioni addizionali del motore vi permettono di inserire i dettagli presi dalle specifiche del vostro "
+"motore, cosicché il sistema può capire quanto tempo serve a spostare la parabola da un satellite all’altro."
 
-msgid "Additional motor options allow you to enter details from your motor's spec sheet so enigma can work out how long it will take to move to another satellite."
+msgid ""
+"Additional motor options allow you to enter details from your motor's spec sheet so enigma can work out how "
+"long it will take to move to another satellite."
 msgstr ""
-"Le opzioni addizionali del motore vi permettono di inserire i dettagli presi dalle specifiche del vostro motore, cosicché il sistema può capire quanto tempo serve a spostare la parabola su un "
-"altro satellite."
+"Le opzioni addizionali del motore vi permettono di inserire i dettagli presi dalle specifiche del vostro "
+"motore, cosicché il sistema può capire quanto tempo serve a spostare la parabola su un altro satellite."
 
 msgid "Addon Succesfully Installed."
 msgstr "Addon installato con successo"
@@ -974,11 +1104,13 @@ msgid "Address"
 msgstr "Indirizzo"
 
 msgid ""
-"Adjust the color settings so that all the color shades are distinguishable, but appear as saturated as possible. If you are happy with the result, press OK to close the video fine-tuning, or "
-"use the number keys to select other test screens."
+"Adjust the color settings so that all the color shades are distinguishable, but appear as saturated as "
+"possible. If you are happy with the result, press OK to close the video fine-tuning, or use the number keys "
+"to select other test screens."
 msgstr ""
-"Regolare il colore in modo che tutte le sfumature risultino distinte, ma appaiano le più sature possibile. Se il risultato appare soddisfacente, premere OK per uscire dalla configurazione "
-"avanzata video, o usare i tasti numerici per accedere alle altre schermate."
+"Regolare il colore in modo che tutte le sfumature risultino distinte, ma appaiano le più sature possibile. Se "
+"il risultato appare soddisfacente, premere OK per uscire dalla configurazione avanzata video, o usare i tasti "
+"numerici per accedere alle altre schermate."
 
 msgid "Adult Audience, Strong Violence 15+"
 msgstr "Pubblico adulto, forte violenza 15+"
@@ -1056,10 +1188,11 @@ msgid "Allocate"
 msgstr "Assegnare"
 
 msgid ""
-"Allocate a number to the physical LNB you are configuring. You will be able to select this LNB again for other satellites (e.g. motorised dishes) to save setting up the same LNB multiple times."
+"Allocate a number to the physical LNB you are configuring. You will be able to select this LNB again for "
+"other satellites (e.g. motorised dishes) to save setting up the same LNB multiple times."
 msgstr ""
-"Assegna un numero all’LNB fisico che stai configurando. Potrai comunque utilizzare questo LNB per altri satelli (ad es. con parabole motorizzate) per risparmiarti di di configurare lo stesso "
-"LNB più volte. "
+"Assegna un numero all’LNB fisico che stai configurando. Potrai comunque utilizzare questo LNB per altri "
+"satelli (ad es. con parabole motorizzate) per risparmiarti di di configurare lo stesso LNB più volte. "
 
 msgid "Allocate unused memory index"
 msgstr "Assegnare indice di memoria non usata"
@@ -1082,8 +1215,12 @@ msgstr "Consente a %s %s l'archiviazione regolare dei dati EPG."
 msgid "Allows you to adjust the amount of time the resolution infomation display on screen."
 msgstr "Regola per quanto tempo visualizzare l’informazione riguardante la risoluzione."
 
-msgid "Allows you to enable the debug logs. They contain very detailed information about everything the system does. Reboot required to enable this!"
-msgstr "Consente di attivare il registro di debug che contiene informazioni dettagliate su tutta l'attività del sistema. Per attivarlo è richiesto il Riavvio!"
+msgid ""
+"Allows you to enable the debug logs. They contain very detailed information about everything the system does. "
+"Reboot required to enable this!"
+msgstr ""
+"Consente di attivare il registro di debug che contiene informazioni dettagliate su tutta l'attività del "
+"sistema. Per attivarlo è richiesto il Riavvio!"
 
 msgid "Allows you to enable/disable displaying icons on the front panel."
 msgstr "Consente di attivare/disattivare la visualizzazione icone sul pannello frontale."
@@ -1091,14 +1228,19 @@ msgstr "Consente di attivare/disattivare la visualizzazione icone sul pannello f
 msgid "Allows you to hide the extensions of known file types."
 msgstr "Consente di nascondere le estensioni dei file conosciuti."
 
-msgid "Allows you to send a copy of the log to yourself."
-msgstr "Permette d’inviare una copia del registro errori (log) a te stesso."
-
-msgid "Allows you to set a schedule to import the EPG and channels list. The EPG and channels list will always be imported on reboot or GUI restart."
-msgstr "Vi permette di impostare un orario per importare l’EPG e la lista canali ed esse saranno sempre importate all’avvio."
+msgid ""
+"Allows you to set a schedule to import the EPG and channels list. The EPG and channels list will always be "
+"imported on reboot or GUI restart."
+msgstr ""
+"Vi permette di impostare un orario per importare l’EPG e la lista canali ed esse saranno sempre importate "
+"all’avvio."
 
-msgid "Allows you to set the maximum size (MB) of the individual debug logs. When that size is reached, a new file will be created."
-msgstr "Consente di impostare la dimensione massima del registro di debug (Mb). Raggiunta tale dimensione, viene creato un nuovo file."
+msgid ""
+"Allows you to set the maximum size (MB) of the individual debug logs. When that size is reached, a new file "
+"will be created."
+msgstr ""
+"Consente di impostare la dimensione massima del registro di debug (Mb). Raggiunta tale dimensione, viene "
+"creato un nuovo file."
 
 msgid "Allows you to setup the button to do what you choose."
 msgstr "Consente di configurare il tasto scelto."
@@ -1140,7 +1282,7 @@ msgid "Always hide infobar"
 msgstr "Nascondere sempre la Infobar"
 
 msgid "Always show bouquets"
-msgstr "Mostra sempre i bouquet."
+msgstr "Mostra sempre i bouquet"
 
 msgid "Always show second infobar instead of standard infobar."
 msgstr "Mostra sempre la seconda Infobar invece della predefinita."
@@ -1267,9 +1409,6 @@ msgstr ""
 msgid "Are you sure you want to save the EPG Cache to:\n"
 msgstr "Salvare la cache EPG?:\n"
 
-msgid "Are you sure you want to send this log:\n"
-msgstr "Sei sicuro di voler inviare questo registro errori (log)?\n"
-
 msgid "Are you sure you want to update your %s %s ?"
 msgstr "Aggiornare %s %s?"
 
@@ -1303,9 +1442,6 @@ msgstr "Canali/Provider assegnati:"
 msgid "At End:"
 msgstr "Alla fine:"
 
-msgid "Attach a file"
-msgstr "Allegare un file"
-
 msgid "Attention, this is repeated timer!\n"
 msgstr "Attenzione: questo è un timer ripetuto!\n"
 
@@ -1516,9 +1652,6 @@ msgstr "Backup in corso..."
 msgid "Backup manager"
 msgstr "Gestione backup"
 
-msgid "Backup manager settings"
-msgstr "Configurazioni del gestore di backup"
-
 msgid "Backup system settings"
 msgstr "Backup configurazione del sistema"
 
@@ -1628,12 +1761,6 @@ msgstr "Blu"
 msgid "Blue long"
 msgstr "Blu lungo"
 
-msgid "Bluetooth Scan"
-msgstr "Ricerca Bluetooth"
-
-msgid "Bluetooth Setup"
-msgstr "Impostazioni Bluetooth"
-
 msgid "Bookmarks"
 msgstr "Segnalibri"
 
@@ -1665,7 +1792,7 @@ msgid "Buffering %d%%"
 msgstr "Buffering %d%%"
 
 msgid "Buffers:"
-msgstr "Buffers:"
+msgstr "Buffer:"
 
 msgid "Build: %s"
 msgstr "Build: %s"
@@ -2050,36 +2177,48 @@ msgstr "Scegliere un tag per trovare facilmente una registrazione."
 msgid "Choose between Daily, Weekly, Weekdays or user defined."
 msgstr "Scegliere tra giornaliero, settimanale, finesettimana o personalizzato"
 
-msgid "Choose between High Dynamic Range (HDR) or Picture in Picture (PIP). Both are not possible at the same time. A FULL REBOOT is required for it to take effect"
-msgstr "Scegli fra High Dynamic Range (HDR) o Picture in Picture (PiP). Esse non sono possibili contemporaneamente. Per applicare le modifiche serve un riavvio completo."
+msgid ""
+"Choose between High Dynamic Range (HDR) or Picture in Picture (PIP). Both are not possible at the same time. "
+"A FULL REBOOT is required for it to take effect"
+msgstr ""
+"Scegli fra High Dynamic Range (HDR) o Picture in Picture (PiP). Esse non sono possibili contemporaneamente. "
+"Per applicare le modifiche serve un riavvio completo."
 
 msgid ""
-"Choose the display formatting style for dates. 'D' / 'DD' is the date and 'M' / 'MM' is the month in digits.  ('DD' and 'MM' have leading zeros for single digit values.) The screen display will "
-"be based on your choice but can be influenced by the skin."
+"Choose the display formatting style for dates. 'D' / 'DD' is the date and 'M' / 'MM' is the month in digits.  "
+"('DD' and 'MM' have leading zeros for single digit values.) The screen display will be based on your choice "
+"but can be influenced by the skin."
 msgstr ""
-"Scegli lo stile delle date del display. ‘D’ / ‘DD’ è il giorno; ‘M’ / ‘MM’ il mese in cifre.  (‘DD’ ed ‘MM’ hanno degli zeri iniziali per le cifre singole). Lo stile di data scelto potrà, però, "
-"essere influenzato anche dalla skin utilizzata."
+"Scegli lo stile delle date del display. ‘D’ / ‘DD’ è il giorno; ‘M’ / ‘MM’ il mese in cifre.  (‘DD’ ed ‘MM’ "
+"hanno degli zeri iniziali per le cifre singole). Lo stile di data scelto potrà, però, essere influenzato "
+"anche dalla skin utilizzata."
 
 msgid ""
-"Choose the display formatting style for times. 'H' / 'HH' is the hour for a 24 hour clock, 'h' / 'hh' is the hour for a 12 hour clock, 'mm' is the minutes and 'ss' is the seconds.  ('HH' and "
-"'hh' have leading zeros for single digit values.) The screen display will be based on your choice but can be influenced by the skin."
+"Choose the display formatting style for times. 'H' / 'HH' is the hour for a 24 hour clock, 'h' / 'hh' is the "
+"hour for a 12 hour clock, 'mm' is the minutes and 'ss' is the seconds.  ('HH' and 'hh' have leading zeros for "
+"single digit values.) The screen display will be based on your choice but can be influenced by the skin."
 msgstr ""
-"Scegli lo stile degli orari del display. ‘H’ / ‘HH’ è l’ora in formato 24 ore; ‘h / hh’ è l’ora in formato 12 ore; ‘mm’ sono i minuti e ‘ss’ i secondi.  (‘HH’ ed ‘hh’ hanno degli zeri iniziali "
-"per le cifre singole). Lo stile di data scelto potrà, però, essere influenzato anche dalla skin utilizzata."
+"Scegli lo stile degli orari del display. ‘H’ / ‘HH’ è l’ora in formato 24 ore; ‘h / hh’ è l’ora in formato 12 "
+"ore; ‘mm’ sono i minuti e ‘ss’ i secondi.  (‘HH’ ed ‘hh’ hanno degli zeri iniziali per le cifre singole). Lo "
+"stile di data scelto potrà, però, essere influenzato anche dalla skin utilizzata."
 
 msgid ""
-"Choose the front panel display formatting style for dates. 'D' / 'DD' is the date and 'M' / 'MM' is the month in digits.  ('DD' and 'MM' have leading zeros for single digit values.) The screen "
-"display will be based on your choice but can be influenced by the skin."
+"Choose the front panel display formatting style for dates. 'D' / 'DD' is the date and 'M' / 'MM' is the month "
+"in digits.  ('DD' and 'MM' have leading zeros for single digit values.) The screen display will be based on "
+"your choice but can be influenced by the skin."
 msgstr ""
-"Scegli lo stile delle date del display LCD (display frontale). ‘D’ / ‘DD’ è il giorno; ‘M’ / ‘MM’ il mese in cifre.  (‘DD’ ed ‘MM’ hanno degli zeri iniziali per le cifre singole). Lo stile di "
-"data scelto potrà, però, essere influenzato anche dalla skin utilizzata."
+"Scegli lo stile delle date del display LCD (display frontale). ‘D’ / ‘DD’ è il giorno; ‘M’ / ‘MM’ il mese in "
+"cifre.  (‘DD’ ed ‘MM’ hanno degli zeri iniziali per le cifre singole). Lo stile di data scelto potrà, però, "
+"essere influenzato anche dalla skin utilizzata."
 
 msgid ""
-"Choose the front panel display formatting style for times. 'H' / 'HH' is the hour for a 24 hour clock, 'h' / 'hh' is the hour for a 12 hour clock, 'mm' is the minutes.  ('HH' and 'hh' have "
-"leading zeros for single digit values.) The front panel display will be based on your choice but can be influenced any applicable skin."
+"Choose the front panel display formatting style for times. 'H' / 'HH' is the hour for a 24 hour clock, 'h' / "
+"'hh' is the hour for a 12 hour clock, 'mm' is the minutes.  ('HH' and 'hh' have leading zeros for single "
+"digit values.) The front panel display will be based on your choice but can be influenced any applicable skin."
 msgstr ""
-"Scegli lo stile degli orari del display LCD (display frontale). ‘H’ / ‘HH’ è l’ora in formato 24 ore; ‘h / hh’ è l’ora in formato 12 ore; ‘mm’ sono i minuti e ‘ss’ i secondi.  (‘HH’ ed ‘hh’ "
-"hanno degli zeri iniziali per le cifre singole). Lo stile di data scelto potrà, però, essere influenzato anche dalla skin utilizzata."
+"Scegli lo stile degli orari del display LCD (display frontale). ‘H’ / ‘HH’ è l’ora in formato 24 ore; ‘h / "
+"hh’ è l’ora in formato 12 ore; ‘mm’ sono i minuti e ‘ss’ i secondi.  (‘HH’ ed ‘hh’ hanno degli zeri iniziali "
+"per le cifre singole). Lo stile di data scelto potrà, però, essere influenzato anche dalla skin utilizzata."
 
 msgid "Choose the layout view mode (Text / Graphics Multi channel EPG or Single channel EPG)."
 msgstr "Scegliere la modalità di visualizzazione (testo o EPG grafico multicanale o EPG singolo canale)."
@@ -2090,12 +2229,16 @@ msgstr "Scegliere la modalità di visualizzazione (testo o grafica)."
 msgid "Choose the location for crash and debug logs folder."
 msgstr "Scegliere la posizione per arresto anomalo e registro di debug."
 
-msgid "Choose the location where the EPG data will be stored when the %s %s is shut down. The location must be available at boot time."
+msgid ""
+"Choose the location where the EPG data will be stored when the %s %s is shut down. The location must be "
+"available at boot time."
 msgstr ""
 "Scegliere il percorso in cui saranno memorizzati i dati EPG quando il %s %s è spento.\n"
 "La posizione deve essere disponibile al boot."
 
-msgid "Choose the name of the file that holds the EPG data when the %s %s is shut down. This can be handy to differentiate between several boxes."
+msgid ""
+"Choose the name of the file that holds the EPG data when the %s %s is shut down. This can be handy to "
+"differentiate between several boxes."
 msgstr ""
 "Scegliere il nome del file che contiene i dati EPG quando il %s %s è spento.\n"
 "Questo può tornare utile per distinguerlo tra vari decoder."
@@ -2170,11 +2313,12 @@ msgid "Client mode"
 msgstr "Modalità client"
 
 msgid ""
-"Client mode sets up this receiver to stream from another receiver. In this mode no local tuners will be available and channel lists, EPG, etc, will come from the remote receiver. All tuner "
-"settings will be cleared."
+"Client mode sets up this receiver to stream from another receiver. In this mode no local tuners will be "
+"available and channel lists, EPG, etc, will come from the remote receiver. All tuner settings will be cleared."
 msgstr ""
-"La modalità client imposta questo ricevitore per lo streaming da un altro ricevitore. In questa modalità non saranno disponibili sintonizzatori locali ed elenchi dei canali ed EPG verranno dal "
-"ricevitore remoto. Tutte le impostazioni del sintonizzatore verranno cancellate."
+"La modalità client imposta questo ricevitore per lo streaming da un altro ricevitore. In questa modalità non "
+"saranno disponibili sintonizzatori locali ed elenchi dei canali ed EPG verranno dal ricevitore remoto. Tutte "
+"le impostazioni del sintonizzatore verranno cancellate."
 
 msgid "Clients"
 msgstr "Client"
@@ -2284,7 +2428,9 @@ msgstr "Configurare ulteriore ritardo per migliorare la sincronizzazione sottoti
 msgid "Configure duration of inactivity before the hard disk drive goes to standby"
 msgstr "Configurare lo standby Hard Disk dopo il tempo di inattività specificato."
 
-msgid "Configure for how many minutes finished events should remain visible in the EPG. Useful when you need information about an event which has just finished, or has been delayed."
+msgid ""
+"Configure for how many minutes finished events should remain visible in the EPG. Useful when you need "
+"information about an event which has just finished, or has been delayed."
 msgstr ""
 "Configurare la persistenza (in min.) degli eventi EPG conclusi.\n"
 "Utile quando necessitano informazioni su un evento concluso o ritardato."
@@ -2346,7 +2492,9 @@ msgstr "Configurare il comportamento quando la riproduzione è avviata."
 msgid "Configure the behavior when reaching the end of a movie, during movie playback."
 msgstr "Configurare il comportamento se si raggiunge il termine registrazione in fase di riproduzione."
 
-msgid "Configure the border width of the subtitles. The dark border makes the subtitles easier to read on a light background."
+msgid ""
+"Configure the border width of the subtitles. The dark border makes the subtitles easier to read on a light "
+"background."
 msgstr ""
 "Configurare lo spessore bordi dei sottotitoli.\n"
 "Bordi scuri su uno background chiaro renderanno più agevole la loro lettura."
@@ -2360,7 +2508,9 @@ msgstr "Configurare il livello di luminosità LCD per il funzionamento normale."
 msgid "Configure the brightness level of the front panel display for standby."
 msgstr "Configurare il livello luminosità del display frontale in Standby."
 
-msgid "Configure the color of the external subtitles, alternative (normal in white, italic in yellow, bold in cyan, underscore in green), white or yellow."
+msgid ""
+"Configure the color of the external subtitles, alternative (normal in white, italic in yellow, bold in cyan, "
+"underscore in green), white or yellow."
 msgstr ""
 "Configurare il colore dei sottotitoli esterni: alternativo bianco o giallo.\n"
 "(normale=bianco, corsivo=giallo, celeste=grassetto, sottolineato=verde)"
@@ -2372,9 +2522,11 @@ msgid "Configure the contrast level of the front panel display."
 msgstr "Configurare il livello di contrasto del display."
 
 msgid ""
-"Configure the cursor behavior in the channel selection list. When opening the channel selection list you can remain on the current service or already select up/down and you are able to revert "
-"the B+/B- buttons."
-msgstr "Configura il comportamento del cursore nella lista canali. Quando si apre tale lista puoi rimanere sul canale corrente oppure scegliere SU/GIÙ per ripristinare i tasti B+/B-."
+"Configure the cursor behavior in the channel selection list. When opening the channel selection list you can "
+"remain on the current service or already select up/down and you are able to revert the B+/B- buttons."
+msgstr ""
+"Configura il comportamento del cursore nella lista canali. Quando si apre tale lista puoi rimanere sul canale "
+"corrente oppure scegliere SU/GIÙ per ripristinare i tasti B+/B-."
 
 msgid "Configure the duration (in minutes) for the screensaver."
 msgstr "Configurare la durata (in minuti) per il salvaschermo."
@@ -2388,7 +2540,9 @@ msgstr "Configurare la lingua sottotitoli primaria (massima priorità)."
 msgid "Configure the font size of the subtitles."
 msgstr "Configurare la dimensione dei caratteri sottotitoli."
 
-msgid "Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size."
+msgid ""
+"Configure the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point "
+"size."
 msgstr ""
 "Configurare la dimensione del carattere rispetto alla skin:\n"
 "+1 aumenta le dimensioni di 1 punto, -1 le diminuisce di 1 punto."
@@ -2411,12 +2565,15 @@ msgstr "Configurare l'allineamento orizzontale dei sottotitoli."
 msgid "Configure the infobar fading speed"
 msgstr "Configurare la velocità dissolvenza della Infobar"
 
-msgid "Configure the initial fast forward speed. When you press the fast forward button, winding will start at this speed."
+msgid ""
+"Configure the initial fast forward speed. When you press the fast forward button, winding will start at this "
+"speed."
 msgstr ""
 "Configurare la velocità iniziale FFW (avanti veloce).\n"
 "Premendo il tasto FFW esso si avvierà a questa velocità."
 
-msgid "Configure the initial rewind speed. When you press the rewind button, rewinding will start at this speed."
+msgid ""
+"Configure the initial rewind speed. When you press the rewind button, rewinding will start at this speed."
 msgstr ""
 "Configurare la velocità iniziale REW (riavvolgimento).\n"
 "Premendo il tasto REW esso si avvierà a questa velocità."
@@ -2427,9 +2584,12 @@ msgstr "Configurare la latitudine della propria posizione."
 msgid "Configure the longitude of your location."
 msgstr "Configurare la longitudine della propria posizione."
 
-msgid "Configure the minimum amount of disk space to be available for recordings. When the amount of space drops below this value, deleted items will be removed from the trash can."
+msgid ""
+"Configure the minimum amount of disk space to be available for recordings. When the amount of space drops "
+"below this value, deleted items will be removed from the trash can."
 msgstr ""
-"Configurare lo spazio minimo da lasciare a disposizione delle registrazioni. Se lo spazio disponibile scende al di sotto di questo valore, verranno rimossi gli elementi contenuti nel cestino."
+"Configurare lo spazio minimo da lasciare a disposizione delle registrazioni. Se lo spazio disponibile scende "
+"al di sotto di questo valore, verranno rimossi gli elementi contenuti nel cestino."
 
 msgid "Configure the minimum width before showing the 'i' icon, '0' is equal to not showing the icon at all."
 msgstr "Configurare la larghezza minima prima di mostrare l’icona 'i', '0' è uguale a non mostrare l'icona."
@@ -2438,7 +2598,7 @@ msgid "Configure the nameserver (DNS)."
 msgstr "Configurare i nameserver (DNS)"
 
 msgid "Configure the netmask."
-msgstr "Configurare Netmask"
+msgstr "Configurare la sottorete"
 
 msgid ""
 "Configure the number of days after which items are automatically removed from the trash can.\n"
@@ -2447,13 +2607,16 @@ msgstr ""
 "Configurare il numero di giorni dopo cui i file sono rimossi automaticamente dal cestino.\n"
 "'0' = disabilitata"
 
-msgid "Configure the number of days old timers are kept before they are automatically removed from the timer list."
+msgid ""
+"Configure the number of days old timers are kept before they are automatically removed from the timer list."
 msgstr "Configurare per quanti giorni mantenere i vecchi timer prima di rimuoverli dall'elenco."
 
 msgid "Configure the number of rows shown."
 msgstr "Configurare il numero di righe da visualizzare."
 
-msgid "Configure the offline decoding delay (in milliseconds). The configured delay is observed at each control word parity change."
+msgid ""
+"Configure the offline decoding delay (in milliseconds). The configured delay is observed at each control word "
+"parity change."
 msgstr ""
 "Configurare il ritardo in ms della 'decodifica offline'.\n"
 "Il ritardo configurato viene osservato a ogni modifica di parità."
@@ -2493,13 +2656,19 @@ msgstr "Configurare il salto di tempo assegnato ai tasti 7 e 9."
 msgid "Configure the slow motion speeds."
 msgstr "Configurare le velocità al rallentatore."
 
-msgid "Configure the source of the frontend data as shown on the infobars. 'Settings' is as stored on the settings. 'Tuner' is as reported by the tuner."
+msgid ""
+"Configure the source of the frontend data as shown on the infobars. 'Settings' is as stored on the settings. "
+"'Tuner' is as reported by the tuner."
 msgstr ""
 "Configurare l'origine dati nella Infobar\n"
 "come riportato nelle configurazioni oppure come dal tuner."
 
-msgid "Configure the speed of the background deletion process. Lower speed will consume less hard disk drive performance."
-msgstr "Configurare la velocità assegnata al processo di rimozione in background. Velocità inferiori incideranno meno sulle prestazione dell'HDD."
+msgid ""
+"Configure the speed of the background deletion process. Lower speed will consume less hard disk drive "
+"performance."
+msgstr ""
+"Configurare la velocità assegnata al processo di rimozione in background. Velocità inferiori incideranno meno "
+"sulle prestazione dell'HDD."
 
 msgid "Configure the subtitle delay when timing information is not available."
 msgstr "Configurare il ritardo dei sottotitoli quando non è disponibile una sincronizzazione."
@@ -2516,9 +2685,6 @@ msgstr "Configurare la trasparenza del background nero per i sottotitoli grafici
 msgid "Configure the tuner mode."
 msgstr "Configurare la modalità per il tuner."
 
-msgid "Configure the type of status indication icons shown in the movie list."
-msgstr "Configurare il tipo di indicazione dello stato icone visualizzato nell'elenco registrazioni."
-
 msgid "Configure the vertical position of the subtitles, measured from the bottom of the screen."
 msgstr "Configurare la posizione dei sottotitoli, misurata dal fondo dello schermo."
 
@@ -2528,13 +2694,19 @@ msgstr "Configurare la larghezza assegnata alle picon."
 msgid "Configure the width allocated to the service name."
 msgstr "Configurare la larghezza assegnata al nome del canale."
 
-msgid "Configure this tuner using simple or advanced options, or loop it through to another tuner, or copy a configuration from another tuner, or disable it."
-msgstr "Configura questo tuner tramite le opzioni Semplice o Avanzata, oppure mettilo in collegamento in cascata con un altro, oppure copia la configurazione da un altro tuner o disabilitalo."
+msgid ""
+"Configure this tuner using simple or advanced options, or loop it through to another tuner, or copy a "
+"configuration from another tuner, or disable it."
+msgstr ""
+"Configura questo tuner tramite le opzioni Semplice o Avanzata, oppure mettilo in collegamento in cascata con "
+"un altro, oppure copia la configurazione da un altro tuner o disabilitalo."
 
 msgid "Configure to show the channel names, picons, or both in the EPG."
 msgstr "Configurare per mostrare nomi dei canali, picon o entrambi nella EPG."
 
-msgid "Configure whether (and for how long) a second infobar will be shown when OK is pressed twice. The second infobar contains additional information about the current channel."
+msgid ""
+"Configure whether (and for how long) a second infobar will be shown when OK is pressed twice. The second "
+"infobar contains additional information about the current channel."
 msgstr ""
 "Configurare la visualizzazione e la persistenza della seconda Infobar (due click del tasto OK).\n"
 "Questa conterrà informazioni aggiuntive sul canale sintonizzato."
@@ -2548,11 +2720,16 @@ msgstr "Configurare il formato colore da utilizzare sull'uscita SCART."
 msgid "Configure which tuner for recordings will be preferred, when more than one tuner is available."
 msgstr "Configurare il tuner preferenziale per le registrazioni, se più di un tuner risulta disponibile."
 
-msgid "Configure which tuner type will be preferred, when the same service is available on different types of tuners."
+msgid ""
+"Configure which tuner type will be preferred, when the same service is available on different types of tuners."
 msgstr "Configurare il tuner preferenziale, quando lo stesso servizio è disponibile su diversi tipi di tuner."
 
-msgid "Configure which tuner will be preferred, when more than one tuner is available. If set to 'auto' the system will give priority to the tuner having the lowest number of channels/satellites."
-msgstr "Configurare il tuner preferenziale quando più di un tuner risulti disponibile. L'impostazione \"Auto\" assegnerà la priorità al tuner configurato con il minor numero di canali/satelliti."
+msgid ""
+"Configure which tuner will be preferred, when more than one tuner is available. If set to 'auto' the system "
+"will give priority to the tuner having the lowest number of channels/satellites."
+msgstr ""
+"Configurare il tuner preferenziale quando più di un tuner risulti disponibile. L'impostazione \"Auto\" "
+"assegnerà la priorità al tuner configurato con il minor numero di canali/satelliti."
 
 msgid "Configure your NTP server."
 msgstr "Configurare i server NTP."
@@ -2730,12 +2907,6 @@ msgstr "Creazione link al file TimeShift fallito!"
 msgid "Creating directory %s failed."
 msgstr "Creazione cartella %s fallita!"
 
-msgid "Creating filesystem"
-msgstr "Creazione file system"
-
-msgid "Creating partition"
-msgstr "Creazione partizione"
-
 msgid "Croatia"
 msgstr "Croazia"
 
@@ -2748,9 +2919,6 @@ msgstr "Gestione Cron "
 msgid "Cron manager"
 msgstr "Gestione cron"
 
-msgid "Cron timers"
-msgstr "CronTimers"
-
 msgid "CronTimers"
 msgstr "CronTimers"
 
@@ -2843,7 +3011,8 @@ msgid ""
 msgstr ""
 "DHCP\n"
 "\n"
-"Questo test controlla se l'interfaccia LAN è impostata per configurare automaticamente l'indirizzo IP con DHCP.\n"
+"Questo test controlla se l'interfaccia LAN è impostata per configurare automaticamente l'indirizzo IP con "
+"DHCP.\n"
 "\n"
 "Se ottieni un messaggio \"disabilitato\":\n"
 "- L'adattatore LAN è configurato per l'impostazione manuale dell'IP.\n"
@@ -2870,9 +3039,6 @@ msgstr "DTS downmix"
 msgid "DUAL LAYER DVD"
 msgstr "DVD doppio strato"
 
-msgid "DVB CI delay"
-msgstr "Ritardo DVB CI"
-
 msgid "DVB subtitle black transparency"
 msgstr "Trasparenza nera sottotitoli DVB"
 
@@ -3038,9 +3204,6 @@ msgstr "Confermare eliminazione"
 msgid "Delete EPG"
 msgstr "Eliminare EPG"
 
-msgid "Delete Language"
-msgstr "Cancella lingua"
-
 msgid "Delete entry"
 msgstr "Eliminare la voce"
 
@@ -3084,8 +3247,9 @@ msgid "Depth"
 msgstr "Profondità"
 
 msgid ""
-"Descramble & record ECM' gives the option to descramble afterwards if descrambling on recording failed. 'Don't descramble, record ECM' save a scramble recording that can be descrambled on "
-"playback. 'Normal' means descramble the recording and don't record ECM."
+"Descramble & record ECM' gives the option to descramble afterwards if descrambling on recording failed. "
+"'Don't descramble, record ECM' save a scramble recording that can be descrambled on playback. 'Normal' means "
+"descramble the recording and don't record ECM."
 msgstr ""
 "Decodificare & registrare ECM consente di decodificare in seguito a registrazione non riuscita.\n"
 "‘NON’ decodificare, REGISTRA ECM’ salva una registrazione decodificabile in riproduzione.\n"
@@ -3115,15 +3279,6 @@ msgstr "Tuner rilevati:"
 msgid "Device"
 msgstr "Dispositivo"
 
-msgid "Device is disabling..."
-msgstr "Sto disabilitando il dispositivo…"
-
-msgid "Device is enabled."
-msgstr "Dispositivo abilitato"
-
-msgid "Device is enabling..."
-msgstr "Sto abilitando il dispositivo…"
-
 msgid "Device mounts"
 msgstr "Mount dispositivo"
 
@@ -3310,15 +3465,8 @@ msgstr "Si desidera rimuovere il timer per %s?"
 msgid "Do you really want to remove your bookmark of %s?"
 msgstr "Si desidera rimuovere il segnalibro da %s?"
 
-msgid "Do you want to add any additional information ?"
-msgstr "Vuoi aggiungere ulteriori informazioni?"
-
-msgid ""
-"Do you want to attach a text file to explain the log ?\n"
-"(choose 'No' to type message using virtual keyboard.)"
-msgstr ""
-"Si desidera allegare un file di testo per chiarire il log?\n"
-"(scegliere 'No' per digitare un messaggio usando la tastiera virtuale.)"
+msgid "Do you really want to stop the current recording and delete timer %s?"
+msgstr "Vuoi davvero fermare la registrazione e cancellare il timer %s?"
 
 msgid "Do you want to burn this collection to DVD medium?"
 msgstr "Si desidera masterizzare la raccolta su DVD?"
@@ -3329,9 +3477,6 @@ msgstr "Vuoi cambiare la skin di default"
 msgid "Do you want to continue?"
 msgstr "Si desidera continuare?"
 
-msgid "Do you want to delete all other languages?"
-msgstr "Vuoi cancellare tutte le altre lingue?"
-
 msgid ""
 "Do you want to delete all the selected files:\n"
 "(choose 'No' to only delete the currently selected file.)"
@@ -3345,9 +3490,6 @@ msgstr "Si desidera effettuare una ricerca canali?"
 msgid "Do you want to do another manual service scan?"
 msgstr "Si desidera effettuare un'altra ricerca canali manuale?"
 
-msgid "Do you want to install plugins"
-msgstr "Si desidera installare il plugin"
-
 msgid ""
 "Do you want to install the Addon:\n"
 " "
@@ -3379,13 +3521,6 @@ msgstr "Si desidera ripristinare le configurazioni?"
 msgid "Do you want to resume playback?"
 msgstr "Riprendere dall'ultima posizione?"
 
-msgid ""
-"Do you want to send all the selected files:\n"
-"(choose 'No' to only send the currently selected file.)"
-msgstr ""
-"Si desidera inviare i file selezionati?\n"
-"(scegliere 'No' per inviare solo il file selezionato.)"
-
 msgid "Do you want to update Black Hole image?"
 msgstr "Si desidera aggiornare l'immagine Open BlackHole?"
 
@@ -3446,10 +3581,10 @@ msgid "Drama"
 msgstr "Dramma"
 
 msgid "Drivers:\t%s\n"
-msgstr "Drivers:\t%s\n"
+msgstr "Data dei driver:\t%s\n"
 
 msgid "Drivers: %s"
-msgstr "Drivers: %s"
+msgstr "Driver: %s"
 
 msgid "Drop unconfigured satellites"
 msgstr "Tralascia i satelliti non configurati."
@@ -3612,15 +3747,15 @@ msgstr "Abilitare MHW EPG"
 msgid "Enable Netmed EPG"
 msgstr "Abilitare Netmed EPG"
 
+msgid "Enable VOD skip buttons"
+msgstr "Abilita i salti con i tasti nello streaming"
+
 msgid "Enable ViaSat EPG"
 msgstr "Abilitare Viasat EPG"
 
 msgid "Enable Virgin EPG"
 msgstr "Abilitare Virgin EPG"
 
-msgid "Enable Wake On LAN"
-msgstr "Abilitare la riattivazione LAN"
-
 msgid "Enable auto cable scan"
 msgstr "Abilitare scansione automatica cavo"
 
@@ -3673,14 +3808,16 @@ msgid "Enable timer conflict detection"
 msgstr "Abilitare il rilevamento conflitti dei timer"
 
 msgid "Enable to display all true/false, yes/no, on/off and enable/disable setup options as a graphical switch."
-msgstr "Abilita per mostrare tutte le opzioni di tipo sì/no, on/off o abilitato/disabilitato come interruttore grafico."
+msgstr ""
+"Abilita per mostrare tutte le opzioni di tipo sì/no, on/off o abilitato/disabilitato come interruttore "
+"grafico."
 
 msgid "Enable to highlight events that are currently in progress."
 msgstr "Abilitare per evidenziare gli eventi che sono attualmente in corso."
 
 msgid ""
-"Enable usage of tuners from another Enigma2 receiver on the local network. Remote tuners will be used when tuners are not available on this receiver. (No free tuner or service type is not "
-"available.)"
+"Enable usage of tuners from another Enigma2 receiver on the local network. Remote tuners will be used when "
+"tuners are not available on this receiver. (No free tuner or service type is not available.)"
 msgstr ""
 "Abilita l'uso di tuner da un altro ricevitore Enigma2 nella rete locale.\n"
 "I tuner remoti verranno utilizzati quando non ve ne sono disponibili su questo ricevitore.\n"
@@ -3722,9 +3859,6 @@ msgstr "Orario fine"
 msgid "English"
 msgstr "Inglese"
 
-msgid "Enigma2 skin selector"
-msgstr "Selezione skin di sistema"
-
 msgid ""
 "Enigma2 will be now restarted for the changes to take effect.\n"
 "Press ok to continue"
@@ -3753,9 +3887,6 @@ msgstr "Inserire codice PIN persistente"
 msgid "Enter pin code"
 msgstr "Inserire il codice PIN"
 
-msgid "Enter text and exit"
-msgstr "Digitare il testo ed uscire"
-
 msgid "Enter the FTP password of the host receiver (normally just leave empty)."
 msgstr "Inserire la password FTP del ricevitore host (di solito va lasciata vuota)"
 
@@ -3771,7 +3902,9 @@ msgstr "Inserire l'indirizzo IP del server host"
 msgid "Enter the IP address of the receiver to use for fallback tuners."
 msgstr "Inserire l'indirizzo IP da utilizzare per questo tuner fallback."
 
-msgid "Enter the URL/IP of the fallback remote receiver, e.g. '192.168.0.1'. The other details such as 'http://' and port number will be filled in automatically when you select save."
+msgid ""
+"Enter the URL/IP of the fallback remote receiver, e.g. '192.168.0.1'. The other details such as 'http://' and "
+"port number will be filled in automatically when you select save."
 msgstr ""
 "Inserire l'URL/IP del ricevitore remoto fallback; ad esempio: 192.168.0.1'.\n"
 "Dettagli come numero porta e 'http://' saranno completati automaticamente con salva."
@@ -3779,11 +3912,19 @@ msgstr ""
 msgid "Enter the domain of the host receiver. Do not include 'http://' or port number."
 msgstr "Inserire il dominio del ricevitore host non includere 'http://' o numero della porta"
 
-msgid "Enter the frequency at which you LNB switches between low band and high band. For more information consult the spec sheet of your LNB."
-msgstr "Inserisci la frequenza alla quale il tuo LNB commuta fra banda alta e banda bassa. Per maggiori informazioni, consulta le specifiche del tuo LNB."
+msgid ""
+"Enter the frequency at which you LNB switches between low band and high band. For more information consult "
+"the spec sheet of your LNB."
+msgstr ""
+"Inserisci la frequenza alla quale il tuo LNB commuta fra banda alta e banda bassa. Per maggiori informazioni, "
+"consulta le specifiche del tuo LNB."
 
-msgid "Enter the frequency step size for the tuner to use when searching for cable multiplexes. For more information consult your cable provider's documentation."
-msgstr "Inserisci il passo di frequenza che il tuo tuner dovrà utilizzare quando scansiona le frequenze via cavo. Per maggiori informazioni, consulta la documentazione fornita dal tuo gestore."
+msgid ""
+"Enter the frequency step size for the tuner to use when searching for cable multiplexes. For more information "
+"consult your cable provider's documentation."
+msgstr ""
+"Inserisci il passo di frequenza che il tuo tuner dovrà utilizzare quando scansiona le frequenze via cavo. Per "
+"maggiori informazioni, consulta la documentazione fornita dal tuo gestore."
 
 msgid "Enter the number stored in the positioner that corresponds to this satellite."
 msgstr "Inserire il nr. memorizzato nel posizionatore corrispondente a questo satellite."
@@ -3807,22 +3948,23 @@ msgid "Enter the streaming port of the host receiver (normally '8001')."
 msgstr "Immettere la porta per lo streaming del ricevitore host (di solito la '8001')"
 
 msgid "Enter your current latitude. This is the number of degrees you are from the equator as a decimal."
-msgstr "Inserisci la tua latitudine corrente. Questo è il numero di gradi della tua posizione dall'equatore come decimale."
+msgstr ""
+"Inserisci la tua latitudine corrente. Questo è il numero di gradi della tua posizione dall'equatore come "
+"decimale."
 
 msgid "Enter your current longitude. This is the number of degrees you are from zero meridian as a decimal."
-msgstr "Inserisci la tua longitudine. Questo è il numero di gradi della tua posizione  dal meridiano zero come decimale."
-
-msgid "Enter your e-mail address to send a copy of the log to."
-msgstr "Inserire il proprio indirizzo di posta elettronica per inviare una copia del log."
-
-msgid "Enter your forum user name, to make it easier to trace logs."
-msgstr "Inserire il nome utente nel forum per rendere semplice la rintracciabilità"
+msgstr ""
+"Inserisci la tua longitudine. Questo è il numero di gradi della tua posizione  dal meridiano zero come "
+"decimale."
 
-msgid "Enter your high band local oscillator frequency. For more information consult the spec sheet of your LNB."
-msgstr "Inserisci la frequenza alta di oscillazione. Per maggiori informazioni, consulta le specifiche del tuo LNB."
+msgid ""
+"Enter your high band local oscillator frequency. For more information consult the spec sheet of your LNB."
+msgstr ""
+"Inserisci la frequenza alta di oscillazione. Per maggiori informazioni, consulta le specifiche del tuo LNB."
 
 msgid "Enter your low band local oscillator frequency. For more information consult the spec sheet of your LNB."
-msgstr "Inserisci la frequenza bassa di oscillazione. Per maggiori informazioni, consulta le specifiche del tuo LNB."
+msgstr ""
+"Inserisci la frequenza bassa di oscillazione. Per maggiori informazioni, consulta le specifiche del tuo LNB."
 
 msgid "Entertainment"
 msgstr "Intrattenimento"
@@ -3854,13 +3996,6 @@ msgstr "Errore esecuzione plugin!"
 msgid "Error reading webpage!"
 msgstr "Errore lettura pagina web!"
 
-msgid ""
-"Error:\n"
-"%s"
-msgstr ""
-"Errore:\n"
-"%s"
-
 msgid ""
 "Error: %s\n"
 "Retry?"
@@ -3982,9 +4117,6 @@ msgstr "Uscire dal menu impostazioni interfacce di rete"
 msgid "Exit the wizard"
 msgstr "Uscire dalla configurazione guidata"
 
-msgid "Exit/OK"
-msgstr "Esci / OK"
-
 msgid "Expert"
 msgstr "Esperto"
 
@@ -4012,9 +4144,6 @@ msgstr "Plugin “Impostazioni avanzate della rete”…"
 msgid "Extended setup..."
 msgstr "Impostazioni avanzate..."
 
-msgid "Extensions"
-msgstr "Estensioni"
-
 msgid "Extensions management"
 msgstr "Gestione estensioni"
 
@@ -4024,9 +4153,6 @@ msgstr "Esterna"
 msgid "External PiP"
 msgstr "PiP esterno"
 
-msgid "External Storage %s"
-msgstr "Unità di memoria esterna %s"
-
 msgid "External subtitle color"
 msgstr "Colore sottotitoli esterni"
 
@@ -4262,12 +4388,6 @@ msgstr "Premere OK per eseguire i processi seguenti!"
 msgid "Font size"
 msgstr "Dimensioni caratteri"
 
-msgid "Force LNB Power"
-msgstr "Forzare l'alimentazione LNB"
-
-msgid "Force ToneBurst"
-msgstr "Forzare ToneBurst"
-
 msgid "Force de-interlace"
 msgstr "Forzare deinterlacciamento"
 
@@ -4296,7 +4416,7 @@ msgid "Free memory"
 msgstr "Memoria disponibile"
 
 msgid "Free memory:"
-msgstr "Memoria disponibile:"
+msgstr "Memoria dispon.:"
 
 msgid "Free swap:"
 msgstr "Swap libero:"
@@ -4373,13 +4493,6 @@ msgstr "GB"
 msgid "GStreamer:\t%s\n"
 msgstr "GStreamer:\t%s\n"
 
-msgid ""
-"GUI needs a restart to apply a new skin\n"
-"Do you want to restart the GUI now?"
-msgstr ""
-"L'attivazione della nuova skin richiede\n"
-"il riavvio del sistema (GUI): riavviare ora?"
-
 msgid ""
 "GUI needs a restart to switch modes\n"
 "Do you want to restart the GUI now?"
@@ -4620,15 +4733,15 @@ msgstr "Nascondere i messaggi CI"
 msgid "Hide any zap error messages."
 msgstr "Nascondere tutti gli errori di zapping"
 
-msgid "Hide dotted line on the top for this service"
-msgstr "Nascondere i puntini iniziali nel nome del canale"
-
 msgid "Hide error messages from the Common Interface module."
 msgstr "Nascondere i messaggi di errore del modulo Common Interface."
 
 msgid "Hide known extensions"
 msgstr "Nascondere le estensioni conosciute"
 
+msgid "Hide number markers"
+msgstr "Nascondi gli indicatori numerici"
+
 msgid "Hide parental locked services"
 msgstr "Nascondere i canali parentali bloccati"
 
@@ -4760,9 +4873,6 @@ msgstr ""
 "-Non è stato trovato un IP valido.\n"
 "-Controlla il tuo server DHCP, il cavo e le impostazioni della rete."
 
-msgid "IP-Address"
-msgstr "Indirizzo - IP"
-
 msgid "IP:"
 msgstr "IP:"
 
@@ -4802,10 +4912,16 @@ msgstr "Se impostato su 'SÌ' mostrerà i pacchetti 'SRC' nel browser."
 msgid "If set to 'yes' shows a small TV-screen in the EPG."
 msgstr "Se impostato su 'SÌ' mostra un piccolo schermo TV nell’EPG."
 
-msgid "If set to 'yes' signal values (SNR, etc) will be calculated from API V3. This is an old API version that has now been superseded."
-msgstr "Se impostato su ‘sì’ i valori del segnale (SNR, ecc..) saranno calcolati tramite una API V3. Questa è una versione vecchia e, adesso, sorpassata."
+msgid ""
+"If set to 'yes' signal values (SNR, etc) will be calculated from API V3. This is an old API version that has "
+"now been superseded."
+msgstr ""
+"Se impostato su ‘sì’ i valori del segnale (SNR, ecc..) saranno calcolati tramite una API V3. Questa è una "
+"versione vecchia e, adesso, sorpassata."
 
-msgid "If set to 'yes' the EPG will always open at the first channel of bouquet. If set to 'no' the EPG will open on the current channel."
+msgid ""
+"If set to 'yes' the EPG will always open at the first channel of bouquet. If set to 'no' the EPG will open on "
+"the current channel."
 msgstr ""
 "Se impostato su 'SI' EPG aprirà sempre il primo canale del bouquet.\n"
 "Se impostato su 'NO' l'EPG si aprirà sul canale corrente."
@@ -4829,11 +4945,12 @@ msgid "If set to 'yes' you can preview channels in the EPG list."
 msgstr "Se impostato su 'SI' è possibile visualizzare in anteprima i canali nella lista EPG."
 
 msgid ""
-"If set to 'yes' you can preview channels in the channel list. Press 'OK' to preview the selected channel, press a 2nd 'OK' to exit and zap to that channel, pressing 'EXIT' to return to the "
-"channel you started at."
+"If set to 'yes' you can preview channels in the channel list. Press 'OK' to preview the selected channel, "
+"press a 2nd 'OK' to exit and zap to that channel, pressing 'EXIT' to return to the channel you started at."
 msgstr ""
-"Se impostato su 'SI' è possibile visualizzare in anteprima i canali nella lista canali. Premere 'OK' per anteprima del canale selezionato, premere OK nuovamente per uscire e fare zapping a quel "
-"canale. EXIT per tornare al canale iniziale."
+"Se impostato su 'SI' è possibile visualizzare in anteprima i canali nella lista canali. Premere 'OK' per "
+"anteprima del canale selezionato, premere OK nuovamente per uscire e fare zapping a quel canale. EXIT per "
+"tornare al canale iniziale."
 
 msgid "If set to 'yes', allows you to use the seekbar to jump to a point within the event."
 msgstr ""
@@ -4844,19 +4961,32 @@ msgid "If set to 'yes', the infobar will be displayed when Fast Forwarding or Re
 msgstr "Se impostato su 'SI' la Infobar verrà visualizzata su FFW/REW durante la riproduzione."
 
 msgid "If the text is too long to be displayed on the front panel, it will be repeated (number of times):"
-msgstr "Se il testo è troppo lungo per essere visualizzato sul pannello frontale, si ripeterà (numero delle volte):"
+msgstr ""
+"Se il testo è troppo lungo per essere visualizzato sul pannello frontale, si ripeterà (numero delle volte):"
 
-msgid "If using multiple uncommitted switches the DiSEqC commands must be sent multiple times. Set to the number of uncommitted switches in the chain minus one."
-msgstr "Su utilizzi diversi switch di tipo ‘uncommitted’, i comandi DiSEqC devono essere inviati più volte. Imposta il numero uguale agli switch uncommitted presenti MENO 1."
+msgid ""
+"If using multiple uncommitted switches the DiSEqC commands must be sent multiple times. Set to the number of "
+"uncommitted switches in the chain minus one."
+msgstr ""
+"Su utilizzi diversi switch di tipo ‘uncommitted’, i comandi DiSEqC devono essere inviati più volte. Imposta "
+"il numero uguale agli switch uncommitted presenti MENO 1."
 
 msgid "If you are using a Circular polarised LNB select 'yes', otherwise select 'no'."
 msgstr "Se usi un LNB polarizzato circolare scegli ‘sì’, altrimenti scegli ‘no’."
 
-msgid "If you are using a DiSEqC committed switch enter the port letter required to access the LNB used for this satellite."
-msgstr "Se stai usando uno switch DiSEqC ‘committed’, inserisci la lettera per la porta da utilizzare con questo satellite."
+msgid ""
+"If you are using a DiSEqC committed switch enter the port letter required to access the LNB used for this "
+"satellite."
+msgstr ""
+"Se stai usando uno switch DiSEqC ‘committed’, inserisci la lettera per la porta da utilizzare con questo "
+"satellite."
 
-msgid "If you are using a DiSEqC uncommitted switch enter the port number required to access the LNB used for this satellite."
-msgstr "Se stai usando uno switch DiSEqC ‘uncommitted’, inserisci il numero della porta da utilizzare con questo satellite."
+msgid ""
+"If you are using a DiSEqC uncommitted switch enter the port number required to access the LNB used for this "
+"satellite."
+msgstr ""
+"Se stai usando uno switch DiSEqC ‘uncommitted’, inserisci il numero della porta da utilizzare con questo "
+"satellite."
 
 msgid ""
 "If you can see this, something is wrong with\n"
@@ -4866,31 +4996,36 @@ msgstr ""
 "la connessione SCART. Premi OK per uscire."
 
 msgid ""
-"If your TV has a brightness or contrast enhancement, disable it. If there is something called \"dynamic\", set it to standard. Adjust the backlight level to a value suiting your taste. Turn "
-"down contrast on your TV as much as possible.\n"
-"Then turn the brightness setting as low as possible, but make sure that the two lowermost shades of gray stay distinguishable.\n"
+"If your TV has a brightness or contrast enhancement, disable it. If there is something called \"dynamic\", "
+"set it to standard. Adjust the backlight level to a value suiting your taste. Turn down contrast on your TV "
+"as much as possible.\n"
+"Then turn the brightness setting as low as possible, but make sure that the two lowermost shades of gray stay "
+"distinguishable.\n"
 "Do not care about the bright shades now. They will be set up in the next step.\n"
 "If you are happy with the result, press OK."
 msgstr ""
-"Se la TV dispone di un controllo per il miglioramento del contrasto, disattivarlo. Se dispone di un controllo definito [Dinamico], impostarlo a standard.\n"
+"Se la TV dispone di un controllo per il miglioramento del contrasto, disattivarlo. Se dispone di un controllo "
+"definito [Dinamico], impostarlo a standard.\n"
 "Regolare la retro-illuminazione ad un livello di gradimento. Abbassare il più possibile il contrasto.\n"
-"Abbassare al minimo la luminosità, assicurandosi tuttavia che le due sfumature più SCURE di grigio rimangano distinguibili.\n"
+"Abbassare al minimo la luminosità, assicurandosi tuttavia che le due sfumature più SCURE di grigio rimangano "
+"distinguibili.\n"
 "Per il momento non preoccuparsi delle sfumature chiare: saranno regolate successivamente.\n"
 "Quando il risultato appare soddisfacente, premere OK."
 
-msgid "If your usb drive is connected and mounted you must poweroff your box, remove the usb device and reboot.\n"
+msgid ""
+"If your usb drive is connected and mounted you must poweroff your box, remove the usb device and reboot.\n"
 msgstr ""
 "Se il dispositivo USB è connesso e montato, SPEGNERE il ricevitore, rimuoverlo e riavviarlo.\n"
 "\n"
 
 msgid "Ignore DVB-C namespace sub network"
-msgstr "Ignora spazio dei nomi della sottorete DVB-C"
+msgstr "Ignora gruppo dei nomi della sottorete DVB-C"
 
 msgid "Ignore DVB-S namespace sub network"
-msgstr "Ignora spazio dei nomi della sottorete DVB-S"
+msgstr "Ignora gruppo dei nomi della sottorete DVB-S"
 
 msgid "Ignore DVB-T namespace sub network"
-msgstr "Ignora spazio dei nomi della sottorete DVB-T"
+msgstr "Ignora gruppo dei nomi della sottorete DVB-T"
 
 msgid "Image Slot:\t%s"
 msgstr "Posizione immagine:\t%s"
@@ -4904,6 +5039,13 @@ msgstr "Immagine:\t%s.%s%s (%s)\n"
 msgid "Immediate shutdown"
 msgstr "Spegnimento immediato"
 
+msgid ""
+"In live view wait this many seconds after a numeric key press before assuming the required channel number has "
+"been entered. Default: 5 seconds. Setting zero will require confirmation with 'OK'. "
+msgstr ""
+"Attesa in secondi per accettare automaticamente il numero di canale digitato senza dare l'OK. Default=5 "
+"secondi. Se lo imposti a 0 dovrai sempre premere OK."
+
 msgid "In order to record a timer, the TV was switched to the recording service!\n"
 msgstr "In seguito a registrazione programmata, la TV è stata sintonizzata sul canale da registrare!\n"
 
@@ -4998,9 +5140,6 @@ msgstr "Informazioni e intrattenimento"
 msgid "Init"
 msgstr "Inizializzare"
 
-msgid "Init module"
-msgstr "Modulo di init"
-
 msgid "Init modules"
 msgstr "Inizializzazone moduli"
 
@@ -5098,7 +5237,7 @@ msgid "Installation finished."
 msgstr "Installazione conclusa."
 
 msgid "Installed:\t%s\n"
-msgstr "Installato:\t%s\n"
+msgstr "Installata:\t%s\n"
 
 msgid "Installing"
 msgstr "Installazione"
@@ -5388,7 +5527,9 @@ msgstr "Limite dimensione del file di log in (MB)"
 msgid "Limit east"
 msgstr "Limite est"
 
-msgid "Limit the characters that can be used in recording filenames to (7 bit) ascii. This ensures compatibility with operating systems or file systems with limited character sets."
+msgid ""
+"Limit the characters that can be used in recording filenames to (7 bit) ascii. This ensures compatibility "
+"with operating systems or file systems with limited character sets."
 msgstr ""
 "Limitare i caratteri utilizzabili nel registrare nomi a (7 bit) ASCII.\n"
 "Questo garantisce compatibilità con SYS operativi o FILESYS con set di caratteri limitati."
@@ -5647,7 +5788,9 @@ msgstr "Numero massimo di giorni"
 msgid "Maximum total space used (MB)"
 msgstr "Spazio massimo usato (MB)"
 
-msgid "Maybe the reason that recording is currently running. Please stop the recording before trying to configure the positioner."
+msgid ""
+"Maybe the reason that recording is currently running. Please stop the recording before trying to configure "
+"the positioner."
 msgstr "Probabilmente una registrazione è in corso! Prima di configurare il motore, è necessario arrestarla!"
 
 msgid "Mb/s"
@@ -5800,9 +5943,6 @@ msgstr "Tentativi di comandi al motore"
 msgid "Motor running timeout"
 msgstr "Timeout di esecuzione motore"
 
-msgid "Mount"
-msgstr "Mount"
-
 msgid "Mountpoints"
 msgstr "Punti di mount"
 
@@ -5828,7 +5968,7 @@ msgid "Move Up/Down"
 msgstr "Spostare SU/GIÙ"
 
 msgid "Move down a page"
-msgstr "Spostare in basso della pagina"
+msgstr "Spostarsi alla pagina successiva"
 
 msgid "Move down to last entry"
 msgstr "Spostare in basso all'ultima voce"
@@ -5870,7 +6010,7 @@ msgid "Move to position X"
 msgstr "Spostare alla posizione X"
 
 msgid "Move up a page"
-msgstr "Spostare su una pagina"
+msgstr "Spostarsi alla pagina precedente"
 
 msgid "Move up to first entry"
 msgstr "Spostare su alla voce iniziale"
@@ -5926,24 +6066,12 @@ msgstr "Spostare verso posizione"
 msgid "Moving west ..."
 msgstr "Spostare a ovest"
 
-msgid "Multi EPG"
-msgstr "Multi EPG"
-
 msgid "MultiEPG"
 msgstr "EPG multiplo"
 
 msgid "Multiboot"
 msgstr "Multiboot"
 
-msgid "Multiboot ERROR! - no STARTUP in /boot -Please check /etc/fstab for correct boot partition"
-msgstr "ERRORE Multiboot ! - Nessuno STARTUP in /boot - Controlla  /etc/fstab per la partizione di avvio corretta"
-
-msgid "Multiboot ERROR! - no STARTUP_%s in /boot - Image may need manual restart"
-msgstr "ERRORE Multiboot ! - Nessuno STARTUP_ %s in /boot -  necessario riavvio manuale dell'immagine"
-
-msgid "Multiboot Image Restart"
-msgstr "riavviare immagine Multiboot"
-
 msgid "Multimedia"
 msgstr "Multimedia"
 
@@ -5978,22 +6106,28 @@ msgid "NFS Setup"
 msgstr "Impostazioni NFS"
 
 msgid "NIM & Type"
-msgstr "NIM & Tipo"
+msgstr "Tipologia tuner"
+
+msgid "NIM & Type:"
+msgstr "Tipologia tuner:"
 
 msgid "NO"
 msgstr "NO"
 
 msgid ""
-"NOTE: This feature is intended for people who cannot disable overscan on their television / display.  Please first try to disable overscan before using this feature.\n"
+"NOTE: This feature is intended for people who cannot disable overscan on their television / display.  Please "
+"first try to disable overscan before using this feature.\n"
 "\n"
-"USAGE: Adjust the screen size and position settings so that the shaded user interface layer *just* covers the test pattern in the background.\n"
+"USAGE: Adjust the screen size and position settings so that the shaded user interface layer *just* covers the "
+"test pattern in the background.\n"
 "\n"
 "Select Yes to continue or No to exit."
 msgstr ""
-"NOTA: Questa funzionalità è destinata a persone che non possono disattivare l’overscan sulla loro TV/monitor. In ogni caso prova a disattivare l’overscan prima di utilizzare questa "
-"caratteristica.\n"
+"NOTA: Questa funzionalità è destinata a persone che non possono disattivare l’overscan sulla loro TV/monitor. "
+"In ogni caso prova a disattivare l’overscan prima di utilizzare questa caratteristica.\n"
 "\n"
-"UTILIZZO: Regola le dimensioni dello schermo e le impostazioni di posizione in modo che la zona di interfaccia utente ombreggiata copra solo il modello di test in secondo piano\n"
+"UTILIZZO: Regola le dimensioni dello schermo e le impostazioni di posizione in modo che la zona di "
+"interfaccia utente ombreggiata copra solo il modello di test in secondo piano\n"
 "\n"
 "Selezionare Sì per continuare oppure No per uscire."
 
@@ -6042,16 +6176,19 @@ msgid "Nameserver settings"
 msgstr "Configurazione DNS"
 
 msgid "Namespace"
-msgstr "Namespace"
+msgstr "Gruppo dei nomi"
+
+msgid "Namespace:"
+msgstr "Gruppo dei nomi:"
 
 msgid "Netherlands"
 msgstr "Olanda"
 
 msgid "Netmask"
-msgstr "Netmask"
+msgstr "Sottorete"
 
 msgid "Netmask:"
-msgstr "Netmask:"
+msgstr "Sottorete:"
 
 msgid "Network"
 msgstr "Rete"
@@ -6214,15 +6351,6 @@ msgstr "Nessun indice libero disponibile"
 msgid "No free tuner!"
 msgstr "Nessun tuner disponibile!"
 
-msgid "No httpport defined in oscam.conf. This value is required!"
-msgstr "Nessuna porta HTTP definita in oscam.conf. Questo valore è richiesto!"
-
-msgid "No httppwd defined in oscam.conf"
-msgstr "Nessuna httppwd definita in oscam. conf"
-
-msgid "No httpuser defined in oscam.conf"
-msgstr "Nessun httpuser definito in oscam.conf"
-
 msgid "No module found"
 msgstr "Nessun modulo rilevato"
 
@@ -6232,9 +6360,6 @@ msgstr "Connessione di rete non disponibile."
 msgid "No networks found"
 msgstr "Nessuna rete rilevata!"
 
-msgid "No new plugins found"
-msgstr "Nessun nuovo plugin trovato"
-
 msgid "No of items switch (increase or reduced)"
 msgstr "Nessun elemento da cambiare (aumentare o ridurre)"
 
@@ -6256,9 +6381,6 @@ msgstr "Nessun canale o provider selezionato"
 msgid "No standby"
 msgstr "Nessuno Standby"
 
-msgid "No suitable sat tuner found!"
-msgstr "Nessun tuner satellitare adeguato trovato!"
-
 msgid "No tags are set on these movies."
 msgstr "Nessuna etichetta configurata su queste registrazioni."
 
@@ -6357,7 +6479,8 @@ msgid "Not associated"
 msgstr "Non associato"
 
 msgid "Not enough disk space. Please free up some disk space and try again. (%d MB required, %d MB available)"
-msgstr "NON c’è abbastanza spazio libero. Liberare spazio sul disco e riprovare. (%d MB richiesti, %d MB disponibili)"
+msgstr ""
+"NON c’è abbastanza spazio libero. Liberare spazio sul disco e riprovare. (%d MB richiesti, %d MB disponibili)"
 
 msgid ""
 "Not enough free Diskspace!\n"
@@ -6386,9 +6509,6 @@ msgstr ""
 "NON c’è abbastanza spazio su /hdd!!\n"
 "Sono necessari almeno 300mb liberi.\n"
 
-msgid "Not mounted"
-msgstr "Non montato"
-
 msgid "Not running"
 msgstr "Non in esecuzione"
 
@@ -6429,11 +6549,12 @@ msgid "Nothing, just leave this menu"
 msgstr "Nulla: chiudere questo menu"
 
 msgid ""
-"Now, use the contrast setting to turn up the brightness of the background as much as possible, but make sure that you can still see the difference between the two brightest levels of shades.If "
-"you have done that, press OK."
+"Now, use the contrast setting to turn up the brightness of the background as much as possible, but make sure "
+"that you can still see the difference between the two brightest levels of shades.If you have done that, press "
+"OK."
 msgstr ""
-"Utilizzare ora il controllo del contrasto per aumentare la luminosità del background il più possibile, assicurandosi di poter distinguere la differenza tra le due sfumature più chiare. Alla "
-"fine premere OK."
+"Utilizzare ora il controllo del contrasto per aumentare la luminosità del background il più possibile, "
+"assicurandosi di poter distinguere la differenza tra le due sfumature più chiare. Alla fine premere OK."
 
 msgid "Number"
 msgstr "Numero"
@@ -6492,9 +6613,6 @@ msgstr "Alla fine del film"
 msgid "On end of movie (as menu)"
 msgstr "Alla fine del film (come menu)"
 
-msgid "On reaching the end of a file during playback, you can choose the box's behavior."
-msgstr "Quando si raggiunge la fine di una riproduzione, è possibile scegliere il comportamento del decoder."
-
 msgid "On shutdown/restart warn about any pending jobs being carried out in the background."
 msgstr "In caso di avvio o spegnimento, avvisa se vi sono processi attivi in background."
 
@@ -6519,8 +6637,12 @@ msgstr "Controllo Versione Online"
 msgid "Only active when in standby"
 msgstr "Attivo solo in standby"
 
-msgid "Only change this setting if you are using a SCR device that has been reprogrammed with a custom programmer. For further information check with the person that reprogrammed the device."
-msgstr "Cambia questa impostazione SOLO se stai usando un dispositivo SCR riprogrammato in modo personalizzato. Per ulteriori info chiedere a chi ha riprogrammato il dispositivo."
+msgid ""
+"Only change this setting if you are using a SCR device that has been reprogrammed with a custom programmer. "
+"For further information check with the person that reprogrammed the device."
+msgstr ""
+"Cambia questa impostazione SOLO se stai usando un dispositivo SCR riprogrammato in modo personalizzato. Per "
+"ulteriori info chiedere a chi ha riprogrammato il dispositivo."
 
 msgid "Only extensions."
 msgstr "Solo estensioni"
@@ -6537,8 +6659,12 @@ msgstr "Spostare il disco rapidamente solo prima di quest'ora."
 msgid "Only on startup"
 msgstr "Solo all'avvio"
 
-msgid "Only select 'yes' if you are using a multiswich that requires a DiSEqC Port-A command signal. For all other setups select 'no'."
-msgstr "Scegliere ‘Sì’ soltanto se utilizzi un multiswitch che richieda un segnale di comando DiSEqC per la porta A. Per tutte le altre situazioni, scegli ‘no’."
+msgid ""
+"Only select 'yes' if you are using a multiswich that requires a DiSEqC Port-A command signal. For all other "
+"setups select 'no'."
+msgstr ""
+"Scegliere ‘Sì’ soltanto se utilizzi un multiswitch che richieda un segnale di comando DiSEqC per la porta A. "
+"Per tutte le altre situazioni, scegli ‘no’."
 
 msgid "Open Black Hole Addons Plugins"
 msgstr "OpenBlackHole: Addons & Plugins"
@@ -6549,9 +6675,6 @@ msgstr "Immagine Open BlackHole"
 msgid "Open Black Hole Image Skins"
 msgstr "Skin per OpenBlackHole"
 
-msgid "Open Black Hole Speed Up"
-msgstr "Ottimizzazione OpenBlackHole"
-
 msgid "Open Black Hole online update"
 msgstr "Aggiornamenti online OpenBlackHole"
 
@@ -6618,9 +6741,6 @@ msgstr "Normale"
 msgid "Original"
 msgstr "Originale"
 
-msgid "Oscam ECM-info"
-msgstr "Oscam ECM-info"
-
 msgid "Oscam Info - Configuration"
 msgstr "Configurazione - Oscam Info"
 
@@ -6820,7 +6940,7 @@ msgid "Picon Width"
 msgstr "Larghezza picon"
 
 msgid "Picon and Service Name"
-msgstr "Picon e nome canale"
+msgstr "Picon + nome canale"
 
 msgid "Picon width"
 msgstr "Larghezza picon"
@@ -6915,9 +7035,6 @@ msgstr "Attendere: sto eseguendo la creazione di un backup,\n"
 msgid "Please change the recording end time"
 msgstr "Modificare l'orario fine registrazione "
 
-msgid "Please choose CCcam reader"
-msgstr "Selezionare il lettore CCcam"
-
 msgid "Please choose an extension..."
 msgstr "Selezionare un'estensione..."
 
@@ -6992,7 +7109,9 @@ msgstr ""
 "Controllare che il dispositivo USB NON sia connesso al VU+ prima di continuare.\n"
 "\n"
 
-msgid "Please note that the previously selected media could not be accessed and therefore the default directory is being used instead."
+msgid ""
+"Please note that the previously selected media could not be accessed and therefore the default directory is "
+"being used instead."
 msgstr "Il supporto selezionato precedentemente non è più accessibile: sarà utilizzata la cartella predefinita."
 
 msgid "Please open Picture in Picture first"
@@ -7031,9 +7150,6 @@ msgstr "Selezionare il supporto su cui cercare"
 msgid "Please select medium to use as backup location"
 msgstr "Selezionare il supporto per il backup"
 
-msgid "Please select scan mode."
-msgstr "Selezionare la modalità di scansione."
-
 msgid "Please select the movie path..."
 msgstr "Selezionare il percorso registrazioni"
 
@@ -7098,10 +7214,12 @@ msgid "Please set up tuner R"
 msgstr "Impostare il tuner R"
 
 msgid ""
-"Please setup your user interface by adjusting the values till the edges of the user interface box are covering the test pattern and touching the edges of your TV.\n"
+"Please setup your user interface by adjusting the values till the edges of the user interface box are "
+"covering the test pattern and touching the edges of your TV.\n"
 "When you are ready press OK to continue."
 msgstr ""
-"Regola la tua interfaccia utente (GUI) modificando i valori fino a che i bordi del riquadro dell’interfaccia copriranno il modello e raggiungeranno i bordi della tua TV.\n"
+"Regola la tua interfaccia utente (GUI) modificando i valori fino a che i bordi del riquadro dell’interfaccia "
+"copriranno il modello e raggiungeranno i bordi della tua TV.\n"
 "Premi OK appena sarai pronto."
 
 msgid ""
@@ -7117,9 +7235,6 @@ msgstr ""
 "-Alias\n"
 "-Sistema"
 
-msgid "Please use the UP and DOWN keys to select your language. Afterwards press the OK button."
-msgstr "Selezionare la propria lingua utilizzando i tasti SU/GIÙ. Premere OK per confermare."
-
 msgid ""
 "Please use the direction keys to move the PiP window.\n"
 "Press Bouquet +/- to resize the window.\n"
@@ -7279,9 +7394,6 @@ msgstr "Limite di potenza in mA"
 msgid "Power threshold. Consult your receiver's manual for more information."
 msgstr "Soglia alimentazione. Per ulteriori informazioni, consultare il manuale del ricevitore."
 
-msgid "Power timers"
-msgstr "PowerTimer"
-
 msgid "PowerManager entry"
 msgstr "Voci di PowerManager"
 
@@ -7370,9 +7482,6 @@ msgstr "Premere MENU per informazioni addizionali"
 msgid "Press OK on your remote control to continue."
 msgstr "Premere OK per proseguire"
 
-msgid "Press OK to activate the selected skin."
-msgstr "Premere OK per attivare la skin selezionata"
-
 msgid "Press OK to activate the settings."
 msgstr "Premere OK per attivare la configurazione"
 
@@ -7412,16 +7521,6 @@ msgstr "Premere OK per commutare la selezione."
 msgid "Press OK, save and exit..."
 msgstr "Premere OK, salvare e uscire..."
 
-msgid ""
-"Press and hold the buttons <MENU+AUDIO>\n"
-" for five seconds to start."
-msgstr ""
-"Premere e tenere premuti i tasti <MENU+AUDIO>\n"
-" per cinque secondi per iniziare."
-
-msgid "Press red key to enable bluetooth."
-msgstr "Premere il tasto rosso per abilitare il bluetooth"
-
 msgid ""
 "Press up/down to scroll through the selected log\n"
 "\n"
@@ -7621,9 +7720,6 @@ msgstr "Valutazione non definita"
 msgid "Re-enter PIN"
 msgstr "Re-inserisci PIN"
 
-msgid "Read user data from oscam.conf"
-msgstr "Leggere i dati utente da oscam. conf"
-
 msgid "Reader"
 msgstr "Reader"
 
@@ -7769,7 +7865,7 @@ msgid "Release notes"
 msgstr "Note di rilascio"
 
 msgid "Relevant PIDs routing"
-msgstr "PIDs pertinenti di routing"
+msgstr "PID pertinenti di routing"
 
 msgid "Reload"
 msgstr "Ricaricare"
@@ -7876,9 +7972,6 @@ msgstr "Rimozione canale"
 msgid "Removing directory %s failed. (Maybe not empty.)"
 msgstr "Rimozione cartella %s fallita! (probabilmente non è vuota!)"
 
-msgid "Removing partition table"
-msgstr "Rimozione tabelle di partizione"
-
 msgid "Removing service"
 msgstr "Rimozione canale"
 
@@ -7936,9 +8029,6 @@ msgstr "Richiedi autenticazione per gli stream Http"
 msgid "Required medium type:"
 msgstr "Tipo di supporto richiesto:"
 
-msgid "Rereading partition table"
-msgstr "Rileggere tabella partizioni"
-
 msgid "Reserved"
 msgstr "Riservato"
 
@@ -7981,9 +8071,6 @@ msgstr "Riavvio del sistema (GUI)"
 msgid "Restart GUI now?"
 msgstr "Riavviare il sistema (GUI) ora?"
 
-msgid "Restart Gui"
-msgstr "Riavvio del sistema (GUI)"
-
 msgid "Restart network"
 msgstr "Riavviare la rete"
 
@@ -8122,9 +8209,6 @@ msgstr "SCR JESS"
 msgid "SCR Unicable"
 msgstr "SCR Unicable"
 
-msgid "SDcard is not initialised for multiboot - Exit and use ViX MultiBoot Manager to initialise"
-msgstr "SDcard non è stato inizializzato per il multiboot - uscire e utilizzare OBH MultiBoot Manager"
-
 msgid "SINGLE LAYER DVD"
 msgstr "DVD singolo strato"
 
@@ -8177,9 +8261,6 @@ msgstr "Configurazione dispositivo satellitare"
 msgid "Satellite equipment"
 msgstr "Impianto satellitare"
 
-msgid "Satellite equipment control"
-msgstr "Controllo impianto satellitare"
-
 msgid "Satellite equipment setup"
 msgstr "Impostazioni impianto satellitare"
 
@@ -8204,9 +8285,6 @@ msgstr "Salva"
 msgid "Save EPG"
 msgstr "Salvare EPG"
 
-msgid "Save and exit"
-msgstr "Salva e esci"
-
 msgid "Save and record"
 msgstr "Salvare e registrare"
 
@@ -8261,23 +8339,18 @@ msgstr "Scansiona banda %s"
 msgid "Scan additional SR"
 msgstr "Ricerca su SR aggiuntivi"
 
-msgid "Scan and setup Vu+ Bluetooth RCU"
-msgstr "Ricerca e installazione del telecomando Vu+ Bluetooth"
-
 msgid "Scan files..."
 msgstr "Scansione files..."
 
 msgid "Scan options"
 msgstr "Opzioni di scansione"
 
-msgid "Scan other bluetooth 3.0 device (A2DP, HID)"
-msgstr "Ricerca di altro dispositivo bluetooth 3.0 (A2DP, HID)"
-
 msgid "Scan wireless networks"
 msgstr "Scansione reti wireless"
 
 msgid "Scan your network for wireless access points and connect to them using your selected wireless device.\n"
-msgstr "Scansione della rete alla ricerca di reti WiFi e collegarsi ad esse tramite la scheda wireless selezionata\n"
+msgstr ""
+"Scansione della rete alla ricerca di reti WiFi e collegarsi ad esse tramite la scheda wireless selezionata\n"
 
 msgid "Scanning %s..."
 msgstr "Scansione %s.."
@@ -8287,9 +8360,6 @@ msgid_plural "Scanning - %d%% completed"
 msgstr[0] "Scansione - %d%% completata"
 msgstr[1] "Scansione - %d%% completata"
 
-msgid "Scanning bluetooth devices"
-msgstr "Ricerca dispositivi Bluetooth..."
-
 msgid "Scanning completed, %d channel found"
 msgid_plural "Scanning completed, %d channels found"
 msgstr[0] "Scansione completata, %d canale trovato"
@@ -8388,14 +8458,26 @@ msgstr "Sensibilità della barra di ricerca (Seekbar)"
 msgid "Select"
 msgstr "Seleziona"
 
-msgid "Select '1.0' for standard committed switches, '1.1' for uncommitted switches, and '1.2' for systems using a positioner."
-msgstr "Scegli ‘1.0’ per switch standard (committed); ‘1.1’ per switch uncommitted e ‘1.2’ per sistemi che usano un posizionatore."
+msgid ""
+"Select '1.0' for standard committed switches, '1.1' for uncommitted switches, and '1.2' for systems using a "
+"positioner."
+msgstr ""
+"Scegli ‘1.0’ per switch standard (committed); ‘1.1’ per switch uncommitted e ‘1.2’ per sistemi che usano un "
+"posizionatore."
 
-msgid "Select 'A' or 'B' if your aerial system requires this, otherwise select 'none'. If you are unsure select 'none'."
-msgstr "Scegli 'A' o ‘B’ se il tuo equipaggiamento lo richiede; altrimenti 'nessuna'. Se non sei sicuro della scelta, scegli 'nessuna'."
+msgid ""
+"Select 'A' or 'B' if your aerial system requires this, otherwise select 'none'. If you are unsure select "
+"'none'."
+msgstr ""
+"Scegli 'A' o ‘B’ se il tuo equipaggiamento lo richiede; altrimenti 'nessuna'. Se non sei sicuro della scelta, "
+"scegli 'nessuna'."
 
-msgid "Select 'FBC SCR' if this tuner will connect to a SCR (Unicable/JESS) device. For all other setups select 'FBC automatic'."
-msgstr "Selezionare 'FBC SCR' se questo TUNER si connetterà a un dispositivo SCR (Unicable/JESS). Per tutte le altre impostazioni selezionare 'FBC automatico'."
+msgid ""
+"Select 'FBC SCR' if this tuner will connect to a SCR (Unicable/JESS) device. For all other setups select 'FBC "
+"automatic'."
+msgstr ""
+"Selezionare 'FBC SCR' se questo TUNER si connetterà a un dispositivo SCR (Unicable/JESS). Per tutte le altre "
+"impostazioni selezionare 'FBC automatico'."
 
 msgid "Select 'band' if using a 'universal' LNB, otherwise consult your LNB spec sheet."
 msgstr "Scegli 'banda' se utilizzi un LNB Universale; altrimenti, consulta le specifiche del tuo LNB."
@@ -8407,13 +8489,16 @@ msgid "Select 'polarisation' if using a 'universal' LNB, otherwise consult your
 msgstr "Scegli ‘polarizzazione’ se utilizzi un LNB Universale; altrimenti, consulta le specifiche del tuo LNB."
 
 msgid ""
-"Select 'provider' to scan from the predefined list of cable multiplexes. Select 'bands' to only scan certain parts of the spectrum. Select 'steps' to scan in steps of a particular frequency "
-"bandwidth."
+"Select 'provider' to scan from the predefined list of cable multiplexes. Select 'bands' to only scan certain "
+"parts of the spectrum. Select 'steps' to scan in steps of a particular frequency bandwidth."
 msgstr ""
-"Scegli ‘provider’ per la scansione della lista predefinita via cavo. Scegli ‘bande’ per la scansione solo di alcune parti. Scegli ‘passi’ per una scansione di una particolare banda di frequenza."
+"Scegli ‘provider’ per la scansione della lista predefinita via cavo. Scegli ‘bande’ per la scansione solo di "
+"alcune parti. Scegli ‘passi’ per una scansione di una particolare banda di frequenza."
 
 msgid "Select 'yes' if this tuner is connected to the SCR device through another tuner, otherwise select 'no'."
-msgstr "Selezionare 'SI' se questo TUNER è collegato al dispositivo SCR attraverso un altro sintonizzatore, altrimenti selezionare 'NO'."
+msgstr ""
+"Selezionare 'SI' se questo TUNER è collegato al dispositivo SCR attraverso un altro sintonizzatore, "
+"altrimenti selezionare 'NO'."
 
 msgid "Select 'yes' to choose what bands or step sizes will be scanned."
 msgstr "Scegli ‘sì’ per scegliere quali bande saranno scansionati e con quali incrementi di passo."
@@ -8422,13 +8507,17 @@ msgid "Select 'yes' to include %s multiplexes in your search."
 msgstr "Seleziona 'SI' per includere i multiplex di %s nella ricerca."
 
 msgid "Select 'yes' to include symbol rate %s in your search."
-msgstr "Seleziona 'Sì' per includere symbol rate %s nella ricerca."
+msgstr "Seleziona 'Sì' per includere il Symbol Rate (SR) %s nella ricerca."
 
 msgid "Select 'yes' to include the %s band in your search."
 msgstr "Seleziona 'Sì' per includere la banda %s nella ricerca."
 
-msgid "Select 'yes' to only send the DiSEqC command when changing from one satellite to another, or select 'no' for the DiSEqC command to be resent on every zap."
-msgstr "Scegli ‘sì’ per inviare il comando DiSEqC soltanto quando si cambia satellite; ‘no’ per reinviarlo comunque ad ogni cambio di canale."
+msgid ""
+"Select 'yes' to only send the DiSEqC command when changing from one satellite to another, or select 'no' for "
+"the DiSEqC command to be resent on every zap."
+msgstr ""
+"Scegli ‘sì’ per inviare il comando DiSEqC soltanto quando si cambia satellite; ‘no’ per reinviarlo comunque "
+"ad ogni cambio di canale."
 
 msgid "Select CAId"
 msgstr "Selezionare i CAId"
@@ -8436,7 +8525,9 @@ msgstr "Selezionare i CAId"
 msgid "Select Fast DiSEqC if your aerial system supports this. If you are unsure select 'no'."
 msgstr "Seleziona DiSEqC veloce se il tuo sistema lo supporta. Se non sei sicuro, scegli ‘no’."
 
-msgid "Select a receiver to use for fallback tuners. If the host receiver is not listed, manually enter the URL or IP address"
+msgid ""
+"Select a receiver to use for fallback tuners. If the host receiver is not listed, manually enter the URL or "
+"IP address"
 msgstr ""
 "Selezionare un ricevitore da utilizzare per il fallback dei tuner.\n"
 "Se il ricevitore host non è elencato, immetterne manualmente indirizzo IP o URL"
@@ -8504,9 +8595,6 @@ msgstr "Selezionare il dispositivo di input."
 msgid "Select interface"
 msgstr "Selezionare l'interfaccia"
 
-msgid "Select locale"
-msgstr "Selezionare la lingua"
-
 msgid "Select location"
 msgstr "Selezionare il percorso"
 
@@ -8543,71 +8631,107 @@ msgstr "Selezionane la modalità di ordinamento:"
 msgid "Select target folder"
 msgstr "Selezionare la cartella destinazione"
 
-msgid "Select the User Band channel to be assigned to this tuner. This is an index into the table of frequencies the SCR switch or SCR LNB uses to pass the requested transponder to the tuner."
+msgid ""
+"Select the User Band channel to be assigned to this tuner. This is an index into the table of frequencies the "
+"SCR switch or SCR LNB uses to pass the requested transponder to the tuner."
 msgstr ""
-"Scegli il canale della banda utente da assegnare a questo tuner. Questo è un indice usato dalla tabella delle frequenze dell’LNB SCR (o switch SCR) per passare il transponder richiesto al tuner."
+"Scegli il canale della banda utente da assegnare a questo tuner. Questo è un indice usato dalla tabella delle "
+"frequenze dell’LNB SCR (o switch SCR) per passare il transponder richiesto al tuner."
 
-msgid "Select the User Band frequency to be assigned to this tuner. This is the frequency the SCR switch or SCR LNB uses to pass the requested transponder to the tuner."
-msgstr "Scegli la frequenza della banda utente da assegnare a questo tuner. Questo è la frequenza che l’LNB SCR (o lo switch SCR) usa per passare il transponder richiesto al tuner."
+msgid ""
+"Select the User Band frequency to be assigned to this tuner. This is the frequency the SCR switch or SCR LNB "
+"uses to pass the requested transponder to the tuner."
+msgstr ""
+"Scegli la frequenza della banda utente da assegnare a questo tuner. Questo è la frequenza che l’LNB SCR (o lo "
+"switch SCR) usa per passare il transponder richiesto al tuner."
 
-msgid "Select the User Band to be assigned to this tuner. This is an index into the table of frequencies the SCR switch or SCR LNB uses to pass the requested transponder to the tuner."
-msgstr "Scegli la banda utente da assegnare a questo tuner. Questo è un indice usato dalla tabella delle frequenze dell’LNB SCR (o switch SCR) per passare il transponder richiesto al tuner."
+msgid ""
+"Select the User Band to be assigned to this tuner. This is an index into the table of frequencies the SCR "
+"switch or SCR LNB uses to pass the requested transponder to the tuner."
+msgstr ""
+"Scegli la banda utente da assegnare a questo tuner. Questo è un indice usato dalla tabella delle frequenze "
+"dell’LNB SCR (o switch SCR) per passare il transponder richiesto al tuner."
 
 msgid "Select the character or action under the virtual keyboard cursor"
 msgstr "Scegli il carattere o l’azione sotto il cursore della tastiera virtuale"
 
 msgid ""
-"Select the desired function and click on \"OK\" to assign it. Use \"CH+/-\" to toggle between the lists. Select an assigned function and click on \"OK\" to de-assign it. Use \"Next/Previous\" "
-"to change the order of the assigned functions."
+"Select the desired function and click on \"OK\" to assign it. Use \"CH+/-\" to toggle between the lists. "
+"Select an assigned function and click on \"OK\" to de-assign it. Use \"Next/Previous\" to change the order of "
+"the assigned functions."
 msgstr ""
-"Sel. la funzione. \"OK\" per assegnarla. \"CH+\" per passare alla lista delle assegnazioni. Qui OK seleziona/deseleziona un’assegnazione. “< >“ modificano l'ordine delle funzioni assegnate."
+"Sel. la funzione. \"OK\" per assegnarla. \"CH+\" per passare alla lista delle assegnazioni. Qui OK seleziona/"
+"deseleziona un’assegnazione. “< >“ modificano l'ordine delle funzioni assegnate."
 
-msgid "Select the manufacturer of your SCR device. If the manufacturer is not listed, set 'SCR' to 'user defined' and enter the device parameters manually according to its spec sheet."
-msgstr "Selezionare il produttore del dispositivo SCR. Se non elencato, impostare 'SCR' su 'definito dall'utente' e immettere manualmente i parametri del in base alla relativa scheda tecnica."
+msgid ""
+"Select the manufacturer of your SCR device. If the manufacturer is not listed, set 'SCR' to 'user defined' "
+"and enter the device parameters manually according to its spec sheet."
+msgstr ""
+"Selezionare il produttore del dispositivo SCR. Se non elencato, impostare 'SCR' su 'definito dall'utente' e "
+"immettere manualmente i parametri del in base alla relativa scheda tecnica."
 
-msgid "Select the model number of your SCR device. If the model number is not listed, set 'SCR' to 'user defined' and enter the device parameters manually according to its spec sheet."
+msgid ""
+"Select the model number of your SCR device. If the model number is not listed, set 'SCR' to 'user defined' "
+"and enter the device parameters manually according to its spec sheet."
 msgstr ""
-"Selezionare il numero di modello del dispositivo SCR. Se non elencato, impostare 'SCR' su 'definito dall'utente' e immettere manualmente i parametri del in base alla relativa scheda tecnica."
+"Selezionare il numero di modello del dispositivo SCR. Se non elencato, impostare 'SCR' su 'definito "
+"dall'utente' e immettere manualmente i parametri del in base alla relativa scheda tecnica."
 
 msgid "Select the movie path"
 msgstr "Selezionare la cartella video"
 
-msgid "Select the protocol used by your SCR device. Choices are 'SCR Unicable' (Unicable), or 'SCR JESS' (JESS, also known as Unicable II)."
-msgstr "Selezionare il protocollo utilizzato dal dispositivo SCR. Le scelte sono \"SCR Unicable\" (Unicable) o \"SCR JESS\" (JESS, noto anche come Unicable II)."
+msgid ""
+"Select the protocol used by your SCR device. Choices are 'SCR Unicable' (Unicable), or 'SCR JESS' (JESS, also "
+"known as Unicable II)."
+msgstr ""
+"Selezionare il protocollo utilizzato dal dispositivo SCR. Le scelte sono \"SCR Unicable\" (Unicable) o \"SCR "
+"JESS\" (JESS, noto anche come Unicable II)."
 
 msgid ""
-"Select the satellite which is connected to Port-A of your switch. If you are unsure select 'automatic' and the receiver will attempt to determine this for you. If nothing is connected to this "
-"port, select 'nothing connected'."
+"Select the satellite which is connected to Port-A of your switch. If you are unsure select 'automatic' and "
+"the receiver will attempt to determine this for you. If nothing is connected to this port, select 'nothing "
+"connected'."
 msgstr ""
-"Selezione il satellite connesso alla porta A del tuo switch. Se non sei sicuro, scegli ‘Automatico’ e il ricevitore tenterà di determinarlo. Se non c’è nulla connesso a questa porta, scegli "
-"‘Nulla connesso’."
+"Selezione il satellite connesso alla porta A del tuo switch. Se non sei sicuro, scegli ‘Automatico’ e il "
+"ricevitore tenterà di determinarlo. Se non c’è nulla connesso a questa porta, scegli ‘Nulla connesso’."
 
 msgid ""
-"Select the satellite which is connected to Port-B of your switch. If you are unsure select 'automatic' and the receiver will attempt to determine this for you. If nothing is connected to this "
-"port, select 'nothing connected'."
+"Select the satellite which is connected to Port-B of your switch. If you are unsure select 'automatic' and "
+"the receiver will attempt to determine this for you. If nothing is connected to this port, select 'nothing "
+"connected'."
 msgstr ""
-"Selezione il satellite connesso alla porta B del tuo switch. Se non sei sicuro, scegli ‘Automatico’ e il ricevitore tenterà di determinarlo. Se non c’è nulla connesso a questa porta, scegli "
-"‘Nulla connesso’."
+"Selezione il satellite connesso alla porta B del tuo switch. Se non sei sicuro, scegli ‘Automatico’ e il "
+"ricevitore tenterà di determinarlo. Se non c’è nulla connesso a questa porta, scegli ‘Nulla connesso’."
 
 msgid ""
-"Select the satellite which is connected to Port-C of your switch. If you are unsure select 'automatic' and the receiver will attempt to determine this for you. If nothing is connected to this "
-"port, select 'nothing connected'."
+"Select the satellite which is connected to Port-C of your switch. If you are unsure select 'automatic' and "
+"the receiver will attempt to determine this for you. If nothing is connected to this port, select 'nothing "
+"connected'."
 msgstr ""
-"Selezione il satellite connesso alla porta C del tuo switch. Se non sei sicuro, scegli ‘Automatico’ e il ricevitore tenterà di determinarlo. Se non c’è nulla connesso a questa porta, scegli "
-"‘Nulla connesso’."
+"Selezione il satellite connesso alla porta C del tuo switch. Se non sei sicuro, scegli ‘Automatico’ e il "
+"ricevitore tenterà di determinarlo. Se non c’è nulla connesso a questa porta, scegli ‘Nulla connesso’."
 
 msgid ""
-"Select the satellite which is connected to Port-D of your switch. If you are unsure select 'automatic' and the receiver will attempt to determine this for you. If nothing is connected to this "
-"port, select 'nothing connected'."
+"Select the satellite which is connected to Port-D of your switch. If you are unsure select 'automatic' and "
+"the receiver will attempt to determine this for you. If nothing is connected to this port, select 'nothing "
+"connected'."
 msgstr ""
-"Selezione il satellite connesso alla porta D del tuo switch. Se non sei sicuro, scegli ‘Automatico’ e il ricevitore tenterà di determinarlo. Se non c’è nulla connesso a questa porta, scegli "
-"‘Nulla connesso’."
+"Selezione il satellite connesso alla porta D del tuo switch. Se non sei sicuro, scegli ‘Automatico’ e il "
+"ricevitore tenterà di determinarlo. Se non c’è nulla connesso a questa porta, scegli ‘Nulla connesso’."
 
-msgid "Select the satellite you want to configure. Once that satellite is configured you can select and configure other satellites that will be accessed using this same tuner."
-msgstr "Scegli il satellite che vuoi configurare. Una volta configurato, potrai selezionare e configurare gli altri satelliti cui hai accesso tramite lo stesso tuner."
+msgid ""
+"Select the satellite you want to configure. Once that satellite is configured you can select and configure "
+"other satellites that will be accessed using this same tuner."
+msgstr ""
+"Scegli il satellite che vuoi configurare. Una volta configurato, potrai selezionare e configurare gli altri "
+"satelliti cui hai accesso tramite lo stesso tuner."
 
-msgid "Select the satellite your dish receives from. If you are unsure select 'automatic' and the receiver will attempt to determine this for you."
-msgstr "Scegli il satellite da cui ricevi. Se non sei sicuro, scegli ‘Automatico’ e il ricevitore tenterà di determinarlo."
+msgid ""
+"Select the satellite your dish receives from. If you are unsure select 'automatic' and the receiver will "
+"attempt to determine this for you."
+msgstr ""
+"Scegli il satellite da cui ricevi. Se non sei sicuro, scegli ‘Automatico’ e il ricevitore tenterà di "
+"determinarlo."
 
 msgid "Select the tuner that controls the motorised dish."
 msgstr "Seleziona il Tuner che controlla il disco motorizzato."
@@ -8618,8 +8742,12 @@ msgstr "Seleziona il tuner a cui questo è collegato in cascata."
 msgid "Select the tuner to which the signal cable of the SCR device is connected."
 msgstr "Wähle den Tuner an dem das Unicable Kabel angeschlossen ist."
 
-msgid "Select the type of LNB/device being used (normally 'Universal'). If your LNB type is not available select 'user defined'."
-msgstr "Scegliere il tipo di LNB utilizzato (di solito ‘Universale’ o Unicable/SCR). Se il tuo tipo non è in elenco, scegli ‘Definito dall’utente’."
+msgid ""
+"Select the type of LNB/device being used (normally 'Universal'). If your LNB type is not available select "
+"'user defined'."
+msgstr ""
+"Scegliere il tipo di LNB utilizzato (di solito ‘Universale’ o Unicable/SCR). Se il tuo tipo non è in elenco, "
+"scegli ‘Definito dall’utente’."
 
 msgid "Select the type of Single Cable Reception device you are using."
 msgstr "Seleziona il tipo di dispositivo per la ricezione con cavo singolo."
@@ -8651,14 +8779,21 @@ msgstr "Seleziona il provider ATSC."
 msgid "Select your country. If not available select 'all'."
 msgstr "Seleziona il tuo paese. Se non disponibile selezionare 'tutto'."
 
-msgid "Select your provider and region. If not present in this list you will need to select one of the other 'service scan types'."
-msgstr "Scegli il gestore e la regione. Se non è presente nella lista, dovrai scegliere uno degli altri “tipi di scansione canali”."
+msgid ""
+"Select your provider and region. If not present in this list you will need to select one of the other "
+"'service scan types'."
+msgstr ""
+"Scegli il gestore e la regione. Se non è presente nella lista, dovrai scegliere uno degli altri “tipi di "
+"scansione canali”."
 
 msgid "Select your provider, and press OK to start the scan"
 msgstr "Selezionare il provider. Tasto 'OK' per iniziare la ricerca"
 
-msgid "Select your region. If not available change 'Country' to 'all' and select one of the default alternatives."
-msgstr "Scegli la tua regione. Se non è disponibile, cambia la nazione in “Tutte” e scegli una delle alternative proposte."
+msgid ""
+"Select your region. If not available change 'Country' to 'all' and select one of the default alternatives."
+msgstr ""
+"Scegli la tua regione. Se non è disponibile, cambia la nazione in “Tutte” e scegli una delle alternative "
+"proposte."
 
 msgid "Selecting satellites 1 (USALS)"
 msgstr "Selezione satelliti 1 (USALS)"
@@ -8669,24 +8804,15 @@ msgstr "Selezione satelliti 2 (USALS)"
 msgid "Selecting this option allows you to configure a group of satellites in one block."
 msgstr "Selezionando questa opzione è possibile configurare un gruppo di satelliti in un blocco."
 
-msgid "Send"
-msgstr "Invia"
-
 msgid "Send 'sourceactive' before zap timers"
 msgstr "Riattiva il ricevitore con i timer che cambiano canale"
 
-msgid "Send Confirmation"
-msgstr "Conferma invio"
-
 msgid "Send DiSEqC"
 msgstr "Inviare DiSEqC"
 
 msgid "Send DiSEqC only on satellite change"
 msgstr "Inviare DiSEqC solo su cambio satellite"
 
-msgid "Send yourself a copy"
-msgstr "Invia una copia a te stesso"
-
 msgid "Senegal"
 msgstr "Senegal"
 
@@ -8724,7 +8850,7 @@ msgid "Service"
 msgstr "Canale"
 
 msgid "Service & PIDs"
-msgstr "PIDs & servizi"
+msgstr "PID & servizi"
 
 msgid "Service ID"
 msgstr "ID canale"
@@ -8733,13 +8859,13 @@ msgid "Service Name"
 msgstr "Nome canale"
 
 msgid "Service Number and Picon"
-msgstr "Numero del canale e Picon"
+msgstr "Numero del canale + Picon"
 
 msgid "Service Number and Service Name"
-msgstr "Numero e Nome del canale"
+msgstr "Numero + Nome del canale"
 
 msgid "Service Number, Picon and Service Name"
-msgstr "Numero del canale, Picon e Nome del canale"
+msgstr "Numero del canale + Picon + Nome del canale"
 
 msgid "Service Title mode"
 msgstr "Modalità nome canali"
@@ -8852,11 +8978,12 @@ msgid "Set pin code persistent"
 msgstr "Imposta codice PIN persistente"
 
 msgid ""
-"Set sequence repeats if your aerial system requires this. Normally if the aerial system has been configured correctly sequence repeats will not be necessary. If yours does, recheck you have "
-"command order set correctly."
+"Set sequence repeats if your aerial system requires this. Normally if the aerial system has been configured "
+"correctly sequence repeats will not be necessary. If yours does, recheck you have command order set correctly."
 msgstr ""
-"Imposta la ripetizione della sequenza se il sistema di ricezione lo richiede. Di solito, se il sistema è stato configurato correttamente, la ripetizione della sequenza non serve. Se il tuo la "
-"richiede, ricontrolla l’ordine dei comandi."
+"Imposta la ripetizione della sequenza se il sistema di ricezione lo richiede. Di solito, se il sistema è "
+"stato configurato correttamente, la ripetizione della sequenza non serve. Se il tuo la richiede, ricontrolla "
+"l’ordine dei comandi."
 
 msgid "Set startup service"
 msgstr "Impostare canale di avvio"
@@ -8873,22 +9000,30 @@ msgstr "Selezionare il canale per questo timer"
 msgid "Set the date the timer must start."
 msgstr "Selezionare la data di avvio timer."
 
-msgid "Set the default location for your instant recordings. Press 'OK' to add new locations, select left/right to select an existing location."
+msgid ""
+"Set the default location for your instant recordings. Press 'OK' to add new locations, select left/right to "
+"select an existing location."
 msgstr ""
 "Impostare la posizione predefinita per le registrazioni immediate. 'OK' per aggiungere nuove posizioni.\n"
 "Selezionare con sinistra/destra per una posizione esistente"
 
-msgid "Set the default location for your recordings. Press 'OK' to add new locations, select left/right to select an existing location."
+msgid ""
+"Set the default location for your recordings. Press 'OK' to add new locations, select left/right to select an "
+"existing location."
 msgstr ""
 "Impostare la posizione predefinita per le registrazioni. 'OK' per aggiungere nuove posizioni.\n"
 "Selezionare con sinistra/destra una posizione esistente"
 
-msgid "Set the default location for your timers. Press 'OK' to add new locations, select left/right to select an existing location."
+msgid ""
+"Set the default location for your timers. Press 'OK' to add new locations, select left/right to select an "
+"existing location."
 msgstr ""
 "Impostare la posizione predefinita per i timer. 'OK' per aggiungere nuove posizioni.\n"
 "Selezionare con sinistra/destra una posizione esistente."
 
-msgid "Set the default location for your timeshift-files. Press 'OK' to add new locations, select left/right to select an existing location."
+msgid ""
+"Set the default location for your timeshift-files. Press 'OK' to add new locations, select left/right to "
+"select an existing location."
 msgstr ""
 "Impostare la posizione predefinita per i timeshift. 'OK' per aggiungere nuove posizioni.\n"
 "Selezionare con sinistra/destra una posizione esistente."
@@ -9001,9 +9136,6 @@ msgstr "Impostazioni posizionatore"
 msgid "Setup your satellite equipment"
 msgstr "Impostazioni impianto Sat"
 
-msgid "Setup your timezone area."
-msgstr "Imposta la zona del fuso orario"
-
 msgid "Share Folder's"
 msgstr "Cartelle condivise"
 
@@ -9360,9 +9492,6 @@ msgstr "Mostra informazioni transponder"
 msgid "Show transponder remaining/elapsed as"
 msgstr "Mostra transponder rimanente/trascorso come"
 
-msgid "Show warning when in a stream"
-msgstr "Mostra avviso quando in Stream "
-
 msgid "Show warning when timeshift is stopped"
 msgstr "Mostra avviso su arresto timeshift"
 
@@ -9430,7 +9559,7 @@ msgid "Single"
 msgstr "Singolo"
 
 msgid "Single EPG"
-msgstr "EPG singolo"
+msgstr "EPG Singolo"
 
 msgid "Single satellite"
 msgstr "Satellite singolo"
@@ -9561,11 +9690,8 @@ msgstr "Gestione software"
 msgid "Software manager setup"
 msgstr "Configurazione software manager"
 
-msgid "Software restore"
-msgstr "Ripristino software"
-
 msgid "Software update"
-msgstr "Aggiorna immag."
+msgstr "Aggiorna OBH"
 
 msgid "Software update settings"
 msgstr "Configurazione aggiornamento software"
@@ -9586,13 +9712,19 @@ msgstr ""
 "Spiacenti: a causa di spamming, è stato disabilitato l’invio dei registri degli errori (log).\n"
 "Si prega di inviare il registro tramite il forum www.vuplus-community.net."
 
-msgid "Sorry feeds are down for maintenance, please try again later. If this issue persists please check www.vuplus-community.net"
-msgstr "I feed non sono disponibili per manutenzione: riprova più tardi. Se il problema persiste, consultare www.vuplus-community.net"
+msgid ""
+"Sorry feeds are down for maintenance, please try again later. If this issue persists please check www.vuplus-"
+"community.net"
+msgstr ""
+"I feed non sono disponibili per manutenzione: riprova più tardi. Se il problema persiste, consultare www."
+"vuplus-community.net"
 
-msgid "Sorry feeds seem be in an unstable state, if you wish to use them please enable 'Allow unstable (experimental) updates' in \"Software update settings\"."
+msgid ""
+"Sorry feeds seem be in an unstable state, if you wish to use them please enable 'Allow unstable "
+"(experimental) updates' in \"Software update settings\"."
 msgstr ""
-"Spiacenti: le sorgenti sembra che siano in uno stato sperimentale. Se vuoi usarle comunque, abilita ‘Consenti aggiornamenti sperimentali (instabili)’ nelle impostazioni degli aggiornamenti del "
-"software."
+"Spiacenti: le sorgenti sembra che siano in uno stato sperimentale. Se vuoi usarle comunque, abilita ‘Consenti "
+"aggiornamenti sperimentali (instabili)’ nelle impostazioni degli aggiornamenti del software."
 
 msgid ""
 "Sorry no valid device found.\n"
@@ -9606,10 +9738,12 @@ msgstr ""
 msgid "Sorry the feeds are down for maintenance"
 msgstr "Spiacenti, i feed non sono disponibili per la manutenzione"
 
-msgid "Sorry the feeds seem to be in an unstable state, if you wish to use them please enable 'Allow unstable (experimental) updates' in \"Software update settings\"."
+msgid ""
+"Sorry the feeds seem to be in an unstable state, if you wish to use them please enable 'Allow unstable "
+"(experimental) updates' in \"Software update settings\"."
 msgstr ""
-"Spiacenti: le sorgenti sembra che siano in uno stato sperimentale. Se vuoi usarle comunque, abilita ‘Consenti aggiornamenti sperimentali (instabili)’ nelle impostazioni degli aggiornamenti del "
-"software."
+"Spiacenti: le sorgenti sembra che siano in uno stato sperimentale. Se vuoi usarle comunque, abilita ‘Consenti "
+"aggiornamenti sperimentali (instabili)’ nelle impostazioni degli aggiornamenti del software."
 
 msgid "Sorry your Inadyn config is missing"
 msgstr "Configurazione Inadyn mancante"
@@ -9751,9 +9885,6 @@ msgstr "Standby / riavvio"
 msgid "Standby and Restart"
 msgstr "Standby / Spegni / Riavvia"
 
-msgid "StandbyLED"
-msgstr "LED Standby"
-
 msgid "Start"
 msgstr "Avviare"
 
@@ -10102,20 +10233,17 @@ msgstr "Passare al canale precedente"
 msgid "Switch to the previous channel in history"
 msgstr "Passare al canale precedente nella cronologia"
 
-msgid "Switchable tuner types:"
-msgstr "Tipi di tuner commutabili:"
-
 msgid "Switzerland"
 msgstr "Svizzera"
 
 msgid "Symbol rate"
-msgstr "Symbol rate"
+msgstr "SR (Symbol rate)"
 
 msgid "Symbol rate & FEC"
-msgstr "Symbol rate & FEC"
+msgstr "SR (Symbol rate) & FEC"
 
 msgid "Symbolrate:"
-msgstr "Symbolrate:"
+msgstr "SR (SymbolRate):"
 
 msgid "Sync NTP every (minutes)"
 msgstr "Sincronizzare NTP ogni (minuti)"
@@ -10297,8 +10425,12 @@ msgstr ""
 "Il plugin Cool TV Guide non è installato!\n"
 "Non preoccupatevene e utilizzate la guida predefinita EPG di OBH."
 
-msgid "The DVD standard doesn't support H.264 (HDTV) video streams. Do you want to create a %s %s format data DVD (which will not play in stand-alone DVD players) instead?"
-msgstr "Lo standard DVD non supporta stream video H.264 (HDTV). Creare un DVD in formato dati %s %s? (NON sarà riproducibile su lettori DVD standard!)"
+msgid ""
+"The DVD standard doesn't support H.264 (HDTV) video streams. Do you want to create a %s %s format data DVD "
+"(which will not play in stand-alone DVD players) instead?"
+msgstr ""
+"Lo standard DVD non supporta stream video H.264 (HDTV). Creare un DVD in formato dati %s %s? (NON sarà "
+"riproducibile su lettori DVD standard!)"
 
 msgid ""
 "The DreamPlex plugin is not installed!\n"
@@ -10314,13 +10446,6 @@ msgstr ""
 "Il plugin EPGSearch non è installato!\n"
 "Installarlo."
 
-msgid ""
-"The Filesystem on your Timeshift-Device does not support hardlinks.\n"
-"Make sure it is formatted in EXT2 or EXT3!"
-msgstr ""
-"Il filesystem del tuo dispositivo per il Timeshift non supporta collegamenti fisici.\n"
-"Formattarlo in EXT2 o EXT3!"
-
 msgid ""
 "The IMDb plugin is not installed!\n"
 "Please install it."
@@ -10357,13 +10482,6 @@ msgstr "Backup fallito! Selezionare una destinazione diversa per il backup."
 msgid "The commit log cannot be retrieved at the moment - please try again later."
 msgstr "Il registro di commit non può essere al momento recuperato: riprova più tardi."
 
-msgid ""
-"The commit log cannot be retrieved at the moment - please try again later.\n"
-"%s"
-msgstr ""
-"Il registro di commit non può essere al momento recuperato: riprova più tardi.\n"
-"%s"
-
 msgid "The current update may be unstable"
 msgstr "L’aggiornamento corrente potrebbe essere instabile"
 
@@ -10486,11 +10604,11 @@ msgstr "Non ci sono playlist salvate da caricare."
 msgid "There are no updates available."
 msgstr "Nessun aggiornamento disponibile."
 
-msgid "There has been an error, please try again later. If this issue persists, please check www.vuplus-community.net"
-msgstr "Si è verificato un problema. Provare più tardi e, se il problema persiste, verificare in www.vuplus-community.net"
-
-msgid "There is no [webif] section in oscam.conf"
-msgstr "Nessuna sezione [WebIf] in oscam.conf"
+msgid ""
+"There has been an error, please try again later. If this issue persists, please check www.vuplus-community.net"
+msgstr ""
+"Si è verificato un problema. Provare più tardi e, se il problema persiste, verificare in www.vuplus-community."
+"net"
 
 msgid "There is no signal to lock on !"
 msgstr "Nessun segnale da sbloccare!"
@@ -10508,12 +10626,16 @@ msgstr "Impossibile decodificare stream %s con questo %s %s!"
 msgid "This DVD RW medium is already formatted - reformatting will erase all content on the disc."
 msgstr "Il DVD-RW è già formattato - una nuova formattazione cancellerà tutto il contenuto del disco!"
 
-msgid "This allows you change the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size"
+msgid ""
+"This allows you change the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases "
+"by 1 point size"
 msgstr ""
 "Configurare le dimensioni del carattere relative alla dimensione della skin.\n"
 "+1 aumenta di 1 punto le dimensioni, -1 le diminuisce di 1 punto."
 
-msgid "This allows you to change the font size relative to skin size, so 1 increases by 1 point size, and -1 decreases by 1 point size"
+msgid ""
+"This allows you to change the font size relative to skin size, so 1 increases by 1 point size, and -1 "
+"decreases by 1 point size"
 msgstr ""
 "Configurare le dimensione del carattere relative alla dimensione della skin.\n"
 "+1 aumenta di 1 punto le dimensioni, -1 le diminuisce di 1 punto."
@@ -10525,18 +10647,15 @@ msgid "This field allows you to search an additional symbol rate up to %s."
 msgstr "Questo campo permette di cercare un symbol rate (SR) addizionale fino a %s."
 
 msgid ""
-"This is a multitype tuner. Available options depend on the hardware. Cable and terrestrial cannot be configured at the same time. If you want to use as cable + satellite or terrestrial + "
-"satellite, configure cable/terrestrial first and then save. Re-open and configure again as satellite."
+"This is the order in which DiSEqC commands are sent to the aerial system. The order must correspond exactly "
+"with the order the physical devices are arranged along the signal cable (starting from the receiver end)."
 msgstr ""
-"Questo è un tuner multiplo. Le sue opzioni dipendono dalle sue caratteristiche. Non si possono configurare contemporaneamente segnali via cavo e terrestri. Se volete usare come Cavo+Satellite o "
-"come Terrestre+Satellite, configurate prima Cavo/Terrestre per primo e salvate. Poi riaprite e configurate come satellite."
+"E’ l’ordine in cui vengono inviati i comandi DiSEqC. L’ordine deve corrispondere esattamente a quello dei "
+"dispositivi fisici collegati al ricevitore."
 
 msgid ""
-"This is the order in which DiSEqC commands are sent to the aerial system. The order must correspond exactly with the order the physical devices are arranged along the signal cable (starting "
-"from the receiver end)."
-msgstr "E’ l’ordine in cui vengono inviati i comandi DiSEqC. L’ordine deve corrispondere esattamente a quello dei dispositivi fisici collegati al ricevitore."
-
-msgid "This option allows to reduce the block-noise in the picture. Obviously this is at the cost of the picture's sharpness."
+"This option allows to reduce the block-noise in the picture. Obviously this is at the cost of the picture's "
+"sharpness."
 msgstr "Consente di ridurre lo squadrettamento delle immagini, ovviamente a costo della loro nitidezza."
 
 msgid "This option allows to set the level of dynamic contrast of the picture."
@@ -10576,44 +10695,67 @@ msgstr "Consente di esaltare le tonalità del verde nell'immagine."
 msgid "This option allows you to bypass HDMI EDID check"
 msgstr "Consente di ignorare il controllo HDMI EDID"
 
-msgid "This option allows you to change the Colordepth for UHD"
-msgstr "Consente di modificare la profondità del colore per UHD"
-
-msgid "This option allows you to change the Colorimetry for HDR"
-msgstr "Questa opzione ti consente di cambiare Colorimetria per HDR"
-
-msgid "This option allows you to change the Colorspace from Auto to RGB"
-msgstr "Consente di modificare lo spazio colore da RGB a Auto"
-
 msgid "This option allows you to change the virtual loudspeaker position."
 msgstr "Questa opzione ti consente di cambiare la posizione dell'altoparlante virtuale."
 
 msgid "This option allows you to choose from the two channel lists that are available."
 msgstr "Consente di scegliere tra i due elenchi canali se disponibili."
 
-msgid "This option allows you to choose how to display 1080p 24Hz on your TV. (as not all TV's support these resolutions)"
-msgstr "Consente di scegliere come visualizzare i contenuti 1080p 24Hz sulla tua TV (non tutte le TV supportano questa risoluzione)."
+msgid ""
+"This option allows you to choose how to display 1080p 24Hz on your TV. (as not all TV's support these "
+"resolutions)"
+msgstr ""
+"Consente di scegliere come visualizzare i contenuti 1080p 24Hz sulla tua TV (non tutte le TV supportano "
+"questa risoluzione)."
 
-msgid "This option allows you to choose how to display 1080p 25Hz on your TV. (as not all TV's support these resolutions)"
-msgstr "Consente di scegliere come visualizzare i contenuti 1080p 25Hz sulla tua TV (non tutte le TV supportano questa risoluzione)."
+msgid ""
+"This option allows you to choose how to display 1080p 25Hz on your TV. (as not all TV's support these "
+"resolutions)"
+msgstr ""
+"Consente di scegliere come visualizzare i contenuti 1080p 25Hz sulla tua TV (non tutte le TV supportano "
+"questa risoluzione)."
 
-msgid "This option allows you to choose how to display 1080p 30Hz on your TV. (as not all TV's support these resolutions)"
-msgstr "Consente di scegliere come visualizzare i contenuti 1080p 30Hz sulla tua TV (non tutte le TV supportano questa risoluzione)."
+msgid ""
+"This option allows you to choose how to display 1080p 30Hz on your TV. (as not all TV's support these "
+"resolutions)"
+msgstr ""
+"Consente di scegliere come visualizzare i contenuti 1080p 30Hz sulla tua TV (non tutte le TV supportano "
+"questa risoluzione)."
 
-msgid "This option allows you to choose how to display 2160p 24Hz on your TV. (as not all TV's support these resolutions)"
-msgstr "Consente di scegliere come visualizzare i contenuti 2160p 24Hz sulla tua TV (non tutte le TV supportano questa risoluzione)."
+msgid ""
+"This option allows you to choose how to display 2160p 24Hz on your TV. (as not all TV's support these "
+"resolutions)"
+msgstr ""
+"Consente di scegliere come visualizzare i contenuti 2160p 24Hz sulla tua TV (non tutte le TV supportano "
+"questa risoluzione)."
 
-msgid "This option allows you to choose how to display 2160p 25Hz on your TV. (as not all TV's support these resolutions)"
-msgstr "Consente di scegliere come visualizzare i contenuti 2160p 25Hz sulla tua TV (non tutte le TV supportano questa risoluzione)."
+msgid ""
+"This option allows you to choose how to display 2160p 25Hz on your TV. (as not all TV's support these "
+"resolutions)"
+msgstr ""
+"Consente di scegliere come visualizzare i contenuti 2160p 25Hz sulla tua TV (non tutte le TV supportano "
+"questa risoluzione)."
 
-msgid "This option allows you to choose how to display 2160p 30Hz on your TV. (as not all TV's support these resolutions)"
-msgstr "Consente di scegliere come visualizzare i contenuti 2160p 30Hz sulla tua TV (non tutte le TV supportano questa risoluzione)."
+msgid ""
+"This option allows you to choose how to display 2160p 30Hz on your TV. (as not all TV's support these "
+"resolutions)"
+msgstr ""
+"Consente di scegliere come visualizzare i contenuti 2160p 30Hz sulla tua TV (non tutte le TV supportano "
+"questa risoluzione)."
 
-msgid "This option allows you to choose how to display 720p 24Hz on your TV. (as not all TV's support these resolutions)"
-msgstr "Consente di scegliere come visualizzare i contenuti 720p 24Hz sulla tua TV (non tutte le TV supportano questa risoluzione)."
+msgid ""
+"This option allows you to choose how to display 720p 24Hz on your TV. (as not all TV's support these "
+"resolutions)"
+msgstr ""
+"Consente di scegliere come visualizzare i contenuti 720p 24Hz sulla tua TV (non tutte le TV supportano questa "
+"risoluzione)."
 
-msgid "This option allows you to choose how to display SD progressive 24Hz on your TV. (as not all TV's support these resolutions)"
-msgstr "Consente di scegliere come visualizzare SD 24Hz progressivo sul televisore (non tutte le TV supportano questa risoluzione)."
+msgid ""
+"This option allows you to choose how to display SD progressive 24Hz on your TV. (as not all TV's support "
+"these resolutions)"
+msgstr ""
+"Consente di scegliere come visualizzare SD 24Hz progressivo sul televisore (non tutte le TV supportano questa "
+"risoluzione)."
 
 msgid "This option allows you to choose how to display elapsed time. As + or -"
 msgstr "Consente di scegliere se visualizzare il tempo trascorso come + o -"
@@ -10637,7 +10779,8 @@ msgstr ""
 "rimanente/trascorso per la riproduzione multimediale."
 
 msgid ""
-"This option allows you to choose what the first button press jumps to in channel list screen, (so pressing '2' jumps to 'A' or '2' first), when 'Quick Actions' preset actions are perfomed. "
+"This option allows you to choose what the first button press jumps to in channel list screen, (so pressing "
+"'2' jumps to 'A' or '2' first), when 'Quick Actions' preset actions are perfomed. "
 msgstr ""
 "Scegliere il comportamento tasto alla pressione 'passa a elenco dei canali'\n"
 "(premendo '2' salti ai canali che iniziano per 'A' o per '2')."
@@ -10705,10 +10848,13 @@ msgstr "Consente di mostrare l'opzione nelle estensioni"
 msgid "This option moves the PVR status from the separate window into the Movie Player infobar."
 msgstr "Consente di spostare lo stato PVR dalla finestra separata nella Infobar del Movie Player."
 
-msgid "This option set the level of surpression of mosquito noise (Mosquito Noise is random aliasing as a result of strong compression). Obviously this goes at the cost of picture details."
+msgid ""
+"This option set the level of surpression of mosquito noise (Mosquito Noise is random aliasing as a result of "
+"strong compression). Obviously this goes at the cost of picture details."
 msgstr ""
-"Consente di impostare il livello di soppressione del c.d. Rumore di zanzara. Esso è un filtro di riduzione dei disturbi video dovuti a eccessiva compressione delle immagini. Ovviamente, ciò "
-"costa una riduzione del loro dettaglio."
+"Consente di impostare il livello di soppressione del c.d. Rumore di zanzara. Esso è un filtro di riduzione "
+"dei disturbi video dovuti a eccessiva compressione delle immagini. Ovviamente, ciò costa una riduzione del "
+"loro dettaglio."
 
 msgid "This option sets the picture brightness."
 msgstr "Consente di impostare la luminosità dell'immagine."
@@ -10731,8 +10877,12 @@ msgstr "Consente di impostare la saturazione dell'immagine."
 msgid "This option sets the scaler sharpness, used when stretching picture from 4:3 to 16:9."
 msgstr "Consente di impostare la nitidezza dello scaler, usato quando si estende immagine da 4:3 a 16:9"
 
-msgid "This option sets the surpression of false digital contours, that are the result of a limited number of discrete values."
-msgstr "Consente la soppressione di contorni digitali falsi, che sono il risultato di un numero limitato di valori distinti."
+msgid ""
+"This option sets the surpression of false digital contours, that are the result of a limited number of "
+"discrete values."
+msgstr ""
+"Consente la soppressione di contorni digitali falsi, che sono il risultato di un numero limitato di valori "
+"distinti."
 
 msgid "This option sets up the picture sharpness, used when the picture is being upscaled."
 msgstr "Consente di impostare la nitidezza dell'immmagine quando questa viene “upscalata”."
@@ -10749,19 +10899,23 @@ msgstr "Questo plugin verrà installato."
 msgid "This plugin will be removed."
 msgstr "Questo plugin verrà rimosso"
 
-msgid "This setting allows the tuner configuration to be a duplication of how another tuner is already configured."
+msgid ""
+"This setting allows the tuner configuration to be a duplication of how another tuner is already configured."
 msgstr "Quest’impostazione permette a un tuner di essere configurato come duplicato di un altro."
 
 msgid ""
-"This setting depends on your cable provider and location. If you don't know the correct setting refer to the menu in the official cable receiver, or get it from your cable provider, or seek "
-"help via internet forum."
-msgstr "Questa impostazione dipende dal vostro gestore via cavo o dalla posizione. Se non conoscete i settaggi corretti, fate riferimento al vostro gestore o aiutatevi tcercando su Internet."
+"This setting depends on your cable provider and location. If you don't know the correct setting refer to the "
+"menu in the official cable receiver, or get it from your cable provider, or seek help via internet forum."
+msgstr ""
+"Questa impostazione dipende dal vostro gestore via cavo o dalla posizione. Se non conoscete i settaggi "
+"corretti, fate riferimento al vostro gestore o aiutatevi tcercando su Internet."
 
 msgid ""
-"This setting is for special setups only. It gives this LNB higher priority over other LNBs with lower values. The free LNB with the highest priority will be the first LNB selected for tuning "
-"services."
+"This setting is for special setups only. It gives this LNB higher priority over other LNBs with lower values. "
+"The free LNB with the highest priority will be the first LNB selected for tuning services."
 msgstr ""
-"Quest’impostazione è solo per settaggi particolari. Dà a questo LNB una maggiore priorità rispetto agli altri. Un LNB libero con la priorità più alta sarà il primo scelto per sintonizzarsi."
+"Quest’impostazione è solo per settaggi particolari. Dà a questo LNB una maggiore priorità rispetto agli "
+"altri. Un LNB libero con la priorità più alta sarà il primo scelto per sintonizzarsi."
 
 msgid ""
 "This start wizard will guide you through the basic setup of your %s %s.\n"
@@ -10771,10 +10925,12 @@ msgstr ""
 "Premere OK sul telecomando per il passo successivo."
 
 msgid ""
-"This will (re-)calculate all positions of your rotor and may remove previously memorised positions and fine-tuning!\n"
+"This will (re-)calculate all positions of your rotor and may remove previously memorised positions and fine-"
+"tuning!\n"
 "Are you sure?"
 msgstr ""
-"Questo ricalcolerà tutte le posizioni del motore e potrà cancellare posizioni precedentemente memorizzate e di fine sintonizzazione!\n"
+"Questo ricalcolerà tutte le posizioni del motore e potrà cancellare posizioni precedentemente memorizzate e "
+"di fine sintonizzazione!\n"
 "Procedere?"
 
 msgid "This wizard will help you to format Usb mass storage devices for Linux.\n"
@@ -10884,9 +11040,6 @@ msgstr "Percorso timeshift"
 msgid "Timeshift not possible!"
 msgstr "Timeshift non possibile!"
 
-msgid "Timeshift on a stream is not supported!"
-msgstr "Il timeshift per un flusso non è supportato!"
-
 msgid "Timeshift save failed!"
 msgstr "Salvataggio timeshift non riuscito!"
 
@@ -10905,12 +11058,6 @@ msgstr "Il timeshift viene salvato alla fine dell'evento!"
 msgid "Timeshift-save action on zap"
 msgstr "Azione salvataggio timeshift su zap"
 
-msgid "Timezone"
-msgstr "Fuso orario"
-
-msgid "Timezone area"
-msgstr "Area del fuso orario"
-
 msgid "Timor-Leste"
 msgstr "Timor-Est"
 
@@ -11076,9 +11223,6 @@ msgstr "Tuner"
 msgid "Tuner :"
 msgstr "Tuner:"
 
-msgid "Tuners & Scanning"
-msgstr "Tuner & Ricerca canali"
-
 msgid "Tuner is not supported"
 msgstr "Tuner non supportato"
 
@@ -11109,6 +11253,9 @@ msgstr "Stato tuner:"
 msgid "Tuner type"
 msgstr "Tipo tuner"
 
+msgid "Tuners & Scanning"
+msgstr "Tuner & Ricerca canali"
+
 msgid "Tuning info: live values"
 msgstr "Informazioni di sintonia: valori in tempo reale"
 
@@ -11169,9 +11316,12 @@ msgstr "USALS"
 msgid "USALS Calibration"
 msgstr "Calibrazione USALS"
 
-msgid "USALS automatically moves a motorised dish to the correct satellite based on the coordinates entered by the user. Without USALS each satellite will need to be setup and saved individually."
+msgid ""
+"USALS automatically moves a motorised dish to the correct satellite based on the coordinates entered by the "
+"user. Without USALS each satellite will need to be setup and saved individually."
 msgstr ""
-"USALS muove automaticamente un disco motorizzato verso il satellite corretto basandosi sulle coordinate inserite dall’utente. Senza USALS ogni satellite dovrà essere impostato singolarmente."
+"USALS muove automaticamente un disco motorizzato verso il satellite corretto basandosi sulle coordinate "
+"inserite dall’utente. Senza USALS ogni satellite dovrà essere impostato singolarmente."
 
 msgid ""
 "USB = Do you want to make a USB backup ?\n"
@@ -11237,7 +11387,7 @@ msgid "United States of America"
 msgstr "Stati Uniti d’America"
 
 msgid "Universal LNB"
-msgstr "LNB Universale"
+msgstr "LNB Universal "
 
 msgid "Unknown"
 msgstr "Sconosciuto"
@@ -11248,9 +11398,6 @@ msgstr "Errore sconosciuto"
 msgid "Unmark service as a dedicated 3D service"
 msgstr "Rimuovere il tag come canale dedicato 3D"
 
-msgid "Unmount"
-msgstr "Smontaggio"
-
 msgid "Unsupported"
 msgstr "Non supportato"
 
@@ -11260,9 +11407,6 @@ msgstr "Su"
 msgid "Update"
 msgstr "Aggiornamenti"
 
-msgid "Update Cache"
-msgstr "Cache di aggiornamento"
-
 msgid "Update channel list only"
 msgstr "Aggiornamento solo elenco canali"
 
@@ -11391,23 +11535,25 @@ msgstr "Usare la posizione dei sottotitoli DVB originale"
 msgid "Use original teletext position"
 msgstr "Utilizzare la posizione originale televideo"
 
-msgid "Use picon_lcd directory for picons on color LCD"
-msgstr "Usare cartella picon_lcd per picon LCD a colori"
-
 msgid "Use power measurement"
 msgstr "Utilizzare misurazione di potenza"
 
-msgid "Use separate Picon pack for Front Display *"
-msgstr "Usare pacchetto Picon separato per LCD"
-
 msgid "Use slim screen"
 msgstr "Utilizzare schermo piatto"
 
-msgid "Use the LEFT/RIGHT buttons on your remote to adjust the height of the user interface. LEFT button decreases the size, RIGHT increases the size."
-msgstr "Usa i pulsanti SINISTRA/DESTRA per regolare l’altezza dell’interfaccia. Sinistra per DIMINUIRE, destra per AUMENTARE."
+msgid ""
+"Use the LEFT/RIGHT buttons on your remote to adjust the height of the user interface. LEFT button decreases "
+"the size, RIGHT increases the size."
+msgstr ""
+"Usa i pulsanti SINISTRA/DESTRA per regolare l’altezza dell’interfaccia. Sinistra per DIMINUIRE, destra per "
+"AUMENTARE."
 
-msgid "Use the LEFT/RIGHT buttons on your remote to adjust the width of the user interface. LEFT button decreases the size, RIGHT increases the size."
-msgstr "Usa i pulsanti SINISTRA/DESTRA per regolare l’ampiezza dell’interfaccia. Sinistra per DIMINUIRE, destra per AUMENTARE."
+msgid ""
+"Use the LEFT/RIGHT buttons on your remote to adjust the width of the user interface. LEFT button decreases "
+"the size, RIGHT increases the size."
+msgstr ""
+"Usa i pulsanti SINISTRA/DESTRA per regolare l’ampiezza dell’interfaccia. Sinistra per DIMINUIRE, destra per "
+"AUMENTARE."
 
 msgid "Use the LEFT/RIGHT buttons on your remote to move the user interface left/right."
 msgstr "Usa i pulsanti SINISTRA/DESTRA per spostare l’interfaccia a sinistra o destra"
@@ -11476,9 +11622,6 @@ msgstr "Definito dall'utente"
 msgid "User defined transponder"
 msgstr "Transponder predefinito utente"
 
-msgid "User interface"
-msgstr "Interfaccia utente"
-
 msgid "User interface settings"
 msgstr "Configurazione Interfaccia Utente"
 
@@ -11506,7 +11649,9 @@ msgstr "Vecchio profilo in uso: "
 msgid "Using tuner %s"
 msgstr "Tuner %s in uso"
 
-msgid "Usually when the subtitle language is the same as the audio language, the subtitles will not be used. Enable this option to allow these subtitles to be used."
+msgid ""
+"Usually when the subtitle language is the same as the audio language, the subtitles will not be used. Enable "
+"this option to allow these subtitles to be used."
 msgstr ""
 "Di norma se lingua audio e sottotitoli coincidono, i sottotitoli non vengono mostrati.\n"
 "Abilitare questa opzione per mostrarli."
@@ -11591,12 +11736,12 @@ msgstr "Modalità"
 msgid "Video: %s fps"
 msgstr "Video: %s fps"
 
+msgid "Videocodec, size & format"
+msgstr "Codec video, dimensioni e formato"
+
 msgid "Videosize: "
 msgstr "Risoluzione A/V: "
 
-msgid "Videocodec, size & format"
-msgstr "Videocodec, dimensioni e formato"
-
 msgid "View"
 msgstr "Visualizza"
 
@@ -11708,9 +11853,6 @@ msgstr "WPA2"
 msgid "WSS on 4:3"
 msgstr "WSS su 4:3"
 
-msgid "Wait for ci..."
-msgstr "Attendere per CI..."
-
 msgid "Wait please connection in progress ..."
 msgstr "Attendere! Connessione in corso..."
 
@@ -11726,12 +11868,6 @@ msgstr "Attendere! Download in corso..."
 msgid "Waiting"
 msgstr "In attesa"
 
-msgid "Waiting for mount"
-msgstr "Attendere il mount"
-
-msgid "Waiting for partition"
-msgstr "Attendere il partizionamento"
-
 msgid "Wake Up"
 msgstr "Riattivare "
 
@@ -11792,18 +11928,21 @@ msgstr "Posizione ponderata"
 msgid ""
 "Welcome to OpenBlackHole!\n"
 "\n"
-"NOTE: This section of the wizard is intended for people who cannot disable overscan on their television / display.  Please first try to disable overscan before using this feature.\n"
+"NOTE: This section of the wizard is intended for people who cannot disable overscan on their television / "
+"display.  Please first try to disable overscan before using this feature.\n"
 "\n"
-"USAGE: If you continue adjust the screen size and position settings so that the shaded user interface layer *just* covers the test pattern in the background.\n"
+"USAGE: If you continue adjust the screen size and position settings so that the shaded user interface layer "
+"*just* covers the test pattern in the background.\n"
 "\n"
 "Select Yes to change these settings or No to skip this step."
 msgstr ""
 "Benvenuto in OpenBlackHole! \n"
 "\n"
-"NOTA: Questa funzionalità è destinata a persone che non possono disattivare l’overscan sulla loro TV/monitor. In ogni caso prova a disattivare l’overscan prima di utilizzare questa "
-"caratteristica.\n"
+"NOTA: Questa funzionalità è destinata a persone che non possono disattivare l’overscan sulla loro TV/monitor. "
+"In ogni caso prova a disattivare l’overscan prima di utilizzare questa caratteristica.\n"
 "\n"
-"UTILIZZO: Regola le dimensioni dello schermo e le impostazioni di posizione in modo che la zona di interfaccia utente ombreggiata copra solo il modello di test in secondo piano\n"
+"UTILIZZO: Regola le dimensioni dello schermo e le impostazioni di posizione in modo che la zona di "
+"interfaccia utente ombreggiata copra solo il modello di test in secondo piano\n"
 "\n"
 "Selezionare Sì per continuare oppure No per uscire."
 
@@ -11821,22 +11960,25 @@ msgstr ""
 "Successivamente spostarsi alla fine, premere OK, selezionare [Fine taglio]. E' tutto."
 
 msgid ""
-"Welcome to the image upgrade wizard. The wizard will assist you in upgrading the firmware of your %s %s by providing a backup facility for your current settings and a short explanation of how "
-"to upgrade your firmware."
+"Welcome to the image upgrade wizard. The wizard will assist you in upgrading the firmware of your %s %s by "
+"providing a backup facility for your current settings and a short explanation of how to upgrade your firmware."
 msgstr ""
-"Benvenuto nella guida per l'aggiornamento dell'Immagine. Questa procedura prevede una guida sull'aggiornamento del firmware del %s %s attraverso un backup assistito della configurazione e "
-"fornendo informazioni sintetiche."
+"Benvenuto nella guida per l'aggiornamento dell'Immagine. Questa procedura prevede una guida "
+"sull'aggiornamento del firmware del %s %s attraverso un backup assistito della configurazione e fornendo "
+"informazioni sintetiche."
 
 msgid ""
 "Welcome.\n"
 "\n"
-"If you want to connect your %s %s to the Internet, this wizard will guide you through the basic network setup of your %s %s.\n"
+"If you want to connect your %s %s to the Internet, this wizard will guide you through the basic network setup "
+"of your %s %s.\n"
 "\n"
 "Press OK to start configuring your network"
 msgstr ""
 "Benvenuto.\n"
 "\n"
-"Questa configurazione guidata fornirà supporto di base per le impostazioni di rete del %s %s e la connessione a Internet.\n"
+"Questa configurazione guidata fornirà supporto di base per le impostazioni di rete del %s %s e la connessione "
+"a Internet.\n"
 "\n"
 "Premere OK per iniziare la configurazione della rete."
 
@@ -11851,9 +11993,6 @@ msgstr ""
 "La configurazione guidata fornirà supporto di base nelle impostazioni del %s %s.\n"
 "Premere OK sul telecomando per il passo successivo."
 
-msgid "Welcome..."
-msgstr "Benvenuto…"
-
 msgid "West"
 msgstr "Ovest"
 
@@ -11861,8 +12000,11 @@ msgid "West limit set"
 msgstr "Impostazione limite ovest"
 
 msgid ""
-"What action is required on completion of the timer? 'Auto' lets the box return to the state it had when the timer started. 'Do nothing', 'Go to standby' and 'Go to deep standby' do ecaxtly that."
-msgstr "Quale azione è richiesta al completamento di un timer? ‘AUTO’ fa tornare il box allo stato precedente. ‘Non fare nulla’, ‘Vai in standby’ e ‘Vai in DeepStandby’ fanno esattamente ciò."
+"What action is required on completion of the timer? 'Auto' lets the box return to the state it had when the "
+"timer started. 'Do nothing', 'Go to standby' and 'Go to deep standby' do ecaxtly that."
+msgstr ""
+"Quale azione è richiesta al completamento di un timer? ‘AUTO’ fa tornare il box allo stato precedente. ‘Non "
+"fare nulla’, ‘Vai in standby’ e ‘Vai in DeepStandby’ fanno esattamente ciò."
 
 msgid "What date of month ?"
 msgstr "Quale data del mese ?"
@@ -11874,22 +12016,20 @@ msgid "What do you want to scan?"
 msgstr "Cosa desideri cercare?"
 
 msgid ""
-"When enabled enigma2 will load unlinked userbouquets. This means that userbouquets that are available, but not included in the bouquets.tv or bouquets.radio files, will still be loaded. This "
-"allows you for example to keep your own user bouquet while installed settings are upgraded"
+"When enabled enigma2 will load unlinked userbouquets. This means that userbouquets that are available, but "
+"not included in the bouquets.tv or bouquets.radio files, will still be loaded. This allows you for example to "
+"keep your own user bouquet while installed settings are upgraded"
 msgstr ""
 "Il sistema caricherà anche i bouquet orfani. Consente ai bouquet-utente disponibili\n"
 "(ma non inclusi in bouquet.tv/radio) di essere caricati comunque.\n"
 "Così vengono mantenuti i propri bouquet durante l'aggiornamento dei canali"
 
-msgid "When enabled the LNB power will not be switched off in standby"
-msgstr "Se abilitato, non verrà tolta l’alimentazione all’LNB in Standby"
-
-msgid "When enabled the LNB toneburst will be forced"
-msgstr "Se abilitata, verrà forzato il toneburst dell’LNB"
-
 msgid "When enabled the online checker will also check for experimental versions"
 msgstr "Abilitato: il controllo online verificherà la presenza di versioni sperimentali"
 
+msgid "When enabled the set top box is able to wakeup on LAN"
+msgstr "Se abilitato, il box è in grado di riattivarsi dalla LAN"
+
 msgid "When enabled, AIT data will be included in http streams. This allows a client receiver to use HbbTV."
 msgstr ""
 "Abilitato: i dati AIT saranno inclusi nei flussi HTTP.\n"
@@ -11909,15 +12049,15 @@ msgstr "Abilitato: visualizza un messaggio a video all'avvio di una registrazion
 msgid "When enabled, a recording is allowed to interrupt live TV, when there are no free tuners."
 msgstr "Abilitato: la registrazione permette di interrompere la visione della TV se non ci sono tuner liberi."
 
-msgid "When enabled, a warning will be displayed and the user will get an option to stop or to continue the timeshift."
+msgid ""
+"When enabled, a warning will be displayed and the user will get an option to stop or to continue the "
+"timeshift."
 msgstr "Abilitato: visualizza un messaggio e l'utente potrà interrompere o proseguire il timeshift."
 
-msgid "When enabled, a warning will be displayed that timeshift is not supported in an IP stream.."
-msgstr "Abilitato: visualizza un messaggio di avviso “Timeshift non supportato” in un flusso IP..."
-
 msgid ""
-"When enabled, always descramble receiving http streams. This takes up more resources (descrambling demuxers), only enable if necessary. Individual streams are always descrambled if 0x100 is "
-"added to the service type, regardless of this setting. Default off."
+"When enabled, always descramble receiving http streams. This takes up more resources (descrambling demuxers), "
+"only enable if necessary. Individual streams are always descrambled if 0x100 is added to the service type, "
+"regardless of this setting. Default off."
 msgstr ""
 "\"Abilitato: decodifica i flussi HTTP. Questo richiede più risorse (demuxer descrambling).\n"
 "Attivare solo se necessario. I flussi individuali sono sempre decodificati se viene aggiunto 0x100\n"
@@ -11941,8 +12081,10 @@ msgstr "Abilitato: le registrazioni eliminate vengono spostate nel cestino e non
 msgid "When enabled, external subtitles will always be turned on for movie playback."
 msgstr "Abilitato: la riproduzione di filmati si avvia sempre con i sottotitoli esterni."
 
-msgid "When enabled, graphical DVB subtitles are preferred over teletext subtitles, when both types are available."
-msgstr "Abilitato: preferenza ai sottotitoli DVB grafici rispetto ai sottotitoli televideo se entrambi disponibili."
+msgid ""
+"When enabled, graphical DVB subtitles are preferred over teletext subtitles, when both types are available."
+msgstr ""
+"Abilitato: preferenza ai sottotitoli DVB grafici rispetto ai sottotitoli televideo se entrambi disponibili."
 
 msgid "When enabled, graphical DVB subtitles will be displayed at their original position."
 msgstr "Se abilitato i sottotitoli DVB grafici verranno visualizzati nella loro posizione originale."
@@ -11950,7 +12092,9 @@ msgstr "Se abilitato i sottotitoli DVB grafici verranno visualizzati nella loro
 msgid "When enabled, graphical DVB subtitles will be displayed in yellow, instead of the original color."
 msgstr "Abilitato: i sottotitoli DVB grafici verranno visualizzati in giallo invece del colore originale"
 
-msgid "When enabled, http streams are descrambled on the server side. The (remote) client receiver does not have to do descrambling. Default on."
+msgid ""
+"When enabled, http streams are descrambled on the server side. The (remote) client receiver does not have to "
+"do descrambling. Default on."
 msgstr ""
 "Abilitato: la decodifica flussi HTTP avviene sul lato server.\n"
 "Il client remoto non dovrà effettuare la decodifica. Predefinito su SÌ"
@@ -11958,14 +12102,24 @@ msgstr ""
 msgid "When enabled, it is possible to leave the Movie Player with exit."
 msgstr "Abilitato: è possibile uscire da Movie Player con EXIT."
 
-msgid "When enabled, measure power consumption to detect when the rotor stops turning (when supported by the tuner)."
-msgstr "Abilitato: misura il consumo energetico per rilevare quando il rotore smette di girare (se supportato dal Tuner)."
+msgid ""
+"When enabled, measure power consumption to detect when the rotor stops turning (when supported by the tuner)."
+msgstr ""
+"Abilitato: misura il consumo energetico per rilevare quando il rotore smette di girare (se supportato dal "
+"Tuner)."
 
 msgid "When enabled, network trash cans are probed for cleaning."
 msgstr "Abilitato: il cestino di rete sarà controllato per procedere alla pulizia."
 
-msgid "When enabled, pressing '0' will zap you to the first channel in your first bouquet and delete your zap-history."
-msgstr "Abilitato: premendo '0‘ si va al primo canale del primo bouquet e si cancella la cronologia."
+msgid "When enabled, number markers will be hidden."
+msgstr "Se attivata abilita la scomparsa degli indicatori numerici."
+
+msgid ""
+"When enabled, pressing '0' will zap you to the first channel in your first bouquet and delete your zap-"
+"history."
+msgstr ""
+"Abilitato: premendo '0‘ porta al primo canale del primo bouquet e cancella la cronologia.\n"
+"Disabilitato: IL TASTO 0 COMMUTA FRA L'ULTIMO E IL PENULTIMO CANALE UTILIZZATO."
 
 msgid "When enabled, reformat subtitles to match the width of the screen."
 msgstr "Abilitato: adatta la larghezza dei sottotitoli a quella dello schermo."
@@ -11976,7 +12130,9 @@ msgstr "Abilitato: visualizza il numero del canale nella selezione canali."
 msgid "When enabled, subtitles for the hearing impaired can be used."
 msgstr "Abilitato: è possibile utilizzare i sottotitoli per i non udenti."
 
-msgid "When enabled, subtitles for the hearing impaired will be preferred over normal subtitles, when both types are available."
+msgid ""
+"When enabled, subtitles for the hearing impaired will be preferred over normal subtitles, when both types are "
+"available."
 msgstr ""
 "Abilitato: preferenza ai sottotitoli per non udenti rispetto ai sottotitoli normali\n"
 "qualora siano entrambi disponibili."
@@ -11993,7 +12149,9 @@ msgstr "Abilitato: La funzione PiP può essere chiusa con il tasto EXIT."
 msgid "When enabled, the VCR scart option will be shown in the main menu"
 msgstr "Abilitato: la opzione VCR da SCART verrà visualizzata nel menù principale"
 
-msgid "When enabled, the length of each recording will be shown in the movielist (this might cause some additional loading time)."
+msgid ""
+"When enabled, the length of each recording will be shown in the movielist (this might cause some additional "
+"loading time)."
 msgstr ""
 "Abilitato: la lunghezza di ogni registrazione verrà visualizzata nell'elenco registrazioni\n"
 "(questo potrebbe aumentare il tempo di ricarica)."
@@ -12038,7 +12196,9 @@ msgid "When set the PIG will return to live after a movie has stopped playing."
 msgstr "Se impostato, la PiG tornerà a funzionare dopo l'arresto d'una riproduzione."
 
 msgid "When set, each directory will show the previous state used. When off, the default values will be shown."
-msgstr "Se impostato, ogni cartella apparirà nell’ultimo stato usato. Altrimenti, saranno mostrati i valori di default."
+msgstr ""
+"Se impostato, ogni cartella apparirà nell’ultimo stato usato. Altrimenti, saranno mostrati i valori di "
+"default."
 
 msgid "When the content has an aspect ratio of 16:9, choose whether to scale/stretch the picture."
 msgstr "Se il contenuto ha una proporzione pari a 16:9, scegliere se scalare/ampliare l'immagine."
@@ -12046,8 +12206,12 @@ msgstr "Se il contenuto ha una proporzione pari a 16:9, scegliere se scalare/amp
 msgid "When the content has an aspect ratio of 4:3, choose whether to scale/stretch the picture."
 msgstr "Se il contenuto ha una proporzione pari a 4:3 scegliere se scalare/ampliare l'immagine."
 
-msgid "When tuned to a service the system will normally scan the transponder for any changes and save them. Only set to 'yes' if you're absolutely sure of what you're doing."
-msgstr "Abilitato: se si è sintonizzati su un canale il sistema scansiona il transponder per cercare eventuali modifiche e le salva. Impostare su 'Sì' solo se siete assolutamente sicuri."
+msgid ""
+"When tuned to a service the system will normally scan the transponder for any changes and save them. Only set "
+"to 'yes' if you're absolutely sure of what you're doing."
+msgstr ""
+"Abilitato: se si è sintonizzati su un canale il sistema scansiona il transponder per cercare eventuali "
+"modifiche e le salva. Impostare su 'Sì' solo se siete assolutamente sicuri."
 
 msgid ""
 "When you perform a factory reset, you will lose ALL of your configuration data\n"
@@ -12101,7 +12265,9 @@ msgstr "Stato rete wireless"
 msgid "With popup"
 msgstr "Con popup"
 
-msgid "With this option set to 'yes' the channel list will always show you the list of bouquets. If set to 'no' the current bouquet will be opened."
+msgid ""
+"With this option set to 'yes' the channel list will always show you the list of bouquets. If set to 'no' the "
+"current bouquet will be opened."
 msgstr ""
 "Se abilitato, verrà sempre visualizzato l’elenco dei bouquet invece che\n"
 "la lista canali del bouquet corrente.\n"
@@ -12264,14 +12430,15 @@ msgstr "Impossibile rimuovere!"
 msgid "You didn't select a channel to record from."
 msgstr "Non è stato selezionato alcun canale da registrare."
 
-msgid "You have already sent this log, are you sure you want to resend it?\n"
-msgstr "Hai già inviato questo registro errori (log): vuoi reinviarlo?\n"
-
 msgid "You have chosen to backup your settings. Please press OK to start the backup now."
 msgstr "Hai scelto di effettuare un backup delle configurazioni. Premere OK per iniziare ora."
 
-msgid "You have chosen to restore your settings. Enigma2 will restart after restore. Please press OK to start the restore now."
-msgstr "Si è scelto di ripristinare le configurazioni. Il sistema (GUI) verrà riavviato dopo il ripristino. Premere OK per iniziare ora."
+msgid ""
+"You have chosen to restore your settings. Enigma2 will restart after restore. Please press OK to start the "
+"restore now."
+msgstr ""
+"Si è scelto di ripristinare le configurazioni. Il sistema (GUI) verrà riavviato dopo il ripristino. Premere "
+"OK per iniziare ora."
 
 msgid ""
 "You have chosen to save the current timeshift event, but the event has not yet finished\n"
@@ -12283,13 +12450,6 @@ msgstr ""
 msgid "You have not selected any logs to delete."
 msgstr "Hai scelto di non eliminare il log."
 
-msgid ""
-"You have not setup your user info in the setup screen\n"
-"Press MENU, enter your info, and then try again"
-msgstr ""
-"Non hai impostato le credenziali nella schermata impostazioni\n"
-"Premere MENU, immettere le informazioni e riprovare."
-
 msgid "You have to Activate Inadyn before to start"
 msgstr "Attivare Inadyn prima di avviarlo"
 
@@ -12303,11 +12463,15 @@ msgid "You must switch to the service %s (%s - '%s')!\n"
 msgstr "È necessario passare al canale %s (%s - '%s')!\n"
 
 msgid ""
-"You need a PC connected to your %s %s. If you need further instructions, please visit the website http://www.dm7025.de.\n"
-"Your %s %s will now be halted. After you have performed the update instructions from the website, your new firmware will ask you to restore your settings."
+"You need a PC connected to your %s %s. If you need further instructions, please visit the website http://www."
+"dm7025.de.\n"
+"Your %s %s will now be halted. After you have performed the update instructions from the website, your new "
+"firmware will ask you to restore your settings."
 msgstr ""
-"È necessario che un PC sia connesso al %s %s. Se occorrono maggiori istruzioni, visitare il sito http://www.dm7025.de.\n"
-"Il %s %s sarà arrestato, e al termine delle operazioni il nuovo firmware chiederà di ripristinare le configurazioni."
+"È necessario che un PC sia connesso al %s %s. Se occorrono maggiori istruzioni, visitare il sito http://www."
+"dm7025.de.\n"
+"Il %s %s sarà arrestato, e al termine delle operazioni il nuovo firmware chiederà di ripristinare le "
+"configurazioni."
 
 msgid "You seem to be in timeshft, the service will briefly stop as timeshift stops."
 msgstr "Il timeshift sembra essere attivo: il canale si fermerà per un momento all'arresto del timeshift."
@@ -12318,20 +12482,39 @@ msgstr "Il timeshift sembra essere attivo!"
 msgid "You seem to be in timeshift, Do you want to leave timeshift ?"
 msgstr "Il timeshift sembra essere attivo: interromperlo?"
 
+msgid "You seem to be in timeshift, Do you want to leave timeshift? Streams & IPTV not fully supported!"
+msgstr "Il timeshift sembra essere attivo: interromperlo? Gli stream e l'IPTV non sono supportati al 100%!"
+
 msgid "Your %s %s does not support PiP HD"
 msgstr "Il %s %s non supporta il PiP in HD"
 
-msgid "Your %s %s has no %s access, please check your network settings and make sure you have network cable connected and try again."
-msgstr "Il %s %s non ha accesso a %s: controllare le impostazioni di rete, assicurarsi che il cavo di rete sia collegato e riprovare."
+msgid ""
+"Your %s %s has no %s access, please check your network settings and make sure you have network cable "
+"connected and try again."
+msgstr ""
+"Il %s %s non ha accesso a %s: controllare le impostazioni di rete, assicurarsi che il cavo di rete sia "
+"collegato e riprovare."
 
-msgid "Your %s %s has no internet access, please check your network settings and make sure you have network cable connected and try again."
-msgstr "Il %s %s non ha alcun accesso ad Internet: controllare le impostazioni di rete, assicurarsi che il cavo di rete sia collegato e riprovare."
+msgid ""
+"Your %s %s has no internet access, please check your network settings and make sure you have network cable "
+"connected and try again."
+msgstr ""
+"Il %s %s non ha alcun accesso ad Internet: controllare le impostazioni di rete, assicurarsi che il cavo di "
+"rete sia collegato e riprovare."
 
-msgid "Your %s %s has no network access, please check your network settings and make sure you have network cable connected and try again."
-msgstr "Il %s %s non ha alcun accesso alla rete: controllare le impostazioni di rete, assicurarsi che il cavo di rete sia collegato e riprovare."
+msgid ""
+"Your %s %s has no network access, please check your network settings and make sure you have network cable "
+"connected and try again."
+msgstr ""
+"Il %s %s non ha alcun accesso alla rete: controllare le impostazioni di rete, assicurarsi che il cavo di rete "
+"sia collegato e riprovare."
 
-msgid "Your %s %s is not able to connect to the feeds, please try again later. If this persists please report on the BH forum at www.vuplus-community.net"
-msgstr "Il %s %s non può connettersi alle fonti. Riprova più tardi. Se il problema persiste riportalo al forum BH/OBH (www.vuplus-community.net)"
+msgid ""
+"Your %s %s is not able to connect to the feeds, please try again later. If this persists please report on the "
+"BH forum at www.vuplus-community.net"
+msgstr ""
+"Il %s %s non può connettersi alle fonti. Riprova più tardi. Se il problema persiste riportalo al forum BH/OBH "
+"(www.vuplus-community.net)"
 
 msgid ""
 "Your %s %s is now ready to be used.\n"
@@ -12357,8 +12540,12 @@ msgstr ""
 "Sto eseguendo l'arresto del %s %s\n"
 "Attendere prego..."
 
-msgid "Your %s %s might be unusable now. Please consult the manual for further assistance before rebooting your %s %s."
-msgstr "Il %s %s potrebbe risultare ora inutilizzabile. Consultare il manuale per ulteriori informazioni prima di riavviare il %s %s."
+msgid ""
+"Your %s %s might be unusable now. Please consult the manual for further assistance before rebooting your %s "
+"%s."
+msgstr ""
+"Il %s %s potrebbe risultare ora inutilizzabile. Consultare il manuale per ulteriori informazioni prima di "
+"riavviare il %s %s."
 
 msgid ""
 "Your %s %s will be restarted after the installation of service.\n"
@@ -12454,10 +12641,14 @@ msgid "Your network is restarting, Please wait..."
 msgstr "Riavvio della rete in corso. Attendere..."
 
 msgid "Your receiver can use SCPC optimized search range. Consult your receiver's manual for more information."
-msgstr "Il tuo ricevitore può utilizzare l'intervallo di ricerca ottimizzato per SCPC. Consultare il manuale del ricevitore per ulteriori informazioni."
+msgstr ""
+"Il tuo ricevitore può utilizzare l'intervallo di ricerca ottimizzato per SCPC. Consultare il manuale del "
+"ricevitore per ulteriori informazioni."
 
 msgid "Your receiver can use tone amplitude. Consult your receiver's manual for more information."
-msgstr "Il ricevitore può utilizzare un'ampiezza di tono. Per ulteriori informazioni, consultare il manuale del ricevitore."
+msgstr ""
+"Il ricevitore può utilizzare un'ampiezza di tono. Per ulteriori informazioni, consultare il manuale del "
+"ricevitore."
 
 msgid "Your receiver does not have an internet connection"
 msgstr "Il ricevitore non dispone di una connessione a internet"
@@ -12465,9 +12656,6 @@ msgstr "Il ricevitore non dispone di una connessione a internet"
 msgid "Your receiver is not connected to the internet"
 msgstr "Il ricevitore non è connesso a internet"
 
-msgid "Your timezone in the area."
-msgstr "Il fuso orario nella tua zona"
-
 msgid ""
 "Your wireless LAN internet connection could not be started!\n"
 "Have you attached your USB WLAN Stick?\n"
@@ -12502,6 +12690,9 @@ msgstr "Abilita il cambio canale nella PiP."
 msgid "Zap focus to main screen"
 msgstr "Abilita il cambio canale nello schermo principale"
 
+msgid "Zap key delay for channel number input"
+msgstr "Ritardo tasto Zap per l'immissione del numero del canale"
+
 msgid "Zap mode"
 msgstr "Modalità di cambio canale"
 
@@ -12824,9 +13015,6 @@ msgstr "fatto!"
 msgid "drama (general)"
 msgstr "drammatico (generico)"
 
-msgid "e-mail address"
-msgstr "indirizzo email"
-
 msgid "east"
 msgstr "Est"
 
@@ -12878,9 +13066,6 @@ msgstr "intrattenimento (generico)"
 msgid "epg cache backup"
 msgstr "backup EPG cache"
 
-msgid "equal to"
-msgstr "uguale a"
-
 msgid "equestrian"
 msgstr "equestre"
 
@@ -13088,9 +13273,6 @@ msgstr "lungo"
 msgid "longest"
 msgstr "più lungo"
 
-msgid "loopthrough to"
-msgstr "in cascata da:"
-
 msgid "magazines/reports/documentary"
 msgstr "riviste / servizi / documentari"
 
@@ -13273,16 +13455,6 @@ msgstr "originale"
 msgid "original language"
 msgstr "lingua originale"
 
-msgid "oscam.conf could not be found"
-msgstr "oscam.conf non è stato trovato"
-
-msgid ""
-"oscam.conf not found.\n"
-"Please enter username/password manually."
-msgstr ""
-"file oscam.conf non trovato.\n"
-"Inserire username/password manualmente."
-
 msgid "packages selected."
 msgstr "pacchetti selezionati."
 
@@ -13403,9 +13575,6 @@ msgstr "fantascienza / fantasy / horror"
 msgid "se"
 msgstr "sud-est"
 
-msgid "second cable of motorized LNB"
-msgstr "cavo secondario per LNB motorizzato"
-
 msgid "seconds"
 msgstr "secondi"
 
@@ -13502,24 +13671,6 @@ msgstr "salta avanti"
 msgid "skip forward (enter time)"
 msgstr "salta avanti (inserire intervallo)"
 
-msgid "slot%s - %s mode 1"
-msgstr "posizione%s - %s modalità 1"
-
-msgid "slot%s - %s mode 1 (current image)"
-msgstr "posizione%s  -%s modalità 1 (immagine corrente)"
-
-msgid "slot%s - %s mode 12"
-msgstr "posizione%s - %s (immagine corrente)"
-
-msgid "slot%s - %s mode 12 (current image)"
-msgstr "posizione%s - %s modalità 12 (immagine corrente)"
-
-msgid "slot%s -%s - %s (current image)"
-msgstr "posizione%s - %s - %s (immagine corrente)"
-
-msgid "slot%s -%s- %s "
-msgstr "posizione%s - %s - %s "
-
 msgid "slow"
 msgstr "lento"
 
@@ -13556,9 +13707,6 @@ msgstr "Sud/Sud-Est"
 msgid "ssw"
 msgstr "Sud/Sud-Ovest"
 
-msgid "standard"
-msgstr "standard"
-
 msgid "start cut here"
 msgstr "Qui INIZIO taglio"
 
@@ -13722,18 +13870,6 @@ msgstr "Quando PiPzap è abilitato, va al canale successivo"
 msgid "when PiPzap enabled zap channel up..."
 msgstr "Quando PiPzap è abilitato, va al canale precedente"
 
-msgid "when asking questions about this log"
-msgstr "quando farai domande con questo registro errori"
-
-msgid ""
-"when asking questions about this log\n"
-"\n"
-"A copy has been sent to yourself."
-msgstr ""
-"quando farai domande con questo registro errori\n"
-"\n"
-"ne sarà inviata una copia al tuo indirizzo."
-
 msgid "white"
 msgstr "bianco"
 
@@ -13801,28 +13937,3 @@ msgstr "zap e registrazione"
 
 msgid "zapped"
 msgstr "Zap eseguito"
-
-msgid "Hide number markers"
-msgstr "Nascondi gli indicatori numerici"
-
-msgid "When enabled, number markers will be hidden."
-msgstr "Se attivata abilita la scomparsa degli indicatori numerici."
-
-msgid "Zap key delay for channel number input"
-msgstr "Ritardo tasto Zap per l'immissione del numero del canale"
-
-msgid ""
-"In live view wait this many seconds after a numeric key press before assuming the required channel number has been entered. Default: 5 seconds. Setting zero will require confirmation with 'OK'. "
-msgstr "Attesa in secondi per accettare automaticamente il numero di canale digitato senza dare l'OK. Default=5 secondi. Se lo imposti a 0 dovrai sempre premere OK."
-
-msgid "When enabled the set top box is able to wakeup on LAN"
-msgstr "Se abilitato, il box è in grado di riattivarsi dalla LAN"
-
-msgid "You seem to be in timeshift, Do you want to leave timeshift? Streams & IPTV not fully supported!"
-msgstr "Il timeshift sembra essere attivo: interromperlo? Gli stream e l'IPTV non sono supportati al 100%!"
-
-msgid "Do you really want to stop the current recording and delete timer %s?"
-msgstr "Vuoi davvero fermare la registrazione e cancellare il timer %s?"
-
-msgid "Enable VOD skip buttons"
-msgstr "Abilita i salti con i tasti nello streaming"
diff --git a/po/pt.po b/po/pt.po
index 910cbda..669306b 100644
--- a/po/pt.po
+++ b/po/pt.po
@@ -5,19 +5,19 @@
 #
 msgid ""
 msgstr ""
-"Project-Id-Version: enigma2 pt translation for Open BlackHole 4.2\n"
+"Project-Id-Version: enigma2 pt translation for Open BlackHole 4.3\n"
 "Report-Msgid-Bugs-To: \n"
 "POT-Creation-Date: 2016-09-24 18:23+0100\n"
-"PO-Revision-Date: 2019-03-12 20:56+0000\n"
-"Last-Translator: nunigaia\n"
-"Language-Team: BH Team\n"
+"PO-Revision-Date: 2020-04-18 21:40+0100\n"
+"Last-Translator: BH Team <nunigaia@gmail.com>\n"
+"Language-Team: BH Team - Imagem Open Blackhole 4.3 e posteriores\n"
 "Language: pt_PT\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 "X-Poedit-SourceCharset: UTF-8\n"
 "Plural-Forms: nplurals=2; plural=(n != 1);\n"
-"X-Generator: Poedit 2.2.1\n"
+"X-Generator: Poedit 2.3\n"
 
 msgid ""
 "\n"
@@ -33,7 +33,6 @@ msgstr ""
 "\n"
 "Depois de premir OK, P.F. aguarde!"
 
-#, python-format
 msgid ""
 "\n"
 "Backup your %s %s settings."
@@ -48,7 +47,6 @@ msgstr ""
 "\n"
 "Editar o endereço da fonte de atualização."
 
-#, python-format
 msgid ""
 "\n"
 "Manage extensions or plugins for your %s %s"
@@ -56,7 +54,6 @@ msgstr ""
 "\n"
 "Gerir extensões ou plugins para a sua %s %s"
 
-#, python-format
 msgid ""
 "\n"
 "Online update of your %s %s software."
@@ -71,7 +68,6 @@ msgstr ""
 "\n"
 "Prima OK no telecomando para continuar."
 
-#, python-format
 msgid ""
 "\n"
 "Restore your %s %s settings."
@@ -79,7 +75,6 @@ msgstr ""
 "\n"
 "Restaure as definições da sua %s %s."
 
-#, python-format
 msgid ""
 "\n"
 "Restore your %s %s with a new firmware."
@@ -132,25 +127,18 @@ msgstr " e"
 msgid "%-H:%M"
 msgstr "%-H:%M"
 
-#, python-format
 msgid "%02d.%02d - %02d.%02d (%s%d min)"
 msgstr "%02d.%02d - %02d.%02d (%s%d min)"
 
-#. TRANSLATORS: short time representation hour:minute
-#, python-format
 msgid "%2d:%02d"
 msgstr "%2d:%02d"
 
-#. TRANSLATORS: full time representation hour:minute:seconds
-#, python-format
 msgid "%2d:%02d:%02d"
 msgstr "%2d:%02d:%02d"
 
-#. TRANSLATORS: long date representations dayname daynum monthname in strftime() format! See 'man strftime'
 msgid "%A %e %B"
 msgstr "%A %e %B"
 
-#. TRANSLATORS: full date representation dayname daynum monthname year in strftime() format! See 'man strftime'
 msgid "%A %e %B %Y"
 msgstr "%A %e %B %Y"
 
@@ -160,88 +148,69 @@ msgstr "%A %e %b"
 msgid "%H:%M"
 msgstr "%H:%M"
 
-#. TRANSLATORS: full date representations sort dayname daynum monthname long year in strftime() format! See 'man strftime'
 msgid "%a %e %B %Y"
 msgstr "%a %e %B %Y"
 
-#. TRANSLATORS: short date representation short dayname daynum short monthname in strftime() format! See 'man strftime'
 msgid "%a %e/%m"
 msgstr "%a %e/%m"
 
-#. TRANSLATORS: long date representation short dayname daynum short monthname hour:minute in strftime() format! See 'man strftime'
 msgid "%a %e/%m  %-H:%M"
 msgstr "%a %e/%m  %-H:%M"
 
-#, python-format
 msgid "%d GB"
 msgstr "%d GB"
 
-#, python-format
 msgid "%d Gb"
 msgstr "%d Gb"
 
-#, python-format
 msgid "%d KB"
 msgstr "%d KB"
 
-#, python-format
 msgid "%d MB"
 msgstr "%d MB"
 
-#, python-format
 msgid "%d Min"
 msgid_plural "%d Mins"
 msgstr[0] "%d Min"
 msgstr[1] "%d Mins"
 
-#. TRANSLATORS: Intermediate scanning result, '%d' channel(s) have been found so far
-#, python-format
 msgid "%d channel found"
 msgid_plural "%d channels found"
 msgstr[0] "%d canal encontrado"
 msgstr[1] "%d canais encontrados"
 
-#, python-format
 msgid "%d hour"
 msgid_plural "%d hours"
 msgstr[0] "%d hora"
 msgstr[1] "%d horas"
 
-#, python-format
 msgid "%d job is running in the background!"
 msgid_plural "%d jobs are running in the background!"
-msgstr[0] "%d tarefa a decorrer em segundo plano!!"
-msgstr[1] "%d trabalhos a decorrer em segundo plano!"
+msgstr[0] "%d tarefa a decorrer em segundo plano!"
+msgstr[1] "%d tarefas a decorrer em segundo plano!"
 
-#, python-format
 msgid "%d jobs are running in the background!"
 msgstr "%d tarefas estão a decorrer em segundo plano!"
 
-#, python-format
 msgid "%d kB"
 msgstr "%d kB"
 
-#, python-format
 msgid "%d min"
 msgstr "%d min"
 
-#, python-format
 msgid "%d minute"
 msgid_plural "%d minutes"
 msgstr[0] "%d minuto"
 msgstr[1] "%d minutos"
 
-#, python-format
 msgid "%d minutes"
 msgstr "%d minutos"
 
-#, python-format
 msgid "%d second"
 msgid_plural "%d seconds"
 msgstr[0] "%d segundo"
 msgstr[1] "%d segundos"
 
-#, python-format
 msgid "%d wireless network found!"
 msgid_plural "%d wireless networks found!"
 msgstr[0] "%d rede sem fios encontrada!"
@@ -250,62 +219,47 @@ msgstr[1] "%d redes sem fios encontradas!"
 msgid "%d.%B %Y"
 msgstr "%d.%B %Y"
 
-#. TRANSLATORS: VFD hour:minute daynum short monthname in strftime() format! See 'man strftime'
 msgid "%k:%M %e/%m"
 msgstr "%k:%M %e/%m"
 
-#, python-format
 msgid "%s %s advanced remote control (native)"
 msgstr "%s %s telecomando avançado (nativo)"
 
-#, python-format
 msgid "%s %s format data DVD (HDTV compatible)"
 msgstr "%s %s formato info DVD (HDTV compatível)"
 
-#, python-format
 msgid "%s %s front panel"
 msgstr "%s %s painel frontal"
 
-#, python-format
 msgid "%s %s ir keyboard"
 msgstr "%s %s teclado IR"
 
-#, python-format
 msgid "%s %s ir mouse"
 msgstr "%s %s rato IR"
 
-#, python-format
 msgid "%s %s remote control (native)"
 msgstr "%s %s telecomando (nativo)"
 
-#, python-format
 msgid "%s %s software because updates are available."
-msgstr "%s %s software existem atualizações disponíveis."
+msgstr "%s %s software - Existem atualizações disponíveis."
 
-#, python-format
 msgid "%s (%s)\n"
 msgstr "%s (%s)\n"
 
-#. TRANSLATORS: The satellite with name '%s' is no longer used after a configuration change. The user is asked whether or not the satellite should be deleted.
-#, python-format
 msgid "%s is no longer used. Should it be deleted?"
 msgstr "%s já não usado. Deve ser apagado?"
 
-#, python-format
 msgid "%s updated package available"
 msgid_plural "%s updated packages available"
 msgstr[0] "%s pacote atualizado disponível"
 msgstr[1] "%s pacotes atualizados disponíveis"
 
-#, python-format
 msgid "%s%d min"
 msgstr "%s%d min"
 
-#, python-format
 msgid "%s/%s: %s"
 msgstr "%s/%s: %s"
 
-#, python-format
 msgid "'%s' contains %d file(s) and %d sub-directories.\n"
 msgstr "'%s' contém %d arquivo(s) e %d sub-pastas.\n"
 
@@ -313,7 +267,7 @@ msgid "( All readers)"
 msgstr "(Todos os leitores)"
 
 msgid "(Show only reader:"
-msgstr "(Mostra apenas o leitor:"
+msgstr "(Mostra apenas o leitor):"
 
 msgid "(ZAP)"
 msgstr "(ZAP)"
@@ -456,7 +410,6 @@ msgstr "A"
 msgid "A background update check is in progress, please wait a few minutes and try again."
 msgstr "Uma verificação de atualização está em andamento, por favor, aguarde alguns minutos e tente novamente."
 
-#, python-format
 msgid ""
 "A configuration file (%s) has been modified since it was installed.\n"
 "Do you want to keep your modifications?"
@@ -464,15 +417,13 @@ msgstr ""
 "Um arquivo de configuração (%s) foi modificado desde que foi instalado.\n"
 "Pretende manter as suas modificações?"
 
-#, python-format
 msgid ""
 "A configuration file (%s) was modified since Installation.\n"
 "Do you want to keep your version?"
 msgstr ""
-"Alguns arquivos (%s) foram alterados depois da instalação.\n"
-"Pretende manter a sua versão?"
+"Um arquivo de configuração (%s) foi modificado desde a instalação.\n"
+"Quer manter a sua versão?"
 
-#, python-format
 msgid ""
 "A finished power timer wants to shut down\n"
 "your %s %s. Shutdown now?"
@@ -480,7 +431,6 @@ msgstr ""
 "O Timer de energia quer desligar a sua %s %s.\n"
 " Deseja desligá-la agora?"
 
-#, python-format
 msgid ""
 "A finished powertimer wants to reboot your %s %s.\n"
 "Do that now?"
@@ -497,7 +447,6 @@ msgstr ""
 " da %s %.\n"
 "Pretende efetuar isso agora?"
 
-#, python-format
 msgid ""
 "A finished powertimer wants to set your\n"
 "%s %s to standby. Do that now?"
@@ -505,7 +454,6 @@ msgstr ""
 "Um Timer de energia quer definir a sua\n"
 "%s %s para modo de espera. Fazer isso agora?"
 
-#, python-format
 msgid ""
 "A finished powertimer wants to shutdown your %s %s.\n"
 "Do that now?"
@@ -513,7 +461,6 @@ msgstr ""
 "O Timer de energia quer desligar a sua %s %s.\n"
 " Deseja desligá-la agora?"
 
-#, python-format
 msgid ""
 "A finished record timer wants to set your\n"
 "%s %s to standby. Do that now?"
@@ -521,7 +468,6 @@ msgstr ""
 "Uma gravação temporizada quer definir a sua\n"
 "%s %s para modo de espera. Fazer isso agora?"
 
-#, python-format
 msgid ""
 "A finished record timer wants to shut down\n"
 "your %s %s. Shutdown now?"
@@ -529,7 +475,6 @@ msgstr ""
 "Uma gravação temporizada quer desligar a sua %s %s.\n"
 " Deseja desligá-la agora?"
 
-#, python-format
 msgid ""
 "A recording has been started:\n"
 "%s"
@@ -545,10 +490,10 @@ msgstr ""
 "O que deseja fazer?"
 
 msgid "A recording is currently running. Please stop the recording before trying to configure the positioner."
-msgstr "Uma gravação está a decorrer.Por favor páre a gravação antes de tentar configurar o posicionador."
+msgstr "Uma gravação está a decorrer.Por favor pare a gravação antes de tentar configurar o posicionador."
 
 msgid "A recording is currently running. Please stop the recording before trying to scan."
-msgstr "Uma gravação está em progresso. Por favor páre antes de tentar uma procura."
+msgstr "Uma gravação está em progresso. Por favor pare antes de tentar uma procura."
 
 msgid "A recording is currently running. Please stop the recording before trying to start the satfinder."
 msgstr "Uma gravação está atualmente em execução. Por favor, pare a gravação antes de tentar iniciar o localizador de satélite."
@@ -556,7 +501,6 @@ msgstr "Uma gravação está atualmente em execução. Por favor, pare a gravaç
 msgid "A repeating timer or just once?"
 msgstr "Um Timer de repetição ou só uma vez?"
 
-#, python-format
 msgid "A required tool (%s) was not found."
 msgstr "Uma ferramenta necessária (%s) não foi encontrada."
 
@@ -572,7 +516,6 @@ msgstr ""
 "\n"
 "Deseja desabilitar a segunda interface de rede?"
 
-#, python-format
 msgid ""
 "A sleep timer wants to set your\n"
 "%s %s to standby. Do that now?"
@@ -580,7 +523,6 @@ msgstr ""
 "Um Timer quer definir a sua\n"
 "%s %s para standby. Fazer isso agora?"
 
-#, python-format
 msgid ""
 "A sleep timer wants to shut down\n"
 "your %s %s. Shutdown now?"
@@ -589,16 +531,15 @@ msgstr ""
 "a sua %s %s. Quer desligar agora?"
 
 msgid "A small overview of the available icon states and actions."
-msgstr "Uma pequena amostra dos disponíveis estados de ícones e acções."
+msgstr "Uma pequena amostra dos estados de ícones e ações disponíveis."
 
 msgid ""
 "A timer failed to record!\n"
 "Disable TV and try again?\n"
 msgstr ""
 "Um timer de gravação falhou!\n"
-"Desativar  a TV e tentar novamente?\n"
+"Desativar a TV e tentar novamente?\n"
 
-# Modifica as definições de Áudio e Vídeo, de acordo com as suas preferências
 msgid "A/V settings"
 msgstr "A/V settings"
 
@@ -614,7 +555,6 @@ msgstr "ADQUIRINDO TSID/ONID"
 msgid "AFP Setup"
 msgstr "AFP Protocolo de Rede Apple"
 
-#, python-format
 msgid "AV aspect is %s."
 msgstr "Aspeto AV é %s."
 
@@ -646,7 +586,7 @@ msgid "Activate current configuration"
 msgstr "Ativar a configuração existente"
 
 msgid "Active"
-msgstr "Ativo"
+msgstr "ativo"
 
 msgid "Active clients"
 msgstr "Clientes Ativos"
@@ -664,7 +604,7 @@ msgid "Add Timer"
 msgstr "Adicionar Timer"
 
 msgid "Add a auto timer for current event"
-msgstr "Adicionar Auto Timer  para este evento"
+msgstr "Adicionar Auto Timer para este evento"
 
 msgid "Add a mark"
 msgstr "Adicionar marca"
@@ -705,16 +645,16 @@ msgid "Add provider"
 msgstr "Adicionar operador"
 
 msgid "Add recording (enter recording duration)"
-msgstr "Adicionar gravação ( introduza a duração )"
+msgstr "Adicionar gravação (introduza a duração)"
 
 msgid "Add recording (enter recording endtime)"
-msgstr "Adicionar gravação ( defina o fim da mesma )"
+msgstr "Adicionar gravação (defina o fim da mesma)"
 
 msgid "Add recording (indefinitely)"
-msgstr "Adicionar gravação ( indefinidamente )"
+msgstr "Adicionar gravação (indefinidamente)"
 
 msgid "Add recording (stop after current event)"
-msgstr "Adicionar gravação ( parar quando o evento terminar )"
+msgstr "Adicionar gravação (parar quando o evento terminar)"
 
 msgid "Add service"
 msgstr "Adicionar serviço"
@@ -747,7 +687,7 @@ msgid "Adjust 3D settings"
 msgstr "Ajustar as definições 3D"
 
 msgid "Adjust the color settings so that all the color shades are distinguishable, but appear as saturated as possible. If you are happy with the result, press OK to close the video fine-tuning, or use the number keys to select other test screens."
-msgstr "Ajuste as cores para que as sombras fiquem visiveis, mas apareçam o mais saturado possivel. Se estiver satisfeito com o resultado, carregue na tecla OK para sair do ajuste fino, ou use as teclas com números para selecionar outros Ecrãs de teste."
+msgstr "Ajuste as cores para que as sombras fiquem visiveis, mas apareçam o mais saturado possivel. Se estiver satisfeito com o resultado, carregue na tecla OK para sair do ajuste fino, ou use as teclas com números para selecionar outros ecrãs de teste."
 
 msgid "Advanced options"
 msgstr "Opções avançadas"
@@ -795,7 +735,7 @@ msgid "Allocate unused memory index"
 msgstr "Atribuir memória indexada não usada"
 
 msgid "Allows you to adjust the amount of time the resolution infomation display on screen."
-msgstr "Permite-lhe definir o tempo necessário que a exibição da resolução apareça no Ecrã."
+msgstr "Permite-lhe definir o tempo necessário que a exibição da resolução apareça no ecrã."
 
 msgid "Allows you to hide the extensions of known file types."
 msgstr "Permite ocultar as extensões dos tipos de arquivo conhecidos."
@@ -819,7 +759,7 @@ msgid "Always hide infobar"
 msgstr "Esconder sempre a barra de informação"
 
 msgid "An empty filename is illegal."
-msgstr "Um Arquivo vazio é ilegal."
+msgstr "Um arquivo vazio é ilegal."
 
 msgid "An error occurred while downloading the packetlist. Please try again."
 msgstr "Ocorreu um erro na descarga da lista de pacotes. Por favor, tente novamente."
@@ -882,7 +822,6 @@ msgstr ""
 "Tem a certeza que quer reiniciar as suas interfaces de rede?\n"
 "\n"
 
-#, python-format
 msgid ""
 "Are you sure you want to restore\n"
 "the following backup:\n"
@@ -907,7 +846,6 @@ msgstr "Tem a certeza que deseja salvar a Cache EPG em:\n"
 msgid "Are you sure you want to send this log:\n"
 msgstr "Tem a certeza que deseja enviar este log:\n"
 
-#, python-format
 msgid "Are you sure you want to update your %s %s ?"
 msgstr "Tem a certeza que quer atualizar a sua %s %s ?"
 
@@ -924,10 +862,10 @@ msgid "Aspect ratio"
 msgstr "Relação de aspeto"
 
 msgid "Assigned CAIds:"
-msgstr "CAIds atribuídos:"
+msgstr "CAIds adjudicados:"
 
 msgid "Assigned services/provider:"
-msgstr "Assignar serviços/operador:"
+msgstr "Adjudicar serviços/operador:"
 
 msgid "At End:"
 msgstr "No fim:"
@@ -941,13 +879,11 @@ msgstr "PID de Áudio"
 msgid "Audio options..."
 msgstr "Opções de Áudio..."
 
-#, python-format
 msgid "Audio track (%s) format"
-msgstr "Formato  (%s)  trilha de Áudio"
+msgstr "Formato (%s) faixa de Áudio"
 
-#, python-format
 msgid "Audio track (%s) language"
-msgstr "Idioma  (%s)  trilha de Áudio"
+msgstr "Idioma (%s) faixa de Áudio"
 
 msgid "Author: "
 msgstr "Autor: "
@@ -955,7 +891,6 @@ msgstr "Autor: "
 msgid "Authoring mode"
 msgstr "Modo criativo"
 
-#. TRANSLATORS: (aspect ratio policy: always try to display as fullscreen, when there is no content (black bars) on left/right, even if this breaks the aspect.
 msgid "Auto"
 msgstr "Auto"
 
@@ -969,7 +904,7 @@ msgid "Auto chapter split every ? minutes (0=never)"
 msgstr "Auto separação de capítulos todos os ? minutos(0=nunca)"
 
 msgid "Auto flesh"
-msgstr "Correção da Cor ( auto )"
+msgstr "Correção da Cor (auto)"
 
 msgid "Auto focus"
 msgstr "Auto focus"
@@ -1062,7 +997,7 @@ msgid "Begin time"
 msgstr "Tempo de início"
 
 msgid "Behavior when a movie reaches the end"
-msgstr "Comportamento do Filme quando terminar"
+msgstr "Comportamento do filme quando terminar"
 
 msgid "Bitrate:"
 msgstr "Taxa de bits:"
@@ -1089,7 +1024,7 @@ msgid "Block noise reduction"
 msgstr "Bloquear a redução de ruído"
 
 msgid "Blue"
-msgstr "Blue"
+msgstr "Azul"
 
 msgid "Blue button..."
 msgstr "Tecla Azul..."
@@ -1112,11 +1047,9 @@ msgstr "Brilho"
 msgid "Buffers:"
 msgstr "Buffers:"
 
-#, python-format
 msgid "Build:\t%s"
 msgstr "Build: %s"
 
-#, python-format
 msgid "Build: %s"
 msgstr "Build: %s"
 
@@ -1126,9 +1059,8 @@ msgstr "Búlgaro"
 msgid "Burn DVD"
 msgstr "Gravar DVD"
 
-#, python-format
 msgid "Burn audio track (%s)"
-msgstr "Gravar trilha de áudio (%s)"
+msgstr "Gravar faixa de áudio (%s)"
 
 msgid "Burn existing image to DVD"
 msgstr "Gravar imagem existente para DVD"
@@ -1172,7 +1104,6 @@ msgstr "CCcam ECM Info"
 msgid "CCcam Info"
 msgstr "CCcam Info"
 
-#, python-format
 msgid ""
 "CCcam Info %s\n"
 "by AliAbdul %s\n"
@@ -1214,7 +1145,6 @@ msgstr "ALTERAR BOUQUET"
 msgid "CI assignment"
 msgstr "Escolha de CI"
 
-#, python-format
 msgid "CPU:\t%s"
 msgstr "CPU:\t%s"
 
@@ -1255,7 +1185,7 @@ msgid "Cancel save timeshift as movie"
 msgstr "Cancelar salvar timeshift como filme"
 
 msgid "Cannot delete file"
-msgstr "Não pode apagar este Arquivo"
+msgstr "Não pode apagar este arquivo"
 
 msgid "Cannot determine"
 msgstr "Não pode determinar"
@@ -1291,7 +1221,7 @@ msgid "Change pin code"
 msgstr "Alterar código PIN"
 
 msgid "Change recording (duration)"
-msgstr "Altere a gravação ( duração )"
+msgstr "Altere a gravação (duração)"
 
 msgid "Change recording (endtime)"
 msgstr "Por favor, altere o tempo final da gravação"
@@ -1369,9 +1299,8 @@ msgid "Checking for Updates..."
 msgstr "Verificar por atualizações ..."
 
 msgid "No updates found, Press OK to exit this screen."
-msgstr "Não existem atualizações. Prima OK para sair do Ecrã."
+msgstr "Não existem atualizações. Prima OK para sair do ecrã."
 
-#, python-format
 msgid ""
 "Checking tuner %d\n"
 "DiSEqC port %s for %s"
@@ -1382,11 +1311,9 @@ msgstr ""
 msgid "Children/Youth"
 msgstr "Crianças/Jovens"
 
-#, python-format
 msgid "Chipset:\tBCM%s"
 msgstr "Chipset:\tBCM%s"
 
-#, python-format
 msgid "Chipset: BCM%s"
 msgstr "Chipset: BCM%s"
 
@@ -1397,7 +1324,7 @@ msgid "Choose a tag for easy finding a recording."
 msgstr "Escolha uma marca para fácilmente encontrar uma gravação."
 
 msgid "Choose between Daily, Weekly, Weekdays or user defined."
-msgstr "Escolha entre diária, semanal, dias da semana ou definido pelo usuário."
+msgstr "Escolha entre diária, semanal, dias da semana ou definido pelo utilizador."
 
 msgid "Choose whether multi channel sound tracks should be downmixed to stereo."
 msgstr "Escolha se as faixas de som multicanal devem ser downmixadas para estéreo."
@@ -1501,19 +1428,17 @@ msgstr "Completo"
 msgid "Complex (allows mixing audio tracks and aspects)"
 msgstr "Complexo (permite misturar faixas de áudio e aspetos)"
 
-#, python-format
 msgid "Configfile %s saved."
 msgstr "Ficheiro de configuração %s salvo."
 
 msgid "Configuration mode"
 msgstr "Modo Configuração"
 
-#, python-format
 msgid "Configuration mode: %s"
 msgstr "Modo de Configuração: %s"
 
 msgid "Configure the refresh rate of the screen."
-msgstr "Configura a taxa de atualização da tela."
+msgstr "Configura a taxa de atualização do ecrã."
 
 msgid "Configure which color format should be used on the SCART output."
 msgstr "Configura o formato de cor que deve ser usado na saída SCART."
@@ -1561,7 +1486,7 @@ msgid "Content"
 msgstr "Conteúdo"
 
 msgid "Content does not fit on DVD!"
-msgstr "O contiudo não cabe no DVD!"
+msgstr "O conteúdo não cabe no DVD!"
 
 msgid "Continue"
 msgstr "Continuar"
@@ -1576,7 +1501,7 @@ msgid "Continues"
 msgstr "Continua"
 
 msgid "Continues play (loop)"
-msgstr "Continua reprodução ( loop )"
+msgstr "Continua reprodução (loop)"
 
 msgid "Contrast"
 msgstr "Contraste"
@@ -1591,7 +1516,7 @@ msgid "Converting ext3 to ext4..."
 msgstr "A Converter ext3 em ext4..."
 
 msgid "Cool TV Guide"
-msgstr "Guia Cool TV"
+msgstr "Guia perfeito de TV (EPG)"
 
 msgid "Copy"
 msgstr "Copiar"
@@ -1599,13 +1524,11 @@ msgstr "Copiar"
 msgid "Copying files"
 msgstr "Copiando Arquivos"
 
-#, python-format
 msgid "Cores:\t%s"
 msgstr "Cores:\t%s"
 
-#, python-format
 msgid "Could not connect to %s %s .NFI image feed server:"
-msgstr "Não foi possível conectar ao %s %s. Imagem NFI alimentação do servidor:"
+msgstr "Não foi possível conectar ao %s %s. Imagem NFI suportada no servidor:"
 
 msgid "Could not find installed channel list."
 msgstr "Lista de canais instalada não encontrada."
@@ -1616,19 +1539,15 @@ msgstr "Não foi possível carregar a Media! Nenhum disco inserido?"
 msgid "Could not open Picture in Picture"
 msgstr "Foi impossível abrir o PiP"
 
-#, python-format
 msgid "Could not open the file %s!"
 msgstr "Não pode abrir o Arquivo %s!"
 
-#, python-format
 msgid "Could not record due to conflicting timer %s"
 msgstr "Não pode gravar devido a conflito no TIMER %s"
 
-#, python-format
 msgid "Could not record due to invalid service %s"
 msgstr "Não pode gravar, serviço inválido %s"
 
-#, python-format
 msgid "Could not save configfile %s!"
 msgstr "Não pode salvar o ficheiro de configuração %s!"
 
@@ -1647,7 +1566,6 @@ msgstr "A criar AP e arquivos SC"
 msgid "Creating Hardlink to Timeshift file failed!"
 msgstr "Criação Hardlink para Timeshift, falhou!"
 
-#, python-format
 msgid "Creating directory %s failed."
 msgstr "A criação da pasta %s falhou."
 
@@ -1798,7 +1716,6 @@ msgstr "Atraso:"
 msgid "Delete"
 msgstr "Apagar"
 
-#, python-format
 msgid "Delete %s?"
 msgstr "Apagar %s ?"
 
@@ -1809,7 +1726,7 @@ msgid "Delete entry"
 msgstr "Apagar entrada"
 
 msgid "Delete failed!"
-msgstr "Excluir falhou!"
+msgstr "Exclusão falhou!"
 
 msgid "Delete file"
 msgstr "Apagar Arquivo"
@@ -1829,7 +1746,6 @@ msgstr "Apagar..."
 msgid "Deleted"
 msgstr "Apagado"
 
-#, python-format
 msgid "Deleted %s!"
 msgstr "Apagado %s!"
 
@@ -1843,7 +1759,7 @@ msgid "Depth"
 msgstr "Profundidade"
 
 msgid "Descramble & record ECM' gives the option to descramble afterwards if descrambling on recording failed. 'Don't descramble, record ECM' save a scramble recording that can be descrambled on playback. 'Normal' means descramble the recording and don't record ECM."
-msgstr "Descodificar & gravar ECM' dá a opção de descodificar a gravação se a descodifcação falhou.  'Não descodificar, registo ECM' salvar uma gravação codificada que pode ser descodificada na reprodução.  'Normal' significa descodificar a gravação e não gravar ECM."
+msgstr "Descodificar & gravar ECM's dá a opção de descodificar a gravação se a descodifcação falhou. 'Não descodificar, registos ECM's salvar uma gravação codificada que pode ser descodificada na reprodução. 'Normal' significa descodificar a gravação e não gravar ECM´s."
 
 msgid "Description"
 msgstr "Descrição"
@@ -1860,6 +1776,15 @@ msgstr "Dispositivos detetados:"
 msgid "Detected NIMs:"
 msgstr "NIMs detectados:"
 
+msgid "device:"
+msgstr "dispositivo"
+
+msgid "size:"
+msgstr "tamanho:"
+
+msgid "mountpoint:"
+msgstr "ponto de montagem:"
+
 msgid "Device Information"
 msgstr "Informação do dispositivo"
 
@@ -1878,7 +1803,6 @@ msgstr "DiSEqC A/B/C/D"
 msgid "DiSEqC mode"
 msgstr "Modo DiSEqC"
 
-#, python-format
 msgid "DiSEqC port %s: %s"
 msgstr "DiSEqC porta %s: %s"
 
@@ -1903,7 +1827,6 @@ msgstr "Reprodução directa de títulos ligados sem menu"
 msgid "Directory"
 msgstr "Pasta"
 
-#, python-format
 msgid "Directory %s does not exist."
 msgstr "Pasta %s não existe."
 
@@ -1920,7 +1843,7 @@ msgid "Disable timer"
 msgstr "Desativar timer"
 
 msgid "Disabled"
-msgstr "Inativo"
+msgstr "inativo"
 
 msgid "Disconnect"
 msgstr "Desconetar"
@@ -1957,11 +1880,9 @@ msgstr ""
 "Deseja mesmo converter o sistema de ficheiros?\n"
 "Depois não pode voltar atrás!"
 
-#, python-format
 msgid "Do you really want to delete %s ?"
 msgstr "Deseja mesmo apagar %s ?"
 
-#, python-format
 msgid "Do you really want to delete %s?"
 msgstr "Deseja mesmo apagar %s?"
 
@@ -1971,7 +1892,6 @@ msgstr "Deseja mesmo apagar?"
 msgid "Do you really want to delete this timer ?"
 msgstr "Deseja mesmo apagar este timer?"
 
-#, python-format
 msgid "Do you really want to download the plugin \"%s\"?"
 msgstr "Pretende mesmo descarregar o plugin  \"%s\"?"
 
@@ -1992,26 +1912,21 @@ msgstr ""
 "Deseja mesmo iniciar o dispositivo?\n"
 "Todo a informação no disco será perdida!"
 
-#, python-format
 msgid "Do you really want to permamently remove '%s' from trash can ?"
 msgstr "Deseja mesmo remover permanentemente a pasta %s da reciclagem?"
 
 msgid "Do you really want to permanently remove from trash can ?"
 msgstr "Deseja mesmo remover a pasta %s da reciclagem?"
 
-#, python-format
 msgid "Do you really want to remove directory %s from the disk?"
 msgstr "Deseja mesmo remover a pasta %s do disco?"
 
-#, python-format
 msgid "Do you really want to remove the plugin \"%s\"?"
 msgstr "Pretende mesmo remover o plugin  \"%s\"?"
 
-#, python-format
 msgid "Do you really want to remove the timer for %s?"
 msgstr "Pretende mesmo remover o Timer para  \"%s\"?"
 
-#, python-format
 msgid "Do you really want to remove your bookmark of %s?"
 msgstr "Deseja mesmo remover o indicador de %s?"
 
@@ -2042,7 +1957,6 @@ msgstr ""
 "Pretende apagar todos os arquivos selecionados:\n"
 "(escolha 'Não' para apenas apagar o arquivo selecionado no momento.)"
 
-#, python-format
 msgid "Do you want to download the image to %s ?"
 msgstr "Deseja fazer a descarga da imagem para %s ?"
 
@@ -2055,7 +1969,6 @@ msgstr "Deseja reproduzir o DVD inserido?"
 msgid "Do you want to preview this DVD before burning?"
 msgstr "Deseja previsualizar este DVD antes de gravar?"
 
-#, python-format
 msgid "Do you want to reboot your %s %s"
 msgstr "Quer reiniciar a sua %s %s"
 
@@ -2078,7 +1991,6 @@ msgstr ""
 "Pretende enviar todos os arquivos selecionados:\n"
 "(escolha 'Não' para enviar só o arquivo selecionado.)"
 
-#, python-format
 msgid "Do you want to update your %s %s ?"
 msgstr "Quer atualizar a sua %s %s ?"
 
@@ -2094,7 +2006,6 @@ msgstr "Não salvar"
 msgid "Don't stop current event but disable coming events"
 msgstr "Não parar o evento atual mas inativar os próximos eventos"
 
-#, python-format
 msgid "Done - Installed, upgraded or removed %d package (%s)"
 msgid_plural "Done - Installed, upgraded or removed %d packages (%s)"
 msgstr[0] "CONCLUÌDO - Instalado, atualizado ou removido %d pacote (%s)"
@@ -2103,7 +2014,6 @@ msgstr[1] "Concluído - Instalados, atualizados ou removidos %d pacotes (%s)"
 msgid "Download"
 msgstr "Descarregar"
 
-#, python-format
 msgid "Download %s from server"
 msgstr "Descarga %s do servidor"
 
@@ -2119,11 +2029,9 @@ msgstr "A transferir..."
 msgid "Downloading plugin information. Please wait..."
 msgstr "A descarregar novos plugins. Por favor espere..."
 
-#, python-format
 msgid "Drivers:\t%s"
 msgstr "Drivers:\t%s"
 
-#, python-format
 msgid "Drivers: %s"
 msgstr "Drivers: %s"
 
@@ -2163,7 +2071,6 @@ msgstr "EPG Procura"
 msgid "EPG settings"
 msgstr "Definições EPG"
 
-#, python-format
 msgid "ERROR - failed to scan (%s)!"
 msgstr "ERRO - falha na procura (%s)!"
 
@@ -2194,11 +2101,9 @@ msgstr "Editar lista de serviços"
 msgid "Edit settings"
 msgstr "Editar"
 
-#, python-format
 msgid "Edit the Nameserver configuration of your %s %s.\n"
 msgstr "Edite a configuração do  Nameserver da sua %s %s.\n"
 
-#, python-format
 msgid "Edit the network configuration of your %s %s.\n"
 msgstr "Edite a configuração de Rede da sua %s %s.\n"
 
@@ -2233,7 +2138,7 @@ msgid "Enable parental control"
 msgstr "Ativar o Controlo Paternal"
 
 msgid "Enabled"
-msgstr "Ativado"
+msgstr "ativo"
 
 msgid "Encrypted: "
 msgstr "Codificado: "
@@ -2289,7 +2194,6 @@ msgstr "Erro ao executar o plugin"
 msgid "Error reading webpage!"
 msgstr "Erro ao ler página web!"
 
-#, python-format
 msgid ""
 "Error:\n"
 "%s"
@@ -2297,7 +2201,6 @@ msgstr ""
 "Erro:\n"
 "%s"
 
-#, python-format
 msgid ""
 "Error: %s\n"
 "Retry?"
@@ -2321,7 +2224,7 @@ msgid "Everywhere"
 msgstr "Todo Lado"
 
 msgid "Exceeds dual layer medium!"
-msgstr "É maior que a media de duapla face!"
+msgstr "Excede a Mídia de dupla face!"
 
 msgid "Execution finished!!"
 msgstr "Execução terminada!"
@@ -2428,7 +2331,6 @@ msgstr "Falhou"
 msgid "Failed to write /tmp/positionersetup.log: "
 msgstr "Falhou o registo de  /tmp/positionersetup.log: "
 
-#, python-format
 msgid "Fast"
 msgstr "Rápido"
 
@@ -2485,7 +2387,7 @@ msgid "Flash"
 msgstr "Flash"
 
 msgid "Flashing"
-msgstr "Flashing"
+msgstr "piscar"
 
 msgid "Flashing failed"
 msgstr "Falhou o Flash"
@@ -2553,7 +2455,12 @@ msgstr "De :"
 msgid "Front panel display"
 msgstr "Visor Lcd Frontal"
 
-#, python-format
+msgid "Display Skin"
+msgstr "Tema no Visor LCD"
+
+msgid "Front panel settings"
+msgstr "Definições do Painel Frontal"
+
 msgid "Frontprocessor version: %d"
 msgstr "Versão do Processador: %d"
 
@@ -2575,6 +2482,9 @@ msgstr "Todas as resoluções"
 msgid "GB"
 msgstr "GB"
 
+msgid "GUI settings"
+msgstr "Definições do Utilizador"
+
 msgid ""
 "GUI needs a restart to apply a new skin\n"
 "Do you want to restart the GUI now?"
@@ -2582,6 +2492,19 @@ msgstr ""
 "GUI tem de reiniciar para aplicar a nova skin\n"
 "Pretende reiniciar o GUI agora?"
 
+msgid "skin_default"
+msgstr "Tema padrão"
+
+msgid "< Default + Picon >"
+msgstr "< Padrão + Picon >"
+
+msgid ""
+"GUI needs a restart to apply a new language\n"
+"Do you want to restart the GUI now?"
+msgstr ""
+"GUI tem de reiniciar para aplicar o novo idioma\n"
+"Pretende reiniciar o GUI agora?"
+
 msgid "Gateway"
 msgstr "Gateway"
 
@@ -2799,7 +2722,7 @@ msgid "Icons"
 msgstr "Icones"
 
 msgid "Idle Time: "
-msgstr "Tempo de ocupado:"
+msgstr "Tempo inativo:"
 
 msgid "If enabled the output resolution of the box will try to match the resolution of the video contents resolution"
 msgstr "Se ativo a resolução de saída vai tentar corresponder à resolução do conteúdo de vídeo"
@@ -2820,10 +2743,10 @@ msgid ""
 "Do not care about the bright shades now. They will be set up in the next step.\n"
 "If you are happy with the result, press OK."
 msgstr ""
-"Se a sua TV tiver ajuste de brilho ou contraste, desligue.Se tiver algo com o nome\"dinà¢mico\", ajuste para Standard. Ajuste o nivel da luz de fundo para um valor a seu gosto. Baixe o contraste da sua o maximo possível.\n"
-"Depois ajuste o brilho para o mais baixo possivel, mas certifique-se de que as duas escalas de sombra cinza mais baixas, sejam visiveis.\n"
-"Não se preocupe com as sombras brilhantes agora.Serão ajustadas no próximo passo.\n"
-"Se os ajustes estão bem, carregue OK."
+"Se a sua TV tiver ajuste de brilho ou contraste, desligue. Se tiver algo com o nome \"dinâmico\", ajuste para Standard. Ajuste o nível da luz de fundo para um valor a seu gosto. Baixe o contraste da sua o máximo possível.\n"
+"Depois ajuste o brilho para o mais baixo possível, mas certifique-se de que as duas escalas de sombra cinza mais baixas, sejam visíveis.\n"
+"Não se preocupe com as sombras brilhantes agora. Serão ajustadas no próximo passo.\n"
+"Se os ajustes estiverem bem, carregue OK."
 
 msgid "Image Information"
 msgstr "Informação da Imagem"
@@ -2972,7 +2895,6 @@ msgstr "Só disco interno"
 msgid "Interval between keys when repeating:"
 msgstr "Intervalo entre teclas quando a repetir:"
 
-#, python-format
 msgid "Invalid directory selected: %s"
 msgstr "Pasta selecionada inválida: %s"
 
@@ -3033,10 +2955,6 @@ msgstr "Saltar para PRIME TIME"
 msgid "Just change channels"
 msgstr "Só mudar canais"
 
-#. TRANSLATORS: (aspect ratio policy: display as fullscreen, even if this breaks the aspect)
-#. TRANSLATORS: (aspect ratio policy: display as fullscreen, with stretching the left/right)
-#. "nonlinear": _("Nonlinear"),
-#. TRANSLATORS: (aspect ratio policy: display as fullscreen, even if this breaks the aspect)
 msgid "Just scale"
 msgstr "Just scale"
 
@@ -3049,11 +2967,9 @@ msgstr "Manter Serviço"
 msgid "Keeps MovieList open whilst playing audio files."
 msgstr "Mantém Lista de filmes aberta, enquanto a reprodução de arquivos de áudio."
 
-#, python-format
 msgid "Kernel:\t%s"
 msgstr "Kernel:\t%s"
 
-#, python-format
 msgid "Kernel: %s"
 msgstr "Kernel: %s"
 
@@ -3081,11 +2997,9 @@ msgstr "Ultima configuração"
 msgid "Last speed"
 msgstr "Ultima velocidade"
 
-#, python-format
 msgid "Last update:\t%s"
 msgstr "Atualizada em:\t%s"
 
-#, python-format
 msgid "Last update: %s"
 msgstr "Atualizada em: %s"
 
@@ -3160,7 +3074,6 @@ msgstr "Listar funções EPG"
 msgid "List of storage devices"
 msgstr "Lista de dispositivos de armazenamento"
 
-#, python-format
 msgid "List version %d, found %d channel"
 msgid_plural "List version %d, found %d channels"
 msgstr[0] "Versão da litsa %d, encontrado %d canal"
@@ -3247,7 +3160,6 @@ msgstr "Fazer isto marcar apenas uma marca"
 msgid "Manage extensions"
 msgstr "Gerir extensões"
 
-#, python-format
 msgid "Manage your %s %s's software"
 msgstr "Faça a Gestão do software da sua %s %s"
 
@@ -3311,7 +3223,6 @@ msgstr "MiniDLNA Log"
 msgid "MiniDLNA Setup"
 msgstr "MiniDLNA Partilha da Rede "
 
-#, python-format
 msgid "Minimum age %d years"
 msgstr "Idade mínima %d anos"
 
@@ -3329,11 +3240,11 @@ msgstr "Em Falta"
 
 msgctxt "Satellite configuration mode"
 msgid "Mode"
-msgstr "Modo [ Configuração de satélite]"
+msgstr "Modo [Configuração de satélite]"
 
 msgctxt "Video output mode"
 msgid "Mode"
-msgstr "Modo [ Saída de Vídeo ]"
+msgstr "Modo [Saída de Vídeo]"
 
 msgid "Modulation"
 msgstr "Modulação"
@@ -3482,7 +3393,6 @@ msgstr "Nome:"
 msgid "Nameserver"
 msgstr "Servidor DNS"
 
-#, python-format
 msgid "Nameserver %d"
 msgstr "Servidor DNS %d"
 
@@ -3560,7 +3470,7 @@ msgstr "Notícias/Atualidades"
 
 msgctxt "now/next: 'next' event label"
 msgid "Next"
-msgstr "Já a Seguir"
+msgstr "Seguinte"
 
 msgid "No"
 msgstr "não"
@@ -3609,7 +3519,7 @@ msgid "No event info found, recording indefinitely."
 msgstr "Não encontrou o evento, gravar indefinidamente"
 
 msgid "No fast winding possible yet.. but you can use the number buttons to skip forward/backward!"
-msgstr "Não é possivél avançar rápidamente ainda...mas pode usar as teclas de número para avançar/retroceder!"
+msgstr "Não é possível avançar rapidamente ainda...mas pode usar as teclas de número para avançar/retroceder!"
 
 msgid "No free index available"
 msgstr "Índice livre não disponível"
@@ -3721,7 +3631,7 @@ msgid ""
 " Please verify that you have attached a compatible WLAN device or enable your local network interface."
 msgstr ""
 "Não foi encontrado nenhum adaptador de rede sem fios.\n"
-"Por favor verifique se o adptador é compativél e se a rede está bem configurada."
+"Por favor verifique se o adaptador é compatível e se a rede está bem configurada."
 
 msgid "No, but restart from begin"
 msgstr "Não, mas reinicia do princípio"
@@ -3753,11 +3663,9 @@ msgstr "Não exibidos"
 msgid "Not associated"
 msgstr "Não-Associado"
 
-#, python-format
 msgid "Not enough disk space. Please free up some disk space and try again. (%d MB required, %d MB available)"
 msgstr "Espaço em disco insuficiente. Por favor, libere algum espaço e tente novamente. (%d MB necessários, %d MB livres)"
 
-#, python-format
 msgid ""
 "Not enough free Diskspace!\n"
 "\n"
@@ -4132,7 +4040,7 @@ msgid "Please enter the old PIN code"
 msgstr "Por favor introduza o codigo PIN antigo"
 
 msgid "Please note that the previously selected media could not be accessed and therefore the default directory is being used instead."
-msgstr "Por favor note que a media anteriormente selecionada não pôde ser assedida e por isso a pasta padrão está a ser usada."
+msgstr "Por favor note que a Media anteriormente selecionada não pôde ser acedida e por isso a pasta padrão está a ser usada."
 
 msgid "Please press OK to continue."
 msgstr "Por favor prima OK ara continuar."
@@ -4182,7 +4090,7 @@ msgstr ""
 "OK para voltar ao Modo TV ou EXIT para cancelar."
 
 msgid "Please use the UP and DOWN keys to select your language. Afterwards press the OK button."
-msgstr "Por favor use as teclas de Cima e Baixi para selecionar a sua língua. Depois prima OK."
+msgstr "Por favor use as teclas de Cima e Baixo para selecionar o seu idioma. Depois prima OK."
 
 msgid "Please wait (downloading channel list)"
 msgstr "Por favor espere ( descarga da lista de canais )"
@@ -4227,10 +4135,10 @@ msgid "Please wait... Loading list..."
 msgstr "Por favor espere...a carregar a lista..."
 
 msgid "Plugin Browser"
-msgstr "Lista de Plugins"
+msgstr "Explorador de Plugins"
 
 msgid "Plugins Browser"
-msgstr "Lista de Plugins"
+msgstr "Gestão de Plugins"
 
 msgid "Plugin details"
 msgstr "Detalhes do Plugin"
@@ -4331,7 +4239,6 @@ msgstr "Prima OK para ativar as definições."
 msgid "Press OK to edit the settings."
 msgstr "Prima OK para editar as opções."
 
-#, python-format
 msgid "Press OK to get further details for %s"
 msgstr "Prima OK para receber detalhes de %s"
 
@@ -4411,21 +4318,20 @@ msgid "Provider to scan"
 msgstr "Operador a procurar"
 
 msgid "Provider: "
-msgstr "Operador:"
+msgstr "Operador: "
 
 msgid "Providers"
 msgstr "Operadores"
 
 msgid "Providers:"
-msgstr "Operadores"
+msgstr "Operadores:"
 
 msgid "Providers: "
-msgstr "Operadores "
+msgstr "Operadores: "
 
 msgid "Put TV in standby"
 msgstr "Colocar TV em espera"
 
-#, python-format
 msgid "Put your %s %s in standby"
 msgstr "Ponha a sua %s %s em espera"
 
@@ -4447,7 +4353,6 @@ msgstr "RGB"
 msgid "Random"
 msgstr "Aleatória"
 
-#, python-format
 msgid "Rating defined by broadcaster - %d"
 msgstr "Classificação definida pelo difusor - %d"
 
@@ -4455,7 +4360,7 @@ msgid "Rating undefined"
 msgstr "Classificação indefinida!"
 
 msgid "Read Userdata from oscam.conf"
-msgstr "Lê dados do usuário de oscam.conf"
+msgstr "Lê dados do utilizador de oscam.conf"
 
 msgid "Reader"
 msgstr "Leitor"
@@ -4463,11 +4368,9 @@ msgstr "Leitor"
 msgid "Reader Statistics"
 msgstr "Leitor Estatísticas"
 
-#, python-format
 msgid "Ready to install \"%s\" ?"
 msgstr "Está pronto para instalar \"%s\" ?"
 
-#, python-format
 msgid "Ready to remove \"%s\" ?"
 msgstr "Está pronto para desinstalar \"%s\" ?"
 
@@ -4483,7 +4386,6 @@ msgstr "Deseja realmente sair, dos subserviços?"
 msgid "Really reboot now?"
 msgstr "Reiniciar agora?"
 
-#, python-format
 msgid "Really reflash your %s %s and reboot now?"
 msgstr "Reinstalar a \"imagem\" na sua %s %s e reiniciar agora?"
 
@@ -4496,7 +4398,6 @@ msgstr "Desligar agora?"
 msgid "Really upgrade the frontprocessor and reboot now?"
 msgstr "Atualizar o frontprocessor e reiniciar agora?"
 
-#, python-format
 msgid "Really upgrade your %s %s and reboot now?"
 msgstr "Atualizar a sua %s %s  e reiniciar agora?"
 
@@ -4515,7 +4416,6 @@ msgstr "Gravar agora"
 msgid "Record started! Stopping timeshift now ..."
 msgstr "Gravação iniciada! O timeshift parou agora ..."
 
-#, python-format
 msgid "Record time limited due to conflicting timer %s"
 msgstr "Tempo de gravação limitado devido a conflito %s"
 
@@ -4552,7 +4452,6 @@ msgstr "Reduz a escala de tempo"
 msgid "Reenter new PIN"
 msgstr "Repetir novo PIN"
 
-#, python-format
 msgid ""
 "Reflash in progress\n"
 "Please wait until your %s %s reboots\n"
@@ -4634,7 +4533,6 @@ msgstr "A remover"
 msgid "Removing Service"
 msgstr "A remover Serviço"
 
-#, python-format
 msgid "Removing directory %s failed. (Maybe not empty.)"
 msgstr "A Remoção da pasta %s falhou.(Talvez não esteja vazia.)"
 
@@ -4650,7 +4548,6 @@ msgstr "Falhou a renomeação!"
 msgid "Rename to:"
 msgstr "Renomear para:"
 
-#, python-format
 msgid "Renamed %s!"
 msgstr "Renomeado %s!"
 
@@ -4732,7 +4629,6 @@ msgstr "A restaurar..."
 msgid "Resume from last position"
 msgstr "Retomar a partir da ultima posição"
 
-#, python-format
 msgid "Resume position at %s"
 msgstr "Posição de retoma em %s"
 
@@ -4877,13 +4773,9 @@ msgstr "Procura"
 msgid "Scan "
 msgstr "Procura"
 
-#. TRANSLATORS: option name, indicating which type of (DVB-C) modulation should be scanned. The modulation type is printed in '%s'. E.g.: 'Scan QAM16'
-#, python-format
 msgid "Scan %s"
 msgstr "Procura %s"
 
-#. TRANSLATORS: option name, indicating which type of (DVB-C) band should be scanned. The name of the band is printed in '%s'. E.g.: 'Scan EU MID band'
-#, python-format
 msgid "Scan %s band"
 msgstr "Procura %s banda"
 
@@ -4897,20 +4789,16 @@ msgid "Scan wireless networks"
 msgstr "Procura de Redes sem fios"
 
 msgid "Scan your network for wireless access points and connect to them using your selected wireless device.\n"
-msgstr "Procurar na sua rede por pontos de acesso, e conete-se a à rede sem sem fios  através do dispositivo wireless.\n"
+msgstr "Procurar na sua rede por pontos de acesso, e conete-se à rede sem fios através do dispositivo sem fio.\n"
 
-#, python-format
 msgid "Scanning %s..."
 msgstr "A Pesquisar %s..."
 
-#. TRANSLATORS: The stb is performing a channel scan, progress percentage is printed in '%d' (and '%%' will show a single '%' symbol)
-#, python-format
 msgid "Scanning - %d%% completed"
 msgid_plural "Scanning - %d%% completed"
 msgstr[0] "A Pesquisar - %d%% concluído"
 msgstr[1] "A Pesquisar - %d%% concluído"
 
-#, python-format
 msgid "Scanning completed, %d channel found"
 msgid_plural "Scanning completed, %d channels found"
 msgstr[0] "Pesquisa concluída, %d canal encontrado"
@@ -4985,7 +4873,6 @@ msgstr "Selecionar CAId's"
 msgid "Select a wireless network"
 msgstr "Selecione a Rede sem fios"
 
-#, python-format
 msgid "Select action for timer %s:"
 msgstr "Selecione a ação do Timer %s:"
 
@@ -5163,7 +5050,6 @@ msgstr "Definir como interface padrão"
 msgid "Set limits"
 msgstr "Definir Limites"
 
-#, python-format
 msgid "Set the MAC-address of your %s %s.\n"
 msgstr "Defina o endereço MAC da sua % s% s.\n"
 
@@ -5210,7 +5096,7 @@ msgid "Sets the root folder of movie list, to remove the '..' from benign shown
 msgstr "Define a pasta raiz da lista de filmes, para remover  '..' do princípio mostrado nessa pasta."
 
 msgid "Settings"
-msgstr "Definições"
+msgstr "Personalização"
 
 msgid "Settings Backup"
 msgstr "Backup das definições"
@@ -5230,12 +5116,11 @@ msgstr "Instalação do Posicionador"
 msgid "Setup your satellite equipment"
 msgstr "Instalação do equipamento de Satélite"
 
-#, python-format
 msgid "Shall the USB stick wizard proceed and program the image file %s into flash memory?"
-msgstr "Deverá o Assistente de PEN Drive proceder e programar o Arquivo de imagem %s na memoria flash?"
+msgstr "Deverá o Assistente de PEN Drive proceder e programar o arquivo de imagem %s na memória flash?"
 
 msgid "Share Folder's"
-msgstr "Pastas partilhadas"
+msgstr "Pasta(s) partilhada(s)"
 
 msgid "Share View"
 msgstr "Vista da Partilha"
@@ -5441,6 +5326,9 @@ msgstr "Longitude Local"
 msgid "Size: "
 msgstr "Total: "
 
+msgid "size: "
+msgstr "tamanho: "
+
 msgid "Skin Setting"
 msgstr "Definição da Skin"
 
@@ -5459,7 +5347,6 @@ msgstr "Slide de imagens em loop"
 msgid "Slide show interval (sec.)"
 msgstr "Intervalo do Slide de images (seg.)"
 
-#, python-format
 msgid "Slot %d"
 msgstr "Slot %d"
 
@@ -5526,7 +5413,6 @@ msgstr "Desculpe, os feeds são instáveis, se os pretende usar, por favor ative
 msgid "Sorry uShare Config is Missing"
 msgstr "Desculpe uShare Config não existe"
 
-#, python-format
 msgid "Sorry, %s has not been installed!"
 msgstr "Desculpe, %s não foi instalado!"
 
@@ -5540,7 +5426,7 @@ msgid ""
 "Sorry, your backup destination is not writeable.\n"
 "Please select a different one."
 msgstr ""
-"Desculpa, o destino de backup não é gravável.\n"
+"Desculpe, não pode escrever no destino do backup.\n"
 "Por favor selecione um diferente."
 
 msgid "Sort"
@@ -5759,7 +5645,6 @@ msgstr "Falha de sincronização ao voltar à origem !"
 msgid "System"
 msgstr "Sistema"
 
-#, python-format
 msgid "System temperature: %s"
 msgstr "Temperatura do Sistema: %s"
 
@@ -5771,7 +5656,14 @@ msgstr "TB"
 
 #. TRANSLATORS: Add here whatever should be shown in the "translator" about screen, up to 6 lines (use \n for newline)
 msgid "TRANSLATOR_INFO"
-msgstr "Tradução efetuada por BlackHole Team"
+msgstr ""
+"Tradução efetuada por:\n"
+"\n"
+"*** B L A C K H O L E    T E A M ***\n"
+"\n"
+"Revisão:        18 de Abril de 2020.\n"
+"\n"
+"Suporte em: https://www.vuplus-community.net"
 
 msgid "TS file is too large for ISO9660 level 1!"
 msgstr "O Arquivo TS é grande demais para ISO9660 level 1!"
@@ -5812,7 +5704,6 @@ msgstr "Operador Terrestre"
 msgid "Test DiSEqC settings"
 msgstr "Testar as definições de DISEqC"
 
-#, python-format
 msgid "Test the network configuration of your %s %s.\n"
 msgstr "Teste de configurações de Rede para a %s %s.\n"
 
@@ -5842,7 +5733,6 @@ msgstr ""
 "O plugin CoolTV Guide não está instalado!\n"
 "Por favor instale-o."
 
-#, python-format
 msgid "The DVD standard doesn't support H.264 (HDTV) video streams. Do you want to create a %s %s format data DVD (which will not play in stand-alone DVD players) instead?"
 msgstr "O padrão de DVD não oferece suporte a fluxos de vídeo H.264 (HDTV). Quer criar um %s %s formato DVD de dados (que não pode ser reproduzido em Leitores DVD) em vez disso?"
 
@@ -5890,7 +5780,6 @@ msgstr ""
 msgid "The current update may be unstable"
 msgstr "A presente atualização pode ser instável"
 
-#, python-format
 msgid ""
 "The directory %s is not a EXT2, EXT3, EXT4 or NFS partition.\n"
 "Make sure you select a valid partition type."
@@ -5898,15 +5787,13 @@ msgstr ""
 "A pasta %s não é uma partição EXT2, EXT3, EXT4 ou NFS.\n"
 "Certifique-se que seleciona um tipo de partição válida."
 
-#, python-format
 msgid ""
 "The directory %s is not writable.\n"
 "Make sure you select a writable directory instead."
 msgstr ""
-"Não é possivél escrever na pasta %s.\n"
+"Não é possível escrever na pasta %s.\n"
 "Selecione uma pasta que possa ser escrita."
 
-#, python-format
 msgid ""
 "The following device was found:\n"
 "\n"
@@ -5924,7 +5811,7 @@ msgid "The following files were found..."
 msgstr "Os seguintes arquivos foram encontrados..."
 
 msgid "The loopthrough setting is wrong."
-msgstr "A configuração loopthrough está errada"
+msgstr "A configuração de repetição está errada."
 
 msgid "The md5sum validation failed, the file may be corrupted!"
 msgstr "A validação md5 falhou, o arquivo deverá estar corrupto."
@@ -5936,14 +5823,12 @@ msgstr ""
 "A extensão do assistente de rede não está instalada!\n"
 "Por favor, instale-a."
 
-#, python-format
 msgid "The path %s already exists."
 msgstr "A pasta %s já existe."
 
 msgid "The pin code you entered is wrong."
 msgstr "o PIN que introduziu está errado."
 
-#, python-format
 msgid "The results have been written to %s."
 msgstr "Os resultados foram escritos em %s."
 
@@ -5960,11 +5845,9 @@ msgstr "O ficheiro Timer (timers.xml) esta corrompido e não pode ser carregado.
 msgid "The timer file (timers.xml) is corrupt and could not be loaded."
 msgstr "O Arquivo Timer (timers.xml) esta corrompido e não pode ser carregado."
 
-#, python-format
 msgid "The user interface of your %s %s is restarting"
 msgstr "A interface de utilizador da sua %s %s está a reiniciar."
 
-#, python-format
 msgid ""
 "The user interface of your %s %s is restarting\n"
 "due to an error in mytest.py"
@@ -5980,27 +5863,25 @@ msgstr ""
 "Por favor instale-o."
 
 msgid "The wizard can backup your current settings. Do you want to do a backup now?"
-msgstr "O assistente pode salvar os seus dados.Deseja salvá-los agora?"
+msgstr "O assistente pode salvar os seus dados. Deseja salvá-los agora?"
 
-#, python-format
 msgid "The wizard found a configuration backup. Do you want to restore your old settings from %s?"
 msgstr "O Assistente encontrou um backup de configurações. Deseja restaurar a configurações antigas presentes em %s?"
 
 msgid "There are at least "
 msgstr "Existem pelo menos"
 
-#, python-format
 msgid "There are at least %s updates available."
 msgstr "Existem pelo menos %s atualizações disponíveis."
 
 msgid "There are currently no outstanding actions."
-msgstr "Atualmente não existem acções pendentes."
+msgstr "Atualmente não existem ações pendentes."
 
 msgid "There are no updates available."
 msgstr "Não existem plugins disponíveis."
 
 msgid "There is no [webif] section in oscam.conf"
-msgstr "Não existe seção [webif] no oscam.conf."
+msgstr "Não existe secção [webif] no oscam.conf."
 
 msgid "There is no signal to lock on !"
 msgstr "Não há sinal detetado !"
@@ -6012,7 +5893,6 @@ msgstr ""
 "Não existe espaço suficiente na partição selecionada.\n"
 "Deseja continuar?"
 
-#, python-format
 msgid "This %s %s cannot decode %s streams!"
 msgstr "A sua %s %s não pode descodificar  %s transmissões!"
 
@@ -6077,16 +5957,16 @@ msgid "This option lets you adjust the 3D depth"
 msgstr "Esta opção permite ajustar a profundidade 3D"
 
 msgid "This option lets you adjust the transparency of the user interface"
-msgstr "Esta opção permite ajustar a transparência da interface do usuário"
+msgstr "Esta opção permite ajustar a transparência da interface do utilizador."
 
 msgid "This option lets you choose the 3D mode"
-msgstr "Esta opção permite-lhe escolher o modo 3D"
+msgstr "Esta opção permite-lhe escolher o modo 3D."
 
 msgid "This option lets you show the option in the extension screen"
-msgstr "Esta opção permite que mostre a opção no ecrã extensões"
+msgstr "Esta opção permite que mostre a opção no ecrã extensões."
 
 msgid "This option set the level of surpression of musquito noise (Musquito Noise is random aliasing as a result of strong compression). Obviously this goes at the cost of picture details."
-msgstr "Esta opção definir o nível de surpressão de ruído mosquito ( ruído Mosquito é randomizado aleatório como resultado de forte compressão ). Obviamente, à custa de detalhes da imagem."
+msgstr "Esta opção definir o nível de supressão de ruído mosquito ( ruído Mosquito é randomizado aleatório como resultado de forte compressão ). Obviamente, à custa de detalhes da imagem."
 
 msgid "This option sets  the picture contrast."
 msgstr "Esta opção define a imagem - contraste."
@@ -6115,7 +5995,6 @@ msgstr "Esta opção define a supressão dos contornos Digitas falsos, que são
 msgid "This option sets up the picture sharpness, used when the picture is being upscaled."
 msgstr "Esta opção configura a nitidez da imagem, usado quando a imagem utiliza \"upscaling\"."
 
-#, python-format
 msgid ""
 "This plugin creates a USB stick which can be used to update the firmware of your %s %s without the need for a network or WLAN connection.\n"
 "First, a USB stick needs to be prepared so that it becomes bootable.\n"
@@ -6272,7 +6151,7 @@ msgid "Timer type"
 msgstr "Tipo de Timer"
 
 msgid "Timers"
-msgstr "Timers"
+msgstr "Gestão de Timers"
 
 msgid "Timeshift"
 msgstr "Timeshift"
@@ -6307,7 +6186,6 @@ msgstr "Propriedades de título"
 msgid "Titleset mode"
 msgstr "Modo de definição de título"
 
-#, python-format
 msgid ""
 "To update your %s %s firmware, please follow these steps:\n"
 "1) Turn off your box with the rear power switch and make sure the bootable USB stick is plugged in.\n"
@@ -6440,10 +6318,16 @@ msgid "Tuner setup"
 msgstr "Definições do Tuner"
 
 msgid "Tuner settings values"
-msgstr "Dados definidos Tuner"
+msgstr "Dados definidos"
+
+msgid "Tuner live values"
+msgstr "Dados Reais"
+
+msgid "Tuning info: live values"
+msgstr "Info Sintonia: Valores reais"
 
 msgid "Tuning info: settings values"
-msgstr "Info Sintonia: Dados definidos"
+msgstr "Info Sintonia: Valores definidos"
 
 msgid "Service & PIDs"
 msgstr "Serviço e PIDs"
@@ -6544,13 +6428,11 @@ msgstr "Atualizar"
 msgid "Update channel list only"
 msgstr "Só atualizar lista de canais"
 
-#, python-format
 msgid "Update completed, %d package was installed."
 msgid_plural "Update completed, %d packages were installed."
 msgstr[0] "Atualização completa, %d pacote foi instalado."
 msgstr[1] "Atualização completa, %d pacotes foram instalados."
 
-#, python-format
 msgid "Update failed. Your %s %s does not have a working internet connection."
 msgstr "Falha na atualização. A sua %s %s não consegue ligar-se à internet."
 
@@ -6558,7 +6440,7 @@ msgid "Update interval (in seconds)"
 msgstr "Intervalo de atualização (em segundos) "
 
 msgid "Updatefeed not available."
-msgstr "Servidor de atualizações não disponével"
+msgstr "Servidor de atualizações não disponível"
 
 msgid "Updating software catalog"
 msgstr "A atualizar o catalogo de software"
@@ -6569,7 +6451,6 @@ msgstr "Atualizar e reiniciar o sistema"
 msgid "Upgrade finished."
 msgstr "Atualização terminou."
 
-#, python-format
 msgid ""
 "Upgrade in progress\n"
 "Please wait until your %s %s reboots\n"
@@ -6607,10 +6488,10 @@ msgid "Use USALS for this sat"
 msgstr "Usar USALS para este Satélite"
 
 msgid "Use WOL"
-msgstr "Use WOL"
+msgstr "Usar WOL"
 
 msgid "Use a gateway"
-msgstr "Use gateway"
+msgstr "Usar gateway"
 
 msgid "Use fastscan channel names"
 msgstr "Usar o nome dos canais da procura rapida"
@@ -6640,7 +6521,7 @@ msgid "Use the Left/Right buttons on your remote to adjust the size of the user
 msgstr "Usar os botões esquerdo/direito do telecomando para ajustar o tamanho da interface do usuário. O ESQUERDO diminui o tamanho, o DIREITO aumenta o tamanho."
 
 msgid "Use the Left/Right buttons on your remote to move the user interface up/down"
-msgstr "Usar os botões esquerdo/direito do telecomando para mover a interface de usuário para cima/para baixo"
+msgstr "Usar os botões esquerdo/direito do telecomando para mover a interface de utilizador para cima/para baixo"
 
 msgid "Use the Left/Right buttons on your remote to move the user interface left/right"
 msgstr "Use os botões esquerdo/direito do telecomando para mover a interface do utilizador esquerda/direita"
@@ -6670,13 +6551,13 @@ msgid "Used:"
 msgstr "Usado:"
 
 msgid "User - bouquets"
-msgstr "Bouquets do Usuário"
+msgstr "Bouquets do Utilizador"
 
 msgid "User defined"
 msgstr "Definições do utilizador"
 
 msgid "User defined transponder"
-msgstr "Transponder definido pelo usuário"
+msgstr "Transponder definido pelo utilizador"
 
 msgid "User interface visibility"
 msgstr "Visibilidade da Interface do Utilizador"
@@ -6690,7 +6571,6 @@ msgstr "Utilizador (httpuser)"
 msgid "Username:"
 msgstr "Utilizador:"
 
-#, python-format
 msgid "Using LNB %d"
 msgstr "A usar LNB %d"
 
@@ -6700,21 +6580,18 @@ msgstr "Usar endereço fixo"
 msgid "Using old profile: "
 msgstr "A usar perfil velho:"
 
-#, python-format
 msgid "Using tuner %s"
 msgstr "A usar tuner %s"
 
 msgid "VMGM (intro trailer)"
 msgstr "VMGM (trailer de intro)"
 
-#, python-format
 msgid "Version:\t%s"
 msgstr "Versão:\t%s"
 
 msgid "Version: "
 msgstr "Versão:"
 
-#, python-format
 msgid "Version: %s"
 msgstr "Versão:\t%s"
 
@@ -6736,7 +6613,6 @@ msgstr "PID de Vídeo"
 msgid "Video PID:"
 msgstr "PID de Vídeo"
 
-#, python-format
 msgid "Video content: %ix%i%s %iHz"
 msgstr "Vídeo Conteúdo: %ix%i%s %iHz"
 
@@ -6752,7 +6628,6 @@ msgstr "Vídeo ajuste fino"
 msgid "Video fine-tuning"
 msgstr "Vídeo fine-tuning"
 
-#, python-format
 msgid "Video mode: %s"
 msgstr "Modo de Vídeo: %s"
 
@@ -6765,7 +6640,6 @@ msgstr "Instalação de Vídeo"
 msgid "Video wizard"
 msgstr "Assistente de vídeo"
 
-#, python-format
 msgid "Video: %s fps"
 msgstr "Vídeo: %s fps"
 
@@ -6818,10 +6692,10 @@ msgid "View list of available default settings"
 msgstr "Ver lista de configurações padrão disponíveis"
 
 msgid "View list of available display and userinterface extensions."
-msgstr "Ver lista de extensões de exibição e interface do usuário disponíveis."
+msgstr "Ver lista de exibição e extensões de interface do utilizador disponíveis."
 
 msgid "View list of available multimedia extensions."
-msgstr "Ver lista de extensões de Multimedia disponíveis"
+msgstr "Ver lista de extensões de Multimédia disponíveis"
 
 msgid "View list of available networking extensions"
 msgstr "Ver lista de extensões de Rede disponíveis"
@@ -6916,7 +6790,6 @@ msgstr "Acordar TV da Espera"
 msgid "Wakeup signal from TV"
 msgstr "Sinal de acordar da TV"
 
-#, python-format
 msgid "Wakeup your %s %s from standby"
 msgstr "Acordar a sua %s %s do Modo de Espera"
 
@@ -6970,10 +6843,10 @@ msgid "What Day of week ?"
 msgstr "Qual o dia da semana ?"
 
 msgid "What action is required on completion of the timer? 'Auto' lets the box return to the state it had when the timer started. 'Do nothing', 'Go to standby' and 'Go to deep standby' do ecaxtly that."
-msgstr "Que medidas são necessárias à conclusão do timer? 'Auto' permite o regresso da STB ao estado que tinha quando o TIMER começou. \"Não fazer nada ',' Vai para o modo de espera\" e \"Vai para Suspennsão\" fazer exatamente isso."
+msgstr "Que medidas são necessárias à conclusão do timer? 'Auto' permite o regresso da STB ao estado que tinha quando o TIMER começou. \"Não fazer nada ',' Vai para o modo de espera\" e \"Vai para Suspensão\" fazer exatamente isso."
 
 msgid "What date of month ?"
-msgstr "Qual a data do mês ?"
+msgstr "Qual a data do mês?"
 
 msgid "When enabled, content with an aspect ratio of 4:3 will be stretched to fit the screen."
 msgstr "Quando ativo, o conteúdo com uma proporção de 4:3 vai ser esticado no ecrã."
@@ -6993,7 +6866,6 @@ msgstr "Quando o conteúdo tem uma relação de aspeto de 16:9, escolha escalar/
 msgid "When the content has an aspect ratio of 4:3, choose whether to scale/stretch the picture."
 msgstr "Quando o conteúdo tem uma proporção de 4:3, escolha escalar/esticar a imagem."
 
-#, python-format
 msgid ""
 "When you do a factory reset, you will lose ALL your configuration data\n"
 "(including bouquets, services, satellite data ...)\n"
@@ -7003,7 +6875,7 @@ msgid ""
 msgstr ""
 "Quando faz um reset de fábrica, vai perder todos os seus dados de configuração\n"
 "(Incluindo bouquets, serviços, dados de satélite ...)\n"
-"Após a conclusão do restauro de fábrica, a sua% s% s irá reiniciar automáticamente!\n"
+"Após a conclusão do restauro de fábrica, a sua% s% s irá reiniciar automaticamente!\n"
 "\n"
 "Tem a certeza que quer efetuar um reset de fábrica?"
 
@@ -7041,9 +6913,8 @@ msgid "Without popup"
 msgstr "Sem pop-up"
 
 msgid "Write error while recording. Disk full?\n"
-msgstr "Erro ao gravar.Disco cheio?\n"
+msgstr "Erro ao gravar. Disco cheio?\n"
 
-#, python-format
 msgid ""
 "Write error while recording. Disk full?\n"
 "%s"
@@ -7090,7 +6961,6 @@ msgstr "Sim, voltar à  lista de filmes"
 msgid "Yesterday"
 msgstr "Ontem"
 
-#, python-format
 msgid ""
 "You already have a bootlogo installed,\n"
 "would you like to remove\n"
@@ -7100,7 +6970,6 @@ msgstr ""
 "deseja removê-lo\n"
 "\"%s\"?"
 
-#, python-format
 msgid ""
 "You already have a channel list installed,\n"
 "would you like to remove\n"
@@ -7125,7 +6994,6 @@ msgstr "Pode desabilitar o servidor Telnet e usar ssh para iniciar sessão."
 msgid "You can install this plugin."
 msgstr "Pode instalar este plugin."
 
-#, python-format
 msgid "You can only burn %s %s recordings!"
 msgstr "Só pode gravar %s %s gravações!"
 
@@ -7164,7 +7032,6 @@ msgstr "Não selecionou logs para apagar."
 msgid "You have selected no logs to send."
 msgstr "Não selecionou qualquer log para enviar"
 
-#, python-format
 msgid "You have to wait %s!"
 msgstr "Tem de esperar por  %s!"
 
@@ -7177,11 +7044,9 @@ msgstr "Parece estar em Timeshift! Pretende fechar o Timeshift ?"
 msgid "You system does not support ext4"
 msgstr "O seu sistema não suporta ext4"
 
-#, python-format
 msgid "Your %s %s is not connected to the internet, please check your network settings and try again."
 msgstr "A sua %s %s não está ligada à Internet, verifique as configurações de rede e tente novamente."
 
-#, python-format
 msgid ""
 "Your %s %s is now ready to be used.\n"
 "\n"
@@ -7193,19 +7058,15 @@ msgstr ""
 "A sua ligação à Internet está a funcionar agora.\n"
 "\n"
 
-#, python-format
 msgid "Your %s %s is rebooting"
 msgstr "A sua %s %s vai reiniciar..."
 
-#, python-format
 msgid "Your %s %s is shutting down"
 msgstr "A sua %s %s está a desligar..."
 
-#, python-format
 msgid "Your %s %s might be unusable now. Please consult the manual for further assistance before rebooting your %s %s."
 msgstr "A sua %s %s não pode ser usada agora. Por favor consulte o manual para obter mais assistência antes de reiniciar a sua %s %s."
 
-#, python-format
 msgid ""
 "Your %s %s will be restarted after the installation of service\n"
 "Ready to install \"%s\" ?"
@@ -7213,7 +7074,6 @@ msgstr ""
 "A sua %s %s será reiniciada após a instalação do serviço\n"
 "Pronto para instalar \"%s\"?"
 
-#, python-format
 msgid ""
 "Your %s %s will be restarted after the installation of service.\n"
 "\n"
@@ -7223,7 +7083,6 @@ msgstr ""
 "\n"
 " Deseja instalar agora ?"
 
-#, python-format
 msgid ""
 "Your %s %s will be restarted after the removal of service\n"
 "Do you want to remove now ?"
@@ -7237,7 +7096,6 @@ msgstr "A sua STB será reiniciada, após pressionar OK no telecomando."
 msgid "Your collection exceeds the size of a single layer medium, you will need a blank dual layer DVD!"
 msgstr "A colecção excede o tamanho de  um DVD, vai ser necessário um DVD de dupla camada!"
 
-#, python-format
 msgid ""
 "Your config file is not well-formed:\n"
 "%s"
@@ -7255,17 +7113,15 @@ msgstr ""
 "O seu processador deve ser atualizado.\n"
 "Prima OK para iniciar"
 
-#, python-format
 msgid ""
 "Your frontprocessor will be upgraded\n"
 "Please wait until your %s %s reboots\n"
 "This may take a few minutes"
 msgstr ""
-"O seu Processador será altualizado\n"
+"O seu Processador será atualizado\n"
 "Por favor espere até que a %s %s reinicie\n"
 "Esta operação poderá demorar alguns minutos"
 
-#, python-format
 msgid "Your internet connection is working (ip: %s)"
 msgstr "A Sua conexão de internet está a funcionar (ip: %s)"
 
@@ -7429,7 +7285,7 @@ msgid "Auto Volume Label"
 msgstr "Nível do volume automático (som)"
 
 msgid "This option configures output for Auto Volume Level"
-msgstr "Esta opção permite-lhe oonfigurar o nível de saída do volume em modo automático (som)"
+msgstr "Esta opção permite-lhe configurar o nível de saída do volume em modo automático (som)"
 
 msgid "back"
 msgstr "voltar"
@@ -7440,7 +7296,6 @@ msgstr "imagem de fundo"
 msgid "ballet"
 msgstr "Ballet"
 
-#, python-format
 msgid "bc%s"
 msgstr "bc%s"
 
@@ -7522,7 +7377,6 @@ msgstr "copiar para bouquets"
 msgid "create directory"
 msgstr "criar pasta"
 
-#, python-format
 msgid "currently installed image: %s"
 msgstr "Imagem instalada atualmente: %s"
 
@@ -7822,7 +7676,10 @@ msgid "locked"
 msgstr "detetado"
 
 msgid "loopthrough to"
-msgstr "loopthrough para"
+msgstr "Repetir para"
+
+msgid "Loop through from"
+msgstr "Repetir a partir do:"
 
 msgid "magazines/reports/documentary"
 msgstr "Revistas/Relatórios/Documentários"
@@ -7924,7 +7781,7 @@ msgid "no or unknown card inserted"
 msgstr "Cartão não inserido ou inválido!"
 
 msgid "no storage devices found"
-msgstr "despositivos de armazenamento não encontrados "
+msgstr "Dispositivos de armazenamento não encontrados."
 
 msgid "none"
 msgstr "nenhum"
@@ -7963,7 +7820,7 @@ msgid "on"
 msgstr "ligado"
 
 msgid "on READ ONLY medium."
-msgstr "em SÓ LEITURA medio."
+msgstr "em SÓ LEITURA Media."
 
 msgid "once"
 msgstr "Uma só vez"
@@ -8020,10 +7877,10 @@ msgid "pre-school children's program"
 msgstr "programas para crianças pré-escolares"
 
 msgid "provid:"
-msgstr "provid:"
+msgstr "operador:"
 
 msgid "provider:"
-msgstr "Operador:"
+msgstr "Operador: "
 
 msgid "reboot system"
 msgstr "reiniciar o sistema"
@@ -8158,43 +8015,43 @@ msgid "show EPG..."
 msgstr "Exibe EPG"
 
 msgid "show all cards"
-msgstr "mostrar todos os cartões:"
+msgstr "Mostrar todos os cartões:"
 
 msgid "show all tags"
-msgstr "mostrar todas as marcas"
+msgstr "Mostrar todas as marcas"
 
 msgid "show alternatives"
-msgstr "ver alternativas"
+msgstr "Ver alternativas"
 
-msgid "show cards with uphop 0"
-msgstr "mostrar cartões com uphop 0"
+msgid "how cards with uphop 0"
+msgstr "Mostrar cartões com uphop 0"
 
 msgid "show cards with uphop 1"
-msgstr "mostrar cartões com uphop 1"
+msgstr "Mostrar cartões com uphop 1"
 
 msgid "show cards with uphop 2"
-msgstr "mostrar cartões com uphop 2"
+msgstr "Mostrar cartões com uphop 2"
 
 msgid "show cards with uphop 3"
 msgstr "mostrar cartões com uphop 3"
 
 msgid "show cards with uphop 4"
-msgstr "mostrar cartões com uphop 4"
+msgstr "Mostrar cartões com uphop 4"
 
 msgid "show cards with uphop 5"
-msgstr "mostrar cartões com uphop 5"
+msgstr "Mostrar cartões com uphop 5"
 
 msgid "show cards with uphop 6"
-msgstr "mostrar cartões com uphop 6"
+msgstr "Mostrar cartões com uphop 6"
 
 msgid "show cards with uphop 7"
-msgstr "mostrar cartões com uphop 7"
+msgstr "Mostrar cartões com uphop 7"
 
 msgid "show cards with uphop 8"
-msgstr "mostrar cartões com uphop 8"
+msgstr "Mostrar cartões com uphop 8"
 
 msgid "show cards with uphop 9"
-msgstr "mostrar cartões com uphop 9"
+msgstr "Mostrar cartões com uphop 9"
 
 msgid "show event details"
 msgstr "Exibe detalhes do programa"
@@ -8212,7 +8069,7 @@ msgid "show softwaremanager on blue button"
 msgstr "Exibe a Gestão de software com tecla AZUL"
 
 msgid "show transponder info"
-msgstr "mostrar a info do transponder "
+msgstr "Mostrar a info do transponder "
 
 msgid "show/game show (general)"
 msgstr "jogo/desafio/concurso (geral)"
@@ -8436,7 +8293,6 @@ msgstr "Desportos de inverno"
 msgid "wireless network interface"
 msgstr "interface de rede sem fios"
 
-#, python-format
 msgid "with %d error"
 msgid_plural "with %d errors"
 msgstr[0] "com %d erro"
@@ -8572,7 +8428,7 @@ msgid "OpenVPN setup"
 msgstr "OpenVPN Rede Privada Virtual"
 
 msgid "Plugins"
-msgstr "Lista de Plugins"
+msgstr "Gestão de Plugins"
 
 msgid "Position setup"
 msgstr "Ajustar tamanho do Ecrã"
@@ -8653,9 +8509,7 @@ msgid "Allow subtitles for hearing impaired"
 msgstr "Permitir legendas para deficientes auditivos"
 
 msgid "Allow unstable (experimental) updates"
-msgstr ""
-"Permitir atualizações ( experimentais )\n"
-" instáveis"
+msgstr "Permitir atualizações (experimentais) instáveis"
 
 msgid "Allows more detailed information to be in the crash log"
 msgstr "Permite um crash log com informação mais detalhada "
@@ -8700,16 +8554,16 @@ msgid "Always show bouquets"
 msgstr "Exibe sempre os bouquets"
 
 msgid "Audio language selection 1"
-msgstr "Idioma de audio 1"
+msgstr "Idioma de áudio 1"
 
 msgid "Audio language selection 2"
-msgstr "Idioma de audio 2"
+msgstr "Idioma de áudio 2"
 
 msgid "Audio language selection 3"
-msgstr "Idioma de audio 3"
+msgstr "Idioma de áudio 3"
 
 msgid "Audio language selection 4"
-msgstr "Idioma de audio 4"
+msgstr "Idioma de áudio 4"
 
 msgid "Auto language selection"
 msgstr "Seleção do Idioma Automático"
@@ -8808,7 +8662,7 @@ msgid "Channel list service mode*"
 msgstr "Modo de serviço Lista de Canais*"
 
 msgid "Channel preview mode"
-msgstr "Canais modo de previsualização"
+msgstr "Canais modo de pré-visualização"
 
 msgid "Channel selection settings"
 msgstr "Definição da Seleção de Canais"
@@ -8898,7 +8752,7 @@ msgid "Configure the behavior when reaching the end of a movie, during movie pla
 msgstr "Configura o comportamento quando chegar ao final de um filme, durante a reprodução do filme."
 
 msgid "Configure the border width of the subtitles. The dark border makes the subtitles easier to read on a light background."
-msgstr "Configura a largura da borda das legendas. A borda escura faz com que as legendas sejam mais fáceis de lern um fundo claro."
+msgstr "Configura a largura da borda das legendas. A borda escura faz com que as legendas sejam mais fáceis de ler em fundo claro."
 
 msgid "Configure the brightness level of the front panel display for normal operation."
 msgstr "Configura o nível de brilho do visor do painel frontal em operação normal."
@@ -8976,10 +8830,10 @@ msgid "Configure the netmask."
 msgstr "Configura a máscara de rede."
 
 msgid "Configure the number of days after which items are automatically removed from the trash can."
-msgstr "Configura o número de dias após o qual os itens são removidos automáticamente da reciclagem."
+msgstr "Configura o número de dias após o qual os itens são removidos automaticamente da reciclagem."
 
 msgid "Configure the number of days old timers are kept before they are automatically removed from the timer list."
-msgstr "Configura o número de dias para manter os timers. Serão removidos automáticamente da lista de timers."
+msgstr "Configura o número de dias para manter os timers. Serão removidos automaticamente da lista de timers."
 
 msgid "Configure the number of rows shown."
 msgstr "Configura o número de linhas exibidas."
@@ -9156,7 +9010,7 @@ msgid "Enter your e-mail address to send a copy of the log to."
 msgstr "Digite seu endereço de e-mail para enviar uma cópia do log para."
 
 msgid "Enter your forum user name, to make it easier to trace logs."
-msgstr "Digite o seu nome de usuário do fórum, para tornar mais fácil o rastreamento de logs."
+msgstr "Digite o seu nome de utilizador do fórum, para tornar mais fácil o rastreamento de logs."
 
 msgid "Event font size"
 msgstr "Tamanho da fonte do evento"
@@ -9168,7 +9022,7 @@ msgid "Fast forward speeds"
 msgstr "Velocidade de avanço rápido"
 
 msgid "Finetune"
-msgstr "Sintonizar fino"
+msgstr "Sintonia fina"
 
 msgid "Graphical Infobar EPG settings"
 msgstr "EPG Configuração Gráfica Infobar"
@@ -9231,7 +9085,7 @@ msgid "If set to 'yes' you can preview channels in the EPG list."
 msgstr "Se definido para 'Sim', pode visualizar canais na lista EPG."
 
 msgid "If set to 'yes' you can preview channels in the channel list. Press 'OK' to preview the selected channel, press a 2nd 'OK' to exit and zap to that channel, pressing 'EXIT' to return to the channel you started at."
-msgstr "Se definido para 'Sim', pode visualizar canais na lista de canais. Pressione 'OK' para visualizar o canal selecionado, pressione um 2º 'OK' para sair e zap para esse canal, pressionar'EXIT' para retornar ao canal a que começou."
+msgstr "Se definido para 'Sim', pode visualizar canais na lista de canais. Pressione 'OK' para visualizar o canal selecionado, pressione um 2º 'OK' para sair e zap para esse canal, pressionar 'EXIT' para retornar ao canal a que começou."
 
 msgid "If set to 'yes', allows you to use the seekbar to jump to a point within the event."
 msgstr "Se definido para 'Sim', permite usar a seekbar para pular para um ponto dentro do evento."
@@ -9375,13 +9229,13 @@ msgid "Position of finished Timers in the Timer list"
 msgstr "Posição de TIMERS terminados na lista de Timers"
 
 msgid "Prefer AC3 track"
-msgstr "Preferir a trilha AC3"
+msgstr "Preferir a faixa AC3"
 
 msgid "Prefer AC3+ track"
-msgstr "Preferir a trilha AC3+"
+msgstr "Preferir a faixa AC3+"
 
 msgid "Prefer audio track stored by service"
-msgstr "Preferir a trilha de áudio emitida pelo serviço"
+msgstr "Preferir a faixa de áudio emitida pelo serviço"
 
 msgid "Prefer graphical DVB subtitles"
 msgstr "Preferir legendas gráficas DVB"
@@ -9411,7 +9265,7 @@ msgid "Recordings always have priority"
 msgstr "Gravações têm sempre prioridade"
 
 msgid "Refresh every (in hours)"
-msgstr "Refrescar todas ( em horas )"
+msgstr "Refrescar todas (em horas)"
 
 msgid "Remove completed timers after (days)"
 msgstr "Remover Timers completos depois (dias)"
@@ -9438,10 +9292,10 @@ msgid "Scrolling Speed"
 msgstr "Velocidade de Rolagem"
 
 msgid "Scrolling Speed (software render)"
-msgstr "Velocidade de Rolagem ( software de renderização )"
+msgstr "Velocidade de Rolagem (software de renderização)"
 
 msgid "Scrolling delay (software render)"
-msgstr "Atraso de rolagem ( software de renderização )"
+msgstr "Atraso de rolagem (software de renderização)"
 
 msgid "Seekbar activation"
 msgstr "Ativação da barra de procura"
@@ -9807,7 +9661,7 @@ msgid "This option allows you to choose what the first button press jumps to in
 msgstr "Esta opção permite que escolha o que salta ao pressionar a tecla na lista de canais, (então pressione '2' para 'A' ou '2' primeiro)"
 
 msgid "This option allows you to disable sorting of the menus"
-msgstr "Esta opção permite que desative a oredenação dos menus"
+msgstr "Esta opção permite que desative a ordenação dos menus"
 
 msgid "This option allows you to disable sorting of the option in setting screens"
 msgstr "Esta opção permite que desative a ordenação da opção na definição de ecrãs"
@@ -9855,7 +9709,7 @@ msgid "Use Netmed EPG information when it is available."
 msgstr "Usa informação Netmed EPG quando disponível."
 
 msgid "Use Obh colored Buttons*"
-msgstr "Use OBH coloured Buttons*"
+msgstr "Use os botões coloridos da Open BlackHole*"
 
 msgid "Use ViaSat EPG information when it is available."
 msgstr "Usa informação ViaSAT EPG quando disponível."
@@ -9867,10 +9721,10 @@ msgid "Use original teletext position"
 msgstr "Usar a posição original do teletexto"
 
 msgid "Use the alternative or the conventional radio mode."
-msgstr "Usa o alternativo ou convencional modo de rádio."
+msgstr "Usa o modo de rádio alternativo ou convencional."
 
 msgid "Use timeshift seekbar while timeshifting?"
-msgstr "Usar o timeshift seekbar enquanto timeshifting?"
+msgstr "Usar a barra de procura timeshift enquanto timeshifting?"
 
 msgid "Use trash can in movielist"
 msgstr "Usar reciclagem na Lista de Filmes"
@@ -9903,7 +9757,7 @@ msgid "When enabled, a recording is allowed to interrupt live TV, when there are
 msgstr "Quando ativo, a uma gravação é permitido interromper TV ao vivo, quando não houver Tuners livres."
 
 msgid "When enabled, a warning will be displayed and the user will get an option to stop or to continue the timeshift."
-msgstr "Quando ativo, será exibido um aviso e o usuário vai ter uma opção para parar ou continuar o timeshift."
+msgstr "Quando ativo, será exibido um aviso e o utilizador vai ter uma opção para parar ou continuar o timeshift."
 
 msgid "When enabled, channel numbering will start at '1' for every bouquet."
 msgstr "Quando ativo, a numeração dos canais começará em '1' para cada bouquet."
@@ -9936,7 +9790,7 @@ msgid "When enabled, measure power consumption to detect when the rotor stops tu
 msgstr "Quando ativo, medir o consumo de energia para detectar quando o rotor parar de rodar (quando suportado pelo tuner)."
 
 msgid "When enabled, network trash cans are probed for cleaning."
-msgstr "Quando ativo, reciclagem da rede será analisada para a limpeza."
+msgstr "Quando ativo, a reciclagem de rede será analisada para limpeza."
 
 msgid "When enabled, pressing '0' will zap you to the first channel in your first bouquet and delete your zap-history."
 msgstr "Quando ativo, pressionar '0' fará zap para o primeiro canal do seu primeiro bouquet e apaga o histórico do zap."
@@ -9969,16 +9823,16 @@ msgid "When enabled, the original line breaks will be removed from the teletext
 msgstr "Quando ativo, as quebras de linha original serão removidas das legendas de teletexto."
 
 msgid "When enabled, the receiver will automatically use the audio track which you selected before."
-msgstr "Quando ativo, o recetor automáticamente usará a faixa de áudio que selecionou antes."
+msgstr "Quando ativo, o recetor automaticamente usará a faixa de áudio que selecionou antes."
 
 msgid "When enabled, the receiver will automatically use the subtitles which you selected before."
-msgstr "Quando ativo, o recetor automáticamente usará as legendas que selecionou antes."
+msgstr "Quando ativo, o recetor automaticamente usará as legendas que selecionou antes."
 
 msgid "When enabled, the receiver will select an AC3 track (when available)."
 msgstr "Quando ativo, o recetor irá selecionar uma faixa de AC3 (se disponível)."
 
 msgid "When enabled, timeshift starts automatically in background after the specified time."
-msgstr "Quando ativo, o timeshift inicia-se automáticamente em segundo plano após o tempo especificado."
+msgstr "Quando ativo, o timeshift inicia-se automaticamente em segundo plano após o tempo especificado."
 
 msgid "When enabled, use DHCP for the IP configuration."
 msgstr "Quando ativo, usa o DHCP para a configuração de IP."
@@ -10007,13 +9861,13 @@ msgid "Yellow DVB subtitles"
 msgstr "Legendas DVB em amarelo"
 
 msgid "You can have the list sorted by time or alphanumerical."
-msgstr "Pode ter a lista ordenada por tempo ou alfanuméricamente."
+msgstr "Pode ter a lista ordenada por tempo ou alfanumericamente."
 
 msgid "Zap mode"
 msgstr "Modo Zap"
 
 msgid "e-mail address"
-msgstr "e-mail endereço"
+msgstr "endereço de e-mail"
 
 msgid "show picons in service list"
 msgstr "Exibe picons na Lista de Serviços"
@@ -10057,6 +9911,13 @@ msgstr "Configura tuner D"
 msgid "Skip internet connection check (disables automatic package installation)"
 msgstr "Ignorar a verificação de conexão de internet (desativa a instalação automática de pacotes)"
 
+msgid ""
+"This start wizard will guide you through the basic setup of your %s %s.\n"
+"Press the OK button on your remote control to move to the next step."
+msgstr ""
+"Este Iniciar assistente irá guiá-lo através da configuração básica da sua %s %s.\n"
+"Pressione a tecla OK no seu telecomando para ir avançar para o passo seguinte."
+
 msgid ""
 "Thank you for using the wizard. Your %s %s is now ready to use.\n"
 "Please press OK to start using your %s %s."
@@ -10065,24 +9926,11 @@ msgstr ""
 "Por favor pressione OK para começar a usar a sua %s %s."
 
 msgid "Use the up/down keys on your remote control to select an option. After that, press OK."
-msgstr ""
-"Use os botões cima/baixo do seu comando para selecionar.\n"
-"Depois prima OK"
+msgstr "Use os botões cima/baixo do seu comando para selecionar a opção. Depois disso, prima OK"
 
 msgid "Use the wizard to set up basic features"
 msgstr "Use o assistente para instalar as caraterísticas básicas"
 
-msgid ""
-"Welcome.\n"
-"\n"
-"This start wizard will guide you through the basic setup of your %s %s.\n"
-"Press the OK button on your remote control to move to the next step."
-msgstr ""
-"Bem-vindo.\n"
-"\n"
-"Este Iniciar assistente irá guiá-lo através da configuração básica da sua %s %s.\n"
-"Pressione a tecla OK no seu telecomando para ir para avançar."
-
 msgid "What do you want to scan?"
 msgstr "O que deseja procurar?"
 
@@ -10105,7 +9953,7 @@ msgid ""
 "Please setup your user interface by adjusting the values till the edges of the blue box are touching the edges of your TV.\n"
 "When you are ready press OK to continue."
 msgstr ""
-"Por favor configure a sua interface do usuário, ajustando os valores até que as bordas da caixa azul toquem nass bordas de sua TV.\n"
+"Por favor configure a sua interface do utlizador, ajustando os valores até que as bordas da caixa azul toquem nas bordas de sua TV.\n"
 "Quando estiver pronto, pressione OK para continuar."
 
 msgid "Refresh rate selection."
@@ -10131,7 +9979,7 @@ msgstr ""
 "\n"
 "Por favor pressione OK se  pode ver esta página na sua TV (ou selecione uma porta de entrada diferente).\n"
 "\n"
-"A próxima Porta de entrada vai ser sondada automáticamente em 20 segundos."
+"A próxima Porta de entrada vai ser sondada automaticamente em 20 segundos."
 
 msgid "Video mode selection."
 msgstr "Seleção do modo de vídeo"
@@ -10152,7 +10000,7 @@ msgid ""
 "Please configure or verify your Nameservers by filling out the required values.\n"
 "When you are ready press OK to continue."
 msgstr ""
-"Por favor configure ou veriique o servidor DNS preenchendo os valores requeridos.\n"
+"Por favor configure ou verifique o servidor DNS preenchendo os valores requeridos.\n"
 "Quando estiver pronto prima OK."
 
 msgid ""
@@ -10245,7 +10093,7 @@ msgid ""
 "\n"
 "Please choose what you want to do next."
 msgstr ""
-"A ligação sem fios de internet não foi establecida!\n"
+"A ligação sem fios de internet não foi estabelecida!\n"
 "A Pen USB WLAN foi inserida?\n"
 "\n"
 "Por favor escolha o que fazer a seguir."
@@ -10275,7 +10123,53 @@ msgid "The wizard is finished now."
 msgstr "O assitente terminou."
 
 msgid "Welcome to the image upgrade wizard. The wizard will assist you in upgrading the firmware of your %s %s by providing a backup facility for your current settings and a short explanation of how to upgrade your firmware."
-msgstr "Bem-vindo ao assistente de atualização de imagem. O assistente ajudar-lo-á a atualizar o firmware da sua %s %s, fornecendo uma instalação de backup de suas configurações atuais e uma breve explicação de como atualizar seu firmware."
+msgstr "Bem-vindo ao assistente de atualização de imagem. O assistente ajudá-lo-á a atualizar o firmware da sua %s %s, fornecendo uma instalação de backup de suas configurações atuais e uma breve explicação de como atualizar seu firmware."
+
+msgid ""
+"Welcome to OpenBlackHole!\n"
+"\n"
+"NOTE: This section of the wizard is intended for people who cannot disable overscan on their television / display.  Please first try to disable overscan before using this feature.\n"
+"\n"
+"USAGE: If you continue adjust the screen size and position settings so that the shaded user interface layer *just* covers the test pattern in the background.\n"
+"\n"
+"Select Yes to change these settings or No to skip this step."
+msgstr ""
+"Bem-vindos à Open BlackHole!\n"
+"\n"
+"NOTA: Esta secção do assistente destina-se a pessoas que não podem desativar a varredura na sua televisão/ecrã.  Por favor, tente primeiro desativar a varredura antes de usar este recurso.\n"
+"\n"
+"USO: Continue a ajustar o tamanho da tela e as configurações de posição para que a camada de interface do utilizador sombreada *apenas* cubra o padrão de teste em segundo plano.\n"
+"\n"
+"Selecione Sim para alterar essas configurações ou Não para saltar este passo."
+
+msgid ""
+"Please setup your user interface by adjusting the values till the edges of the user interface box are covering the test pattern and touching the edges of your TV.\n"
+"When you are ready press OK to continue."
+msgstr ""
+"Por favor, configure sua interface de utilizador ajustando os valores até que as bordas da caixa de interface do usuário estejam cobrindo o padrão de teste e tocando nas bordas da sua TV.\n"
+"Quando estiver pronto, pressione OK para continuar."
+
+msgid ""
+"Your internet connection is working now.\n"
+"\n"
+"Please press OK to continue."
+msgstr ""
+"A ligação à internet está agora a funcionar.\n"
+"\n"
+"Por favor, prima OK para continuar."
+
+msgid ""
+"Please use Virtual Keyboard for text rows only:\n"
+"-Username\n"
+"-Password\n"
+"-Alias\n"
+"-System"
+msgstr ""
+"Por favor, use o Teclado Virtual apenas para linhas de texto:\n"
+"-Utilizador\n"
+"-Senha\n"
+"-Alias\n"
+"-Sistema"
 
 msgid "Where do you want to backup your settings?"
 msgstr "Onde deseja salvar as suas definições?"
@@ -10299,8 +10193,8 @@ msgid ""
 "You need a PC connected to your %s %s. If you need further instructions, please visit the website http://www.dm7025.de.\n"
 "Your %s %s will now be halted. After you have performed the update instructions from the website, your new firmware will ask you to restore your settings."
 msgstr ""
-"Necessita de um PC ligado á %s %s.Para mais instruções, visite http://www.dm7025.de.\n"
-"A %s %s está em espera.Após atualizar a sua box seguindo as instruções da página Web, o novo firmware pedir-lhe-á para restaurar as suas definições. "
+"Necessita de um PC ligado á %s %s.Para mais instruções, visite https://www.vuplus-community.com/board .\n"
+"A %s %s está em espera. Após atualizar a sua box seguindo as instruções da página Web, o novo firmware pedir-lhe-á para restaurar as suas definições. "
 
 msgid "Your %s %s is shutting down. Please wait..."
 msgstr "A sua %s %s está a desligar. Por favor espere..."
@@ -10377,11 +10271,20 @@ msgstr "Explorador e Montagens de Rede"
 msgid "Extended"
 msgstr "Estendido"
 
+msgid "Open Black Hole Green Panel"
+msgstr "Open BlackHole Painel Verde"
+
+msgid "Black Hole Green Panel"
+msgstr "Open BlackHole Painel Verde"
+
 msgid "Open Black Hole Blue Panel"
-msgstr "Open Black Hole Painel Azul"
+msgstr "Open BlackHole Painel Azul"
 
-msgid "Open Black Hole Green Panel"
-msgstr "Open Black Hole Painel Verde"
+msgid "Black Hole Blue Panel"
+msgstr "Open BlackHole Painel Azul"
+
+msgid "Black Hole E2 Addons Manager"
+msgstr "Gestor de Addons E2 Black Hole"
 
 msgid "Addons Manager"
 msgstr "Gestor de Addons"
@@ -10450,7 +10353,7 @@ msgid "Set startup service"
 msgstr "Definir o serviço no arranque?"
 
 msgid "Only on startup"
-msgstr "Sómente no arranque"
+msgstr "Apenas no arranque"
 
 msgid "Also on standby"
 msgstr "Também para Modo de Espera"
@@ -10491,6 +10394,15 @@ msgstr "Escreva outro nome:"
 msgid "Remove entry"
 msgstr "Remover entrada"
 
+msgid "and never ask again this session"
+msgstr "e nunca perguntar novamente nesta sessão"
+
+msgid "Yes, allways"
+msgstr "Sim, sempre"
+
+msgid "Allways ask"
+msgstr "Perguntar sempre"
+
 msgid "Are you sure you want to remove this entry?"
 msgstr "Tem a certeza, que quer remover esta entrada?"
 
@@ -10504,7 +10416,7 @@ msgid "Add marker"
 msgstr "Adicionar marcador"
 
 msgid "markername"
-msgstr "nome do marcador"
+msgstr "Nome do marcador"
 
 msgid "Enable bouquet edit"
 msgstr "Ativar a edição de bouquets"
@@ -10628,7 +10540,7 @@ msgid "Subtitle"
 msgstr "Legendas"
 
 msgid "Customise"
-msgstr "Customizar definições"
+msgstr "Personalizar definições"
 
 msgid "Convert"
 msgstr "Converter"
@@ -10684,7 +10596,7 @@ msgstr ""
 "Prima OK para continuar"
 
 msgid "If enabled the output resolution of the box will try to match the resolution of the video content"
-msgstr "Se ativo, a resolução de saída da STB seraá ajustada para a resolução do conteúdo do vídeo"
+msgstr "Se ativo, a resolução de saída da STB será ajustada para a resolução do conteúdo do vídeo"
 
 msgid "Configure the refresh rate of the screen. Multi means refresh rate depends on the source 24/50/60Hz"
 msgstr "Configura a taxa de refrescamento da tela. Multi quer dizer, que a taxa depende da fonte 24/50/60Hz"
@@ -10699,7 +10611,7 @@ msgid "This option allows you to enable 3D Surround Sound for an output."
 msgstr "Esta opção permite que habilite o som Surround 3D para uma saída."
 
 msgid "When enabled, the receiver will select an AC3+ track (when available)."
-msgstr "Quando ativo a STB selecionará uma trilha AC3+ (quando disponível)."
+msgstr "Quando ativo a STB selecionará uma faixa AC3+ (quando disponível)."
 
 msgid "Enable the use of the tuners of a remote enigma2 receiver when no local tuner is available (e.g. when the tuner is occupied or service type is unavailable on the local tuner)."
 msgstr "Habilite o uso dos tuners de um recetor remoto enigma2 quando nenhum Tuner local estiver disponível (por exemplo, quando o Tuner estiver ocupado ou o tipo de serviço não estiver disponível no Tuner local)."
@@ -10711,7 +10623,7 @@ msgid "Streaming port of the fallback remote receiver. By default this is '8001'
 msgstr "Porta do recetor remoto alternativo de streaming. Por padrão, é '8001'"
 
 msgid "When you use the remote fallback tuner for recording, the timer conflict detection can't properly detect conflicts. This option allows you to turn off the timer confict detection. This setting is only for advanced users; the default is 'yes'."
-msgstr "Quando usar o Tuner remoto alternativo para gravação, a deteção de conflitos do Timer não pode detetar corretamente conflitos. Esta opção permite que desligue a deteção de conflitos de Timer. Esta configuração é só para usuários avançados; o padrão é 'Sim'."
+msgstr "Quando usar o Tuner remoto alternativo para gravação, a deteção de conflitos do Timer não pode detetar corretamente conflitos. Esta opção permite que desligue a deteção de conflitos de Timer. Esta configuração é só para utilizadores avançados; o padrão é 'Sim'."
 
 msgid "When enabled, this setting has more weight than 'Preferred tuner'."
 msgstr "Quando ativo, essa configuração tem mais peso do que 'Tuner preferencial'."
@@ -10788,17 +10700,17 @@ msgstr "Alinhamento de eventos"
 msgid "Alignment of timeline date"
 msgstr "Alinhamento da data na linha de tempo"
 
-msgid "Use separate Picon pack for Front Display *"
-msgstr "Usar pacote de picons separado para o Painel Frontal *"
+msgid "Use separate Picon pack for Front Display"
+msgstr "Usar pacote de picons separado para o Painel Frontal"
 
 msgid "Brightness (Dimmed)"
-msgstr "Brilho ( esmaecido )"
+msgstr "Brilho (esmaecido)"
 
 msgid "Dim delay"
 msgstr "Atraso não ofuscante"
 
-msgid "Use picon_lcd directory for picons on color LCD"
-msgstr "Usar o diretório picon_lcd para picons no LCD colorido."
+msgid "Use piconlcd directory for picons on color LCD"
+msgstr "Usar o diretório piconlcd para picons no LCD colorido."
 
 msgid "Configure the brightness level of the front panel display for dimmed operation."
 msgstr "Configura o nível de brilho do visor do painel frontal para operação esmaecida."
@@ -11194,7 +11106,7 @@ msgid ""
 "This will take between 4 and 15 minutes depending on the filesystem used and is fully automatic.\n"
 "Make sure you insert a USB flash drive before you select USB."
 msgstr ""
-"USB = Pretende efetuar um backup completo da imagem no seu Disposito USB?\n"
+"USB = Pretende efetuar um backup completo da imagem no seu dispositivo USB?\n"
 "Isto irá demorar entre 4 a 15 minutos dependendo do sistema de ficheiros, e será completamente automático.\n"
 "Certifique-se de inserir uma unidade USB, antes de selecionar USB."
 
@@ -11342,7 +11254,7 @@ msgid "Available Forums:   \t"
 msgstr "Foruns disponíveis:   \t"
 
 msgid "Shouts sent by users:\t"
-msgstr "Mensagens enviadas por usuários:\t"
+msgstr "Mensagens enviadas por utlizadores:\t"
 
 msgid "Top downloaded File:\t"
 msgstr "Ficheiro mais descarregado:\t"
@@ -11351,7 +11263,7 @@ msgid "Total Downloads:     \t"
 msgstr "Descargas totais:     \t"
 
 msgid "Fast Plug. Setup"
-msgstr "Def.Plugin Rápido"
+msgstr "Def. Plugin Rápido"
 
 msgid "Fast Plug"
 msgstr "Plugin Rápido"
@@ -11484,9 +11396,6 @@ msgstr "Perguntar ao utilizador (por defeito 'não')"
 msgid "Select Network Interface"
 msgstr "Selecionar Interface de Rede"
 
-msgid "Browse network neighbourhood"
-msgstr "Explorar a Vizinhança na Rede"
-
 msgid "Rescan"
 msgstr "Procurar"
 
@@ -11518,7 +11427,7 @@ msgid "AV"
 msgstr "A/V"
 
 msgid "Storage"
-msgstr "Disco Duro"
+msgstr "Disco rígido"
 
 msgid "Filesystem"
 msgstr "Sistema de Ficheiros"
@@ -11526,8 +11435,11 @@ msgstr "Sistema de Ficheiros"
 msgid "TunerConf"
 msgstr "Tuners"
 
+msgid "Tuners & Scanning"
+msgstr "Tuners e Sintonização"
+
 msgid "CI"
-msgstr "Int.Comum"
+msgstr "Int. Comum"
 
 msgid "Inadyn Manager"
 msgstr "Gestor de Inadyn"
@@ -11646,7 +11558,7 @@ msgid "E2 (re)starts:\t%s\n"
 msgstr "E2 (re)inícios:\t%s\n"
 
 msgid "System temp:\t%s"
-msgstr "Temp.Sistema:\t%s"
+msgstr "Temp. Sistema:\t%s"
 
 msgid "Last update:\t%s\n"
 msgstr "Atualizada em:\t%s\n"
@@ -11734,7 +11646,7 @@ msgid ""
 "This is the case if you have in your router a port forwarded to the STB."
 msgstr ""
 "Definir uma password é altamente recomendado se o receptor estiver ligado à Internet.\n"
-"É o caso se tiver definida uma porta reencaminhada ao seu receptor."
+"Este é o caso de ter definida uma porta reencaminhada ao seu receptor."
 
 msgid "Random Password"
 msgstr "Password aleatória"
@@ -11745,11 +11657,14 @@ msgstr "Definir Password"
 msgid "Hard disk settings"
 msgstr "Definições de Disco Rígido"
 
-msgid "Timezone area"
-msgstr "Área de fuso horário"
+msgid "Time zone"
+msgstr "Zona Horária"
+
+msgid "Time zone area"
+msgstr "Área da Zona Horária"
 
-msgid "Setup your timezone area."
-msgstr "Configuração da sua área de fuso horário."
+msgid "Select your time zone area or region."
+msgstr "Selecione a sua zona horária ou região."
 
 msgid "Fallback configuration"
 msgstr "Configurar Tuners de Rede"
@@ -11761,7 +11676,7 @@ msgid "Specify the URL/IP of the fallback remote receiver, e.g. '192.168.0.1'. T
 msgstr "Especifica o URL/IP do recetor remoto alternativo, i.e. '192.168.0.1' Os outros detalhes, http:// e o número da porta, serão preenchidos automaticamente, quando selecionar <SALVAR>."
 
 msgid "When using the remote fallback tuner for recordings, it is impossible to correctly detect timer conflicts. This option allows you to skip timer confict detection when remote fallback is enabled, but can lead to timer conflicts. This setting is only for advanced users; the default is 'yes'."
-msgstr "Ao utilizar o Tuner remoto alternativo para gravações, é impossível de detetar corretamente os conflitos do Timer. Esta opção permite que ignore a deteção de conflitos de Timers quando o tuner remoto alternativo está ativo, mas pode levar a conflitos de Timers. Essa configuração é apenas para usuários avançados; o padrão é 'Sim'."
+msgstr "Ao utilizar o Tuner remoto alternativo para gravações, é impossível de detetar corretamente os conflitos do Timer. Esta opção permite que ignore a deteção de conflitos de Timers quando o tuner remoto alternativo está ativo, mas pode levar a conflitos de Timers. Essa configuração é apenas para utilizadores avançados; o padrão é 'Sim'."
 
 msgid "Enter the URL/IP of the fallback remote receiver, e.g. '192.168.0.1'. The other details such as 'http://' and port number will be filled in automatically when you select save."
 msgstr "Especifica o URL/IP do recetor remoto alternativo, i.e. '192.168.0.1' Os outros detalhes, http:// e o número da porta, serão preenchidos automaticamente, quando selecionar <SALVAR>."
@@ -11818,9 +11733,9 @@ msgid ""
 "\n"
 "Select Yes to continue or No to exit."
 msgstr ""
-"Nota: Esse recurso destina-se às pessoas que não podem desativar o overscan na sua televisão / monitor.  Primeiro tente desabilitar overscan antes de utilizar este recurso.\n"
+"Nota: Este recurso destina-se às pessoas que não podem desativar o overscan na sua televisão / monitor.  Primeiro tente desabilitar overscan antes de utilizar este recurso.\n"
 "\n"
-"USO: Ajustar as configurações de tamanho e posição da tela para que a camada de interface de usuário sombreado * apenas * cubra o teste padrão no fundo.\n"
+"USO: Ajustar as configurações de tamanho e posição da tela para que a camada de interface de utilizador sombreado * apenas * cubra o teste padrão no fundo.\n"
 "\n"
 "Selecione SIM para continuar ou NÂO para sair."
 
@@ -11828,7 +11743,7 @@ msgid "OSD position"
 msgstr "OSD ajuste da posição"
 
 msgid "Audio & Video"
-msgstr "Áudio & Vídeo"
+msgstr "Áudio e Vídeo"
 
 msgid "Video enhancement"
 msgstr "Otimização de Vídeo"
@@ -11997,9 +11912,36 @@ msgstr "Permite-lhe agendar os Backups da imagem. "
 msgid "Client mode"
 msgstr "Modo cliente"
 
+msgid "Mode:"
+msgstr "Modo:"
+
 msgid "FBC automatic"
 msgstr "FBC automático"
 
+msgid "FBC SCR (Unicable/JESS)"
+msgstr "FBC SCR (Unicable/JESS"
+
+msgid ""
+"FBC automatic\n"
+"connected to"
+msgstr ""
+"FBC automático\n"
+"conetado a"
+
+msgid ""
+"FBC automatic\n"
+"connected to %s"
+msgstr ""
+"FBC automático\n"
+"conetado a %s"
+
+msgid ""
+"FBC automatic\n"
+"inactive"
+msgstr ""
+"FBC automático\n"
+"inativo"
+
 msgid "inactive"
 msgstr "inativo"
 
@@ -12285,3 +12227,105 @@ msgstr "Permite agendar os seus backups."
 
 msgid "Testscreens"
 msgstr "Testar ecrãs"
+
+msgid "Hide number markers"
+msgstr "Ocultar marcadores de número"
+
+msgid "When enabled, number markers will be hidden."
+msgstr "Quando ativado, os marcadores numéricos serão ocultados."
+
+msgid "Zap key delay for channel number input"
+msgstr "Tempo de entrada de número de canal para Zapping"
+
+msgid "In live view wait this many seconds after a numeric key press before assuming the required channel number has been entered. Default: 5 seconds. Setting zero will require confirmation with 'OK'. "
+msgstr "Na exibição ao vivo, espere os segundos necessários depois de uma tecla numérica antes de assumir que o número de canal necessário foi inserido. Padrão: 5 segundos. A configuração zero exigirá confirmação com 'OK'."
+
+msgid "Show picons during channel number input"
+msgstr "Mostrar picons durante a entrada do número do canal"
+
+msgid "Configure whether service picons will be shown in number zap."
+msgstr "Configure se os picons de serviço serão mostrados ao introduzir o número do serviço."
+
+msgid "< Emergency >"
+msgstr "< Emergência >"
+
+msgid "< Current >"
+msgstr "< Atual >"
+
+msgid "Press OK to activate the selected%s skin."
+msgstr "Pressione OK para ativar a skin %s selecionada."
+
+msgid "Press OK to keep the currently selected%s skin."
+msgstr "Pressione OK para manter a skin %s selecionada"
+
+msgid "To apply the selected '%s' skin the GUI needs to restart. Would you like to restart the GUI now?"
+msgstr "Para aplicar a skin '%s' selecionada, a GUI precisa reiniciar. Gostaria de reiniciar a GUI agora?"
+
+msgid "To save and apply the selected '%s' skin the GUI needs to restart. Would you like to save the selection and restart the GUI now?"
+msgstr "Para salvar e aplicar a skin '%s' selecionada, a GUI precisa reiniciar. Deseja salvar a seleção e reiniciar a GUI agora?"
+
+msgid "Please wait"
+msgstr "Por favor, espere!... "
+
+msgid "Use the UP and DOWN keys to select language, Menu key to install new language. Afterwards press the OK button."
+msgstr "Use as teclas CIMA e BAIXO para selecionar o idioma, a tecla MENU para instalar um novo. Depois prima a tecla OK."
+
+msgid "Add Language"
+msgstr "Adicionar Idioma"
+
+msgid "Delete Language(s)"
+msgstr "Apagar Idioma(s)"
+
+msgid "Start Wizard - Screen Alignment"
+msgstr "Assistente Inicial - Alinhamento do Ecrã"
+
+msgid "Warning"
+msgstr "Aviso"
+
+msgid "Name: "
+msgstr "Nome: "
+
+msgid "Aspect Ratio: "
+msgstr "Relação de aspeto: "
+
+msgid "Videosize: "
+msgstr "Resolução: "
+
+msgid "Ecm Info not available."
+msgstr "Informações ECM não disponíveis."
+
+msgid "Sorry, function not available"
+msgstr "Desculpe, função não disponível"
+
+msgid "Please wait while starting\n"
+msgstr "Por favor, aguarde enquanto reinicia!\n"
+
+msgid "Swap total:"
+msgstr "Permuta Total:  "
+
+msgid "Swap free:"
+msgstr "Permuta Livre: "
+
+msgid "Epg Panel"
+msgstr "Painel EPG"
+
+msgid "Sys Info"
+msgstr "Info Sistema"
+
+msgid "Extra Settings"
+msgstr "Definições Extra"
+
+msgid "Set Default CAM"
+msgstr "Definir a CAM padrão"
+
+msgid "%d  CAMs Installed"
+msgstr "%d  CAMs Instaladas"
+
+msgid "Common Interface..."
+msgstr "Interface Comum.."
+
+msgid "Execute"
+msgstr "Executar"
+
+msgid "Script Panel"
+msgstr "Painel de Scripts"
diff --git a/po/ru.po b/po/ru.po
index b3509f4..8141b67 100755
--- a/po/ru.po
+++ b/po/ru.po
@@ -1,6 +1,6 @@
 msgid ""
 msgstr ""
-"Project-Id-Version: OpenBH 4.1 enigma2 Russian translation\n"
+"Project-Id-Version: OpenBH 4.3 enigma2 Russian translation\n"
 "Report-Msgid-Bugs-To: \n"
 "POT-Creation-Date: \n"
 "PO-Revision-Date: \n"
@@ -13,7 +13,7 @@ msgstr ""
 "Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n"
 "%100>=20) ? 1 : 2);\n"
 "X-Poedit-SourceCharset: UTF-8\n"
-"X-Generator: Poedit 2.0.6\n"
+"X-Generator: Poedit 2.2.4\n"
 
 msgid ""
 "\n"
@@ -12528,3 +12528,74 @@ msgstr "Переключить и записать"
 
 msgid "zapped"
 msgstr "Переключено"
+
+msgid "Tuners & Scanning"
+msgstr "Тюнер и Сканирование"
+
+msgid "Restart Enigma2"
+msgstr "Перезагрузка GUI"
+
+msgid "Enable OpenTV EPG"
+msgstr "Включить OpenTV EPG"
+
+msgid "Use OpenTV EPG information when it is available. For reading OpenTV EPG data tuning "
+"to a dedicated transponder is required"
+msgstr "Использовать информацию OpenTV телегида, когда она существует."
+
+msgid "Choose the layout view mode (Text or Graphics)."
+msgstr "Выберите режим просмотра (Текстовий или Графический)."
+
+msgid "Choose the layout view mode (Text / Graphics Multi channel EPG or Single channel EPG)."
+msgstr "Выберите режим просмотра (Текстовий/Графический (Мультителегид) или Одиночный."
+
+msgid "Graphics Multi EPG"
+msgstr "Графический"
+
+msgid "Text Multi EPG"
+msgstr "Текстовий"
+
+msgid "Include CI assignment"
+msgstr "Включить назначение модуля доступа"
+
+msgid "Set CI assignment for detection of available services."
+msgstr "Включить назначение модуля доступа для обнаружения доступных сервисов."
+
+msgid "Hide number markers"
+msgstr "Скрыть числовые метки"
+
+msgid "When enabled, number markers will be hidden."
+msgstr "Если включено, числовые метки будут скрыты."
+
+msgid "Zap key delay for channel number input"
+msgstr "Задержка для ввода номера канала"
+
+msgid ""
+"In live view wait this many seconds after a numeric key press before assuming the required channel "
+"number has been entered. Default: 5 seconds. Setting zero will require confirmation with 'OK'. "
+msgstr ""
+"Время ожидание для переход на введенный канал. По умолчанию: 5 секунд. 0 потребует подтверждения "
+"нажатием кнопки 'OK'."
+
+msgid "REC Symbol in use"
+msgstr "Запись"
+
+msgid "REC Symbol in Standby"
+msgstr "Запись в режиме ожидания"
+
+msgid "Enable blinking rec symbol on the LCD Display"
+msgstr "Включить символ записи на дисплее"
+
+msgid "In the Standby Record on the LCD Display"
+msgstr "Включить символ записи в режиме ожидания на дисплее"
+
+msgid "Enable VOD skip buttons"
+msgstr "Включить кнопки пропуска VOD"
+
+msgid "When enabled the set top box is able to wakeup on LAN"
+msgstr "Если включено, ресивер можно включать из локальной сети"
+
+msgid "You seem to be in timeshift, Do you want to leave timeshift? Streams & IPTV not fully supported!"
+msgstr "Сначала завершите таймшифт, хотите отключить таймшифт? Потоки и IPTV не полностью поддерживаются!"
+
+msgid "Do you really want to stop the current recording and delete timer %s?"
+msgstr "Действительно хотите остановить текущую запись и удалить таймер %s?"
diff --git a/skin.py b/skin.py
index 430b508..d3420c2 100644
--- a/skin.py
+++ b/skin.py
@@ -1,838 +1,925 @@
-from Tools.Profile import profile
-profile("LOAD:ElementTree")
+import errno
 import xml.etree.cElementTree
-import os
 
-profile("LOAD:enigma_skin")
-from enigma import eSize, ePoint, eRect, gFont, eWindow, eLabel, ePixmap, eWindowStyleManager, addFont, gRGB, eWindowStyleSkinned, getDesktop
+from enigma import addFont, eLabel, ePixmap, ePoint, eRect, eSize, eWindow, eWindowStyleManager, eWindowStyleSkinned, getDesktop, gFont, getFontFaces, gRGB
+from os.path import basename, dirname, isfile
+
 from Components.config import ConfigSubsection, ConfigText, config
+from Components.RcModel import rc_model
 from Components.Sources.Source import ObsoleteSource
-from Tools.Directories import resolveFilename, SCOPE_SKIN, SCOPE_SKIN_IMAGE, SCOPE_FONTS, SCOPE_ACTIVE_SKIN, SCOPE_ACTIVE_LCDSKIN, SCOPE_CURRENT_SKIN, SCOPE_CONFIG, fileExists
+from Tools.Directories import SCOPE_CONFIG, SCOPE_CURRENT_LCDSKIN, SCOPE_CURRENT_SKIN, SCOPE_FONTS, SCOPE_SKIN, SCOPE_SKIN_IMAGE, resolveFilename
 from Tools.Import import my_import
 from Tools.LoadPixmap import LoadPixmap
-from Components.RcModel import rc_model
-from boxbranding import getBoxType
 
-colorNames = {}
-switchPixmap = {}  # dict()
-
-# Predefined fonts, typically used in built-in screens and for components like
-# the movie list and so.
-fonts = {
+DEFAULT_SKIN = "BlackShadowSE_P/skin.xml"
+EMERGENCY_SKIN = "skin_default/skin.xml"
+DEFAULT_DISPLAY_SKIN = "skin_default/skin_display.xml"
+USER_SKIN = "skin_user.xml"
+USER_SKIN_TEMPLATE = "skin_user_%s.xml"
+SUBTITLE_SKIN = "skin_subtitles.xml"
+
+GUI_SKIN_ID = 0  # Main frame-buffer.
+DISPLAY_SKIN_ID = 1  # Front panel / display / LCD.
+
+domScreens = {}  # Dictionary of skin based screens.
+colors = {  # Dictionary of skin color names.
+	"key_back": gRGB(0x00313131),
+	"key_blue": gRGB(0x0018188b),
+	"key_green": gRGB(0x001f771f),
+	"key_red": gRGB(0x009f1313),
+	"key_text": gRGB(0x00ffffff),
+	"key_yellow": gRGB(0x00a08500)
+}
+fonts = {  # Dictionary of predefined and skin defined font aliases.
 	"Body": ("Regular", 18, 22, 16),
-	"ChoiceList": ("Regular", 20, 24, 18),
+	"ChoiceList": ("Regular", 20, 24, 18)
 }
+menus = {}  # Dictionary of images associated with menu entries.
+parameters = {}  # Dictionary of skin parameters used to modify code behavior.
+setups = {}  # Dictionary of images associated with setup menus.
+switchPixmap = {}  # Dictionary of switch images.
+windowStyles = {}  # Dictionary of window styles for each screen ID.
 
-parameters = {}
-
-def dump(x, i=0):
-	print " " * i + str(x)
-	try:
-		for n in x.childNodes:
-			dump(n, i + 1)
-	except:
-		None
-
-class SkinError(Exception):
-	def __init__(self, message):
-		self.msg = message
-	def __str__(self):
-		return "[Skin] {%s}: %s. Please contact the skin's author!" % (config.skin.primary_skin.value, self.msg)
+config.skin = ConfigSubsection()
+skin = resolveFilename(SCOPE_SKIN, DEFAULT_SKIN)
+if not isfile(skin):
+	print "[Skin] Error: Default skin '%s' is not readable or is not a file!  Using emergency skin." % skin
+	DEFAULT_SKIN = EMERGENCY_SKIN
+config.skin.primary_skin = ConfigText(default=DEFAULT_SKIN)
+config.skin.display_skin = ConfigText(default=DEFAULT_DISPLAY_SKIN)
 
-class DisplaySkinError(Exception):
-	def __init__(self, message):
-		self.msg = message
-	def __str__(self):
-		return "[Skin] {%s}: %s. Please contact the skin's author!" % (config.skin.display_skin.value, self.msg)
+currentPrimarySkin = None
+currentDisplaySkin = None
+callbacks = []
+runCallbacks = False
 
-dom_skins = [ ]
+# Skins are loaded in order of priority.  Skin with highest priority is
+# loaded last.  This is usually the user-specified skin.  In this way
+# any duplicated screens will be replaced by a screen of the same name
+# with a higher priority.
+#
+# GUI skins are saved in the settings file as the path relative to
+# SCOPE_SKIN.  The full path is NOT saved.  E.g. "MySkin/skin.xml"
+#
+# Display skins are saved in the settings file as the path relative to
+# SCOPE_CURRENT_LCDSKIN.  The full path is NOT saved.
+# E.g. "MySkin/skin_display.xml"
+#
+def InitSkins():
+	global currentPrimarySkin, currentDisplaySkin
+	runCallbacks = False
+	# Add the emergency skin.  This skin should provide enough functionality
+	# to enable basic GUI functions to work.
+	loadSkin(EMERGENCY_SKIN, scope=SCOPE_CURRENT_SKIN, desktop=getDesktop(GUI_SKIN_ID), screenID=GUI_SKIN_ID)
+	# Add the subtitle skin.
+	loadSkin(SUBTITLE_SKIN, scope=SCOPE_CURRENT_SKIN, desktop=getDesktop(GUI_SKIN_ID), screenID=GUI_SKIN_ID)
+	# Add the front panel / display / lcd skin.
+	result = []
+	for skin, name in [(config.skin.display_skin.value, "current"), (DEFAULT_DISPLAY_SKIN, "default")]:
+		if skin in result:  # Don't try to add a skin that has already failed.
+			continue
+		config.skin.display_skin.value = skin
+		if loadSkin(config.skin.display_skin.value, scope=SCOPE_CURRENT_LCDSKIN, desktop=getDesktop(DISPLAY_SKIN_ID), screenID=DISPLAY_SKIN_ID):
+			currentDisplaySkin = config.skin.display_skin.value
+			break
+		print "[Skin] Error: Adding %s display skin '%s' has failed!" % (name, config.skin.display_skin.value)
+		result.append(skin)
+	# Add the main GUI skin.
+	result = []
+	for skin, name in [(config.skin.primary_skin.value, "current"), (DEFAULT_SKIN, "default")]:
+		if skin in result:  # Don't try to add a skin that has already failed.
+			continue
+		config.skin.primary_skin.value = skin
+		if loadSkin(config.skin.primary_skin.value, scope=SCOPE_CURRENT_SKIN, desktop=getDesktop(GUI_SKIN_ID), screenID=GUI_SKIN_ID):
+			currentPrimarySkin = config.skin.primary_skin.value
+			break
+		print "[Skin] Error: Adding %s GUI skin '%s' has failed!" % (name, config.skin.primary_skin.value)
+		result.append(skin)
+	# Add an optional skin related user skin "user_skin_<SkinName>.xml".  If there is
+	# not a skin related user skin then try to add am optional generic user skin.
+	result = None
+	if isfile(resolveFilename(SCOPE_SKIN, config.skin.primary_skin.value)):
+		name = USER_SKIN_TEMPLATE % dirname(config.skin.primary_skin.value)
+		if isfile(resolveFilename(SCOPE_CURRENT_SKIN, name)):
+			result = loadSkin(name, scope=SCOPE_CURRENT_SKIN, desktop=getDesktop(GUI_SKIN_ID), screenID=GUI_SKIN_ID)
+	if result is None:
+		loadSkin(USER_SKIN, scope=SCOPE_CURRENT_SKIN, desktop=getDesktop(GUI_SKIN_ID), screenID=GUI_SKIN_ID)
+	runCallbacks = True
+
+# Temporary entry point for older versions of mytest.py.
+#
+def loadSkinData(desktop):
+	InitSkins()
 
-def addSkin(name, scope = SCOPE_SKIN):
-	# read the skin
-	filename = resolveFilename(scope, name)
-	if fileExists(filename):
-		mpath = os.path.dirname(filename) + "/"
-		try:
-			dom_skins.append((mpath, xml.etree.cElementTree.parse(filename).getroot()))
-		except:
-			print "[Skin] error in %s" % filename
-			return False
+# Method to load a skin XML file into the skin data structures.
+#
+def loadSkin(filename, scope=SCOPE_SKIN, desktop=getDesktop(GUI_SKIN_ID), screenID=GUI_SKIN_ID):
+	global windowStyles
+	filename = resolveFilename(scope, filename)
+	print "[Skin] Loading skin file '%s'." % filename
+	try:
+		with open(filename, "r") as fd:  # This open gets around a possible file handle leak in Python's XML parser.
+			try:
+				domSkin = xml.etree.cElementTree.parse(fd).getroot()
+				# print "[Skin] DEBUG: Extracting non screen blocks from '%s'.  (scope='%s')" % (filename, scope)
+				# For loadSingleSkinData colors, bordersets etc. are applied one after
+				# the other in order of ascending priority.
+				loadSingleSkinData(desktop, screenID, domSkin, filename, scope=scope)
+				for element in domSkin:
+					if element.tag == "screen":  # Process all screen elements.
+						name = element.attrib.get("name", None)
+						if name:  # Without a name, it's useless!
+							sid = element.attrib.get("id", None)
+							if sid is None or sid == screenID:  # If there is a screen ID is it for this display.
+								# print "[Skin] DEBUG: Extracting screen '%s' from '%s'.  (scope='%s')" % (name, filename, scope)
+								domScreens[name] = (element, "%s/" % dirname(filename))
+					elif element.tag == "windowstyle":  # Process the windowstyle element.
+						id = element.attrib.get("id", None)
+						if id is not None:  # Without an id, it is useless!
+							id = int(id)
+							# print "[Skin] DEBUG: Processing a windowstyle ID='%s'." % id
+							domStyle = xml.etree.cElementTree.ElementTree(xml.etree.cElementTree.Element("skin"))
+							domStyle.getroot().append(element)
+							windowStyles[id] = (desktop, screenID, domStyle, filename, scope)
+					# Element is not a screen or windowstyle element so no need for it any longer.
+				reloadWindowStyles()  # Reload the window style to ensure all skin changes are taken into account.
+				print "[Skin] Loading skin file '%s' complete." % filename
+				if runCallbacks:
+					for method in self.callbacks:
+						if method:
+							method()
+				return True
+			except xml.etree.cElementTree.ParseError as err:
+				fd.seek(0)
+				content = fd.readlines()
+				line, column = err.position
+				print "[Skin] XML Parse Error: '%s' in '%s'!" % (err, filename)
+				data = content[line - 1].replace("\t", " ").rstrip()
+				print "[Skin] XML Parse Error: '%s'" % data
+				print "[Skin] XML Parse Error: '%s^%s'" % ("-" * column, " " * (len(data) - column - 1))
+			except Exception as err:
+				print "[Skin] Error: Unable to parse skin data in '%s' - '%s'!" % (filename, err)
+	except (IOError, OSError) as err:
+		if err.errno == errno.ENOENT:  # No such file or directory
+			print "[Skin] Warning: Skin file '%s' does not exist!" % filename
 		else:
-			return True
+			print "[Skin] Error %d: Opening skin file '%s'! (%s)" % (err.errno, filename, err.strerror)
+	except Exception as err:
+		print "[Skin] Error: Unexpected error opening skin file '%s'! (%s)" % (filename, err)
 	return False
 
-# get own skin_user_skinname.xml file, if it exists
-# ...but first check that the relevant base dir exists, otherwise
-# we may well get into a start-up loop with skin failures
-#
-def skin_user_skinname():
-	skin_name = config.skin.primary_skin.value
-	skin_base = skin_name[:skin_name.rfind('/')]
-	name = "skin_user_" + skin_base + ".xml"
-	filename = resolveFilename(SCOPE_CONFIG, name)
-	if fileExists(filename):
-		skin_path = resolveFilename(SCOPE_SKIN, skin_name)
-		if not os.path.isfile(skin_path):
-			print "[skin::skin_user_skinname] ignoring user entry for not-found skin:", skin_path
-			return None
-		return name
-	return None
+def reloadSkins():
+	domScreens.clear()
+	colors.clear()
+	colors = {
+		"key_back": gRGB(0x00313131),
+		"key_blue": gRGB(0x0018188b),
+		"key_green": gRGB(0x001f771f),
+		"key_red": gRGB(0x009f1313),
+		"key_text": gRGB(0x00ffffff),
+		"key_yellow": gRGB(0x00a08500)
+	}
+	fonts.clear()
+	fonts = {
+		"Body": ("Regular", 18, 22, 16),
+		"ChoiceList": ("Regular", 20, 24, 18)
+	}
+	menus.clear()
+	parameters.clear()
+	setups.clear()
+	switchPixmap.clear()
+	InitSkins()
 
-# we do our best to always select the "right" value
-# skins are loaded in order of priority: skin with
-# highest priority is loaded last, usually the user-provided
-# skin.
+def addCallback(callback):
+	if callback not in callbacks:
+		callbacks.append(callback)
 
-# currently, loadSingleSkinData (colors, bordersets etc.)
-# are applied one-after-each, in order of ascending priority.
-# the dom_skin will keep all screens in descending priority,
-# so the first screen found will be used.
+def removeCallback(callback):
+	if callback in self.callbacks:
+		callbacks.remove(callback)
 
-# example: loadSkin("nemesis_greenline/skin.xml")
-config.skin = ConfigSubsection()
-DEFAULT_SKIN = "BlackShadowSE_P/skin.xml"
-if not fileExists(resolveFilename(SCOPE_SKIN, DEFAULT_SKIN)):
-	# in that case, fallback to Magic (which is an SD skin)
-	DEFAULT_SKIN = "skin.xml"
-config.skin.primary_skin = ConfigText(default=DEFAULT_SKIN)
 
-DEFAULT_DISPLAY_SKIN = "skin_display.xml"
-config.skin.display_skin = ConfigText(default=DEFAULT_DISPLAY_SKIN)
-
-profile("LoadSkin")
-res = None
-name = skin_user_skinname()
-if name:
-	res = addSkin(name, SCOPE_CONFIG)
-if not name or not res:
-	addSkin('skin_user.xml', SCOPE_CONFIG)
-
-# some boxes lie about their dimensions
-addSkin('skin_box.xml')
-# add optional discrete second infobar
-addSkin('skin_second_infobar.xml')
-display_skin_id = 1
-try:
-	if not addSkin(os.path.join('display', config.skin.display_skin.value)):
-		raise DisplaySkinError, "[Skin] display skin not found"
-except Exception, err:
-	print "[Skin]", err
-	skin = DEFAULT_DISPLAY_SKIN
-	if config.skin.display_skin.value == skin:
-		skin = 'skin_display.xml'
-	print "[Skin] defaulting to standard display skin...", skin
-	config.skin.display_skin.value = skin
-	skin = os.path.join('display', skin)
-	addSkin(skin)
-	del skin
-
-addSkin('skin_subtitles.xml')
-
-try:
-	if not addSkin(config.skin.primary_skin.value):
-		raise SkinError, "[Skin] primary skin not found"
-except Exception, err:
-	print "[Skin]", err
-	skin = DEFAULT_SKIN
-	if config.skin.primary_skin.value == skin:
-		skin = 'skin.xml'
-	print "[Skin] defaulting to standard skin...", skin
-	config.skin.primary_skin.value = skin
-	addSkin(skin)
-	del skin
-
-addSkin('skin_default.xml')
-profile("LoadSkinDefaultDone")
+class SkinError(Exception):
+	def __init__(self, message):
+		self.msg = message
 
+	def __str__(self):
+		return "[Skin] {%s}: %s!  Please contact the skin's author!" % (config.skin.primary_skin.value, self.msg)
+
+# Convert a coordinate string into a number.  Used to convert object position and
+# size attributes into a number.
+#    s is the input string.
+#    e is the the parent object size to do relative calculations on parent
+#    size is the size of the object size (e.g. width or height)
+#    font is a font object to calculate relative to font sizes
+# Note some constructs for speeding up simple cases that are very common.
+#
+# Can do things like:  10+center-10w+4%
+# To center the widget on the parent widget,
+#    but move forward 10 pixels and 4% of parent width
+#    and 10 character widths backward
+# Multiplication, division and subexpressions are also allowed: 3*(e-c/2)
+#
+# Usage:  center : Center the object on parent based on parent size and object size.
+#         e      : Take the parent size/width.
+#         c      : Take the center point of parent size/width.
+#         %      : Take given percentage of parent size/width.
+#         w      : Multiply by current font width.
+#         h      : Multiply by current font height.
+#
 def parseCoordinate(s, e, size=0, font=None):
 	s = s.strip()
-	if s == "center":
-		if not size:
-			val = 0
-		else:
-			val = (e - size)/2
-	elif s == '*':
+	if s == "center":  # For speed as this can be common case.
+		val = 0 if not size else (e - size) / 2
+	elif s == "*":
 		return None
 	else:
-		if s[0] is 'e':
-			val = e
-			s = s[1:]
-		elif s[0] is 'c':
-			val = e/2
-			s = s[1:]
-		else:
-			val = 0
-		if s:
-			if s[-1] is '%':
-				val += e * int(s[:-1]) / 100
-			elif s[-1] is 'w':
-				val += fonts[font][3] * int(s[:-1])
-			elif s[-1] is 'h':
-				val += fonts[font][2] * int(s[:-1])
-			else:
-				try:
-					val += int(s)
-				except:
-					print "[skin][parseCoordinate] Unexpected input value: ", s
-					val = int(eval(s))
+		try:
+			val = int(s)  # For speed try a simple number first.
+		except ValueError:
+			if "t" in s:
+				s = s.replace("center", str((e - size) / 2.0))
+			if "e" in s:
+				s = s.replace("e", str(e))
+			if "c" in s:
+				s = s.replace("c", str(e / 2.0))
+			if "w" in s:
+				s = s.replace("w", "*%s" % str(fonts[font][3]))
+			if "h" in s:
+				s = s.replace("h", "*%s" % str(fonts[font][2]))
+			if "%" in s:
+				s = s.replace("%", "*%s" % str(e / 100.0))
+			try:
+				val = int(s)  # For speed try a simple number first.
+			except ValueError:
+				val = int(eval(s))
+	# print "[Skin] DEBUG: parseCoordinate s='%s', e='%s', size=%s, font='%s', val='%s'." % (s, e, size, font, val)
 	if val < 0:
 		val = 0
 	return val
 
-
 def getParentSize(object, desktop):
-	size = eSize()
 	if object:
 		parent = object.getParent()
-		# For some widgets (e.g. ScrollLabel) the skin attributes are applied to
-		# a child widget, instead of to the widget itself. In that case, the parent
-		# we have here is not the real parent, but it is the main widget.
-		# We have to go one level higher to get the actual parent.
-		# We can detect this because the 'parent' will not have a size yet
-		# (the main widget's size will be calculated internally, as soon as the child
-		# widget has parsed the skin attributes)
+		# For some widgets (e.g. ScrollLabel) the skin attributes are applied to a
+		# child widget, instead of to the widget itself.  In that case, the parent
+		# we have here is not the real parent, but it is the main widget.  We have
+		# to go one level higher to get the actual parent.  We can detect this
+		# because the 'parent' will not have a size yet.  (The main widget's size
+		# will be calculated internally, as soon as the child widget has parsed the
+		# skin attributes.)
 		if parent and parent.size().isEmpty():
 			parent = parent.getParent()
 		if parent:
-			size = parent.size()
+			return parent.size()
 		elif desktop:
-			#widget has no parent, use desktop size instead for relative coordinates
-			size = desktop.size()
-	return size
+			return desktop.size()  # Widget has no parent, use desktop size instead for relative coordinates.
+	return eSize()
 
-def parseValuePair(s, scale, object = None, desktop = None, size = None):
-	x, y = s.split(',')
+def parseValuePair(s, scale, object=None, desktop=None, size=None):
+	x, y = s.split(",")
 	parentsize = eSize()
-	if object and ('c' in x or 'c' in y or 'e' in x or 'e' in y or
-	               '%' in x or '%' in y):          # need parent size for ce%
+	if object and ("c" in x or "c" in y or "e" in x or "e" in y or "%" in x or "%" in y):  # Need parent size for ce%
 		parentsize = getParentSize(object, desktop)
 	xval = parseCoordinate(x, parentsize.width(), size and size.width() or 0)
 	yval = parseCoordinate(y, parentsize.height(), size and size.height() or 0)
 	return (xval * scale[0][0] / scale[0][1], yval * scale[1][0] / scale[1][1])
 
-def parsePosition(s, scale, object = None, desktop = None, size = None):
-	(x, y) = parseValuePair(s, scale, object, desktop, size)
-	return ePoint(x, y)
+def parsePosition(s, scale, object=None, desktop=None, size=None):
+	return ePoint(*parseValuePair(s, scale, object, desktop, size))
 
-def parseSize(s, scale, object = None, desktop = None):
-	(x, y) = parseValuePair(s, scale, object, desktop)
-	return eSize(x, y)
+def parseSize(s, scale, object=None, desktop=None):
+	return eSize(*parseValuePair(s, scale, object, desktop))
 
 def parseFont(s, scale=((1, 1), (1, 1))):
+	if ";" in s:
+		name, size = s.split(";")
+	else:
+		name = s
+		size = None
 	try:
-		font_name = s.split(';')[0]
-		f = fonts[font_name]
+		f = fonts[name]
 		name = f[0]
-		size = f[1]
-		if ";" in s:
-			size = s.split(';')[1]
-	except:
-		name, size = s.split(';')
+		size = f[1] if size is None else size
+	except KeyError:
+		if name not in getFontFaces():
+			f = fonts["Body"]
+			print "[Skin] Error: Font '%s' (in '%s') is not defined!  Using 'Body' font ('%s') instead." % (name, s, f[0])
+			name = f[0]
+			size = f[1] if size is None else size
 	return gFont(name, int(size) * scale[0][0] / scale[0][1])
 
 def parseColor(s):
-	if s[0] != '#':
+	if s[0] != "#":
 		try:
-			return colorNames[s]
-		except:
-			raise SkinError("[Skin] color '%s' must be #aarrggbb or valid named color" % s)
+			return colors[s]
+		except KeyError:
+			raise SkinError("Color '%s' must be #aarrggbb or valid named color" % s)
 	return gRGB(int(s[1:], 0x10))
 
 def parseParameter(s):
-	"""This function is responsible for parsing parameters in the skin, it can parse integers, floats, hex colors, hex integers, named colors and strings."""
-	if s[0] == '#':
+	"""This function is responsible for parsing parameters in the skin, it can parse integers, floats, hex colors, hex integers, named colors, fonts and strings."""
+	if s[0] == "*":  # String.
+		return s[1:]
+	elif s[0] == "#":  # HEX Color.
 		return int(s[1:], 16)
-	elif s[:2] == '0x':
+	elif s[:2] == "0x":  # HEX Integer.
 		return int(s, 16)
-	elif '.' in s:
+	elif "." in s:  # Float number.
 		return float(s)
-	elif s in colorNames:
-		return colorNames[s].argb()
-	elif s.lstrip('-+ ').isdigit():
+	elif s in colors:  # Named color.
+		return colors[s].argb()
+	elif s.find(";") != -1:  # Font.
+		font, size = [x.strip() for x in s.split(";", 1)]
+		return [font, int(size)]
+	else:  # Integer.
 		return int(s)
-	else:
-		return s
 
-def collectAttributes(skinAttributes, node, context, skin_path_prefix=None, ignore=(), filenames=frozenset(("pixmap", "pointer", "seek_pointer", "backgroundPixmap", "selectionPixmap", "sliderPixmap", "scrollbarSliderPicture", "scrollbarbackgroundPixmap", "scrollbarBackgroundPicture"))):
-	# walk all attributes
+def loadPixmap(path, desktop):
+	option = path.find("#")
+	if option != -1:
+		path = path[:option]
+	if rc_model.rcIsDefault() is False and basename(path) in ("rc.png", "rc0.png", "rc1.png", "rc2.png", "oldrc.png"):
+		path = rc_model.getRcImg()
+	pixmap = LoadPixmap(path, desktop)
+	if pixmap is None:
+		raise SkinError("Pixmap file '%s' not found" % path)
+	return pixmap
+
+def collectAttributes(skinAttributes, node, context, skinPath=None, ignore=(), filenames=frozenset(("pixmap", "pointer", "seek_pointer", "backgroundPixmap", "selectionPixmap", "sliderPixmap", "scrollbarSliderPicture", "scrollbarbackgroundPixmap", "scrollbarBackgroundPicture"))):
 	size = None
 	pos = None
 	font = None
-	for attrib, value in node.items():
+	for attrib, value in node.items():  # Walk all attributes.
 		if attrib not in ignore:
 			if attrib in filenames:
-				pngfile = resolveFilename(SCOPE_ACTIVE_SKIN, value, path_prefix=skin_path_prefix)
-				if fileExists(resolveFilename(SCOPE_ACTIVE_LCDSKIN, value, path_prefix=skin_path_prefix)):
-					pngfile = resolveFilename(SCOPE_ACTIVE_LCDSKIN, value, path_prefix=skin_path_prefix)
+				# DEBUG: Why does a SCOPE_CURRENT_LCDSKIN image replace the GUI image?!?!?!
+				pngfile = resolveFilename(SCOPE_CURRENT_SKIN, value, path_prefix=skinPath)
+				if not isfile(pngfile) and isfile(resolveFilename(SCOPE_CURRENT_LCDSKIN, value, path_prefix=skinPath)):
+					pngfile = resolveFilename(SCOPE_CURRENT_LCDSKIN, value, path_prefix=skinPath)
 				value = pngfile
-			# Bit of a hack this, really. When a window has a flag (e.g. wfNoBorder)
+			# Bit of a hack this, really.  When a window has a flag (e.g. wfNoBorder)
 			# it needs to be set at least before the size is set, in order for the
 			# window dimensions to be calculated correctly in all situations.
-			# If wfNoBorder is applied after the size has been set, the window will fail to clear the title area.
-			# Similar situation for a scrollbar in a listbox; when the scrollbar setting is applied after
-			# the size, a scrollbar will not be shown until the selection moves for the first time
-			if attrib == 'size':
+			# If wfNoBorder is applied after the size has been set, the window will
+			# fail to clear the title area.  Similar situation for a scrollbar in a
+			# listbox; when the scrollbar setting is applied after the size, a scrollbar
+			# will not be shown until the selection moves for the first time.
+			if attrib == "size":
 				size = value.encode("utf-8")
-			elif attrib == 'position':
+			elif attrib == "position":
 				pos = value.encode("utf-8")
-			elif attrib == 'font':
+			elif attrib == "font":
 				font = value.encode("utf-8")
 				skinAttributes.append((attrib, font))
 			else:
 				skinAttributes.append((attrib, value.encode("utf-8")))
 	if pos is not None:
 		pos, size = context.parse(pos, size, font)
-		skinAttributes.append(('position', pos))
+		skinAttributes.append(("position", pos))
 	if size is not None:
-		skinAttributes.append(('size', size))
+		skinAttributes.append(("size", size))
 
-def morphRcImagePath(value):
-	if rc_model.rcIsDefault() is False:
-		if ('rc.png' or 'oldrc.png') in value:
-			value = rc_model.getRcLocation() + 'rc.png'
-	return value
-
-def loadPixmap(path, desktop):
-	option = path.find("#")
-	if option != -1:
-		path = path[:option]
-	ptr = LoadPixmap(morphRcImagePath(path), desktop)
-	if ptr is None:
-		raise SkinError("[Skin] pixmap file %s not found!" % path)
-	return ptr
 
 class AttributeParser:
-	def __init__(self, guiObject, desktop, scale=((1,1),(1,1))):
+	def __init__(self, guiObject, desktop, scale=((1, 1), (1, 1))):
 		self.guiObject = guiObject
 		self.desktop = desktop
 		self.scaleTuple = scale
+
 	def applyOne(self, attrib, value):
 		try:
 			getattr(self, attrib)(value)
 		except AttributeError:
-			print "[Skin] Attribute not implemented:", attrib, "value:", value
-		except SkinError, ex:
-			print "[Skin] Error:", ex
+			print "[Skin] Attribute '%s' (with value of '%s') in object of type '%s' is not implemented!" % (attrib, value, self.guiObject.__class__.__name__)
+		except SkinError as err:
+			print "[Skin] Error:", err
+		except Exception:
+			print "[Skin] Attribute '%s' with wrong (or unknown) value '%s' in object of type '%s'!" % (attrib, value, self.guiObject.__class__.__name__)
+
 	def applyAll(self, attrs):
 		for attrib, value in attrs:
 			self.applyOne(attrib, value)
+
 	def conditional(self, value):
 		pass
+
 	def objectTypes(self, value):
 		pass
+
 	def position(self, value):
 		if isinstance(value, tuple):
 			self.guiObject.move(ePoint(*value))
 		else:
 			self.guiObject.move(parsePosition(value, self.scaleTuple, self.guiObject, self.desktop, self.guiObject.csize()))
+
 	def size(self, value):
 		if isinstance(value, tuple):
 			self.guiObject.resize(eSize(*value))
 		else:
 			self.guiObject.resize(parseSize(value, self.scaleTuple, self.guiObject, self.desktop))
+
 	def animationPaused(self, value):
 		pass
+
 	def animationMode(self, value):
-		self.guiObject.setAnimationMode(
-			{ "disable": 0x00,
+		try:
+			self.guiObject.setAnimationMode({
+				"disable": 0x00,
 				"off": 0x00,
 				"offshow": 0x10,
 				"offhide": 0x01,
 				"onshow": 0x01,
 				"onhide": 0x10,
+				"disable_onshow": 0x10,
+				"disable_onhide": 0x01
 			}[value])
+		except KeyError:
+			print "[Skin] Error: Invalid animationMode '%s'!  Must be one of 'disable', 'off', 'offshow', 'offhide', 'onshow' or 'onhide'." % value
+
 	def title(self, value):
 		self.guiObject.setTitle(_(value))
+
 	def text(self, value):
 		self.guiObject.setText(_(value))
+
 	def font(self, value):
 		self.guiObject.setFont(parseFont(value, self.scaleTuple))
+
 	def secondfont(self, value):
 		self.guiObject.setSecondFont(parseFont(value, self.scaleTuple))
+
 	def zPosition(self, value):
 		self.guiObject.setZPosition(int(value))
+
 	def itemHeight(self, value):
 		self.guiObject.setItemHeight(int(value))
+
 	def pixmap(self, value):
-		ptr = loadPixmap(value, self.desktop)
-		self.guiObject.setPixmap(ptr)
+		self.guiObject.setPixmap(loadPixmap(value, self.desktop))
+
 	def backgroundPixmap(self, value):
-		ptr = loadPixmap(value, self.desktop)
-		self.guiObject.setBackgroundPicture(ptr)
+		self.guiObject.setBackgroundPicture(loadPixmap(value, self.desktop))
+
 	def selectionPixmap(self, value):
-		ptr = loadPixmap(value, self.desktop)
-		self.guiObject.setSelectionPicture(ptr)
+		self.guiObject.setSelectionPicture(loadPixmap(value, self.desktop))
+
 	def sliderPixmap(self, value):
-		ptr = loadPixmap(value, self.desktop)
-		self.guiObject.setSliderPicture(ptr)
+		self.guiObject.setSliderPicture(loadPixmap(value, self.desktop))
+
 	def scrollbarbackgroundPixmap(self, value):
-		ptr = loadPixmap(value, self.desktop)
-		self.guiObject.setScrollbarBackgroundPicture(ptr)
-	def scrollbarSliderPicture(self, value):	# for compability same as sliderPixmap
-		ptr = loadPixmap(value, self.desktop)
-		self.guiObject.setSliderPicture(ptr)
-	def scrollbarBackgroundPicture(self, value):	# for compability same as scrollbarbackgroundPixmap
-		ptr = loadPixmap(value, self.desktop)
-		self.guiObject.setScrollbarBackgroundPicture(ptr)
+		self.guiObject.setScrollbarBackgroundPicture(loadPixmap(value, self.desktop))
+
+	def scrollbarSliderPicture(self, value):  # For compatibility same as sliderPixmap.
+		self.guiObject.setSliderPicture(loadPixmap(value, self.desktop))
+
+	def scrollbarBackgroundPicture(self, value):  # For compatibility same as scrollbarbackgroundPixmap.
+		self.guiObject.setScrollbarBackgroundPicture(loadPixmap(value, self.desktop))
+
 	def alphatest(self, value):
-		self.guiObject.setAlphatest(
-			{ "on": 1,
-			  "off": 0,
-			  "blend": 2,
+		try:
+			self.guiObject.setAlphatest({
+				"on": 1,
+				"off": 0,
+				"blend": 2
 			}[value])
+		except KeyError:
+			print "[Skin] Error: Invalid alphatest '%s'!  Must be one of 'on', 'off' or 'blend'." % value
+
 	def scale(self, value):
-		self.guiObject.setScale(1)
-	def orientation(self, value): # used by eSlider
+		value = 1 if value.lower() in ("1", "enabled", "on", "scale", "true", "yes") else 0
+		self.guiObject.setScale(value)
+
+	def orientation(self, value):  # Used by eSlider.
 		try:
-			self.guiObject.setOrientation(*
-				{ "orVertical": (self.guiObject.orVertical, False),
-					"orTopToBottom": (self.guiObject.orVertical, False),
-					"orBottomToTop": (self.guiObject.orVertical, True),
-					"orHorizontal": (self.guiObject.orHorizontal, False),
-					"orLeftToRight": (self.guiObject.orHorizontal, False),
-					"orRightToLeft": (self.guiObject.orHorizontal, True),
-				}[value])
+			self.guiObject.setOrientation(*{
+				"orVertical": (self.guiObject.orVertical, False),
+				"orTopToBottom": (self.guiObject.orVertical, False),
+				"orBottomToTop": (self.guiObject.orVertical, True),
+				"orHorizontal": (self.guiObject.orHorizontal, False),
+				"orLeftToRight": (self.guiObject.orHorizontal, False),
+				"orRightToLeft": (self.guiObject.orHorizontal, True)
+			}[value])
 		except KeyError:
-			print "[Skin] Orientation must be either Vertical or Horizontal!, not %s. Please contact the skin's author!" % value
+			print "[Skin] Error: Invalid orientation '%s'!  Must be one of 'orVertical', 'orTopToBottom', 'orBottomToTop', 'orHorizontal', 'orLeftToRight' or 'orRightToLeft'." % value
+
 	def valign(self, value):
 		try:
-			self.guiObject.setVAlign(
-				{ "top": self.guiObject.alignTop,
-					"center": self.guiObject.alignCenter,
-					"bottom": self.guiObject.alignBottom
-				}[value])
+			self.guiObject.setVAlign({
+				"top": self.guiObject.alignTop,
+				"center": self.guiObject.alignCenter,
+				"bottom": self.guiObject.alignBottom
+			}[value])
 		except KeyError:
-			print "[Skin] Valign must be either top, center or bottom!, not %s. Please contact the skin's author!" % value
+			print "[Skin] Error: Invalid valign '%s'!  Must be one of 'top', 'center' or 'bottom'." % value
+
 	def halign(self, value):
 		try:
-			self.guiObject.setHAlign(
-				{ "left": self.guiObject.alignLeft,
-					"center": self.guiObject.alignCenter,
-					"right": self.guiObject.alignRight,
-					"block": self.guiObject.alignBlock
-				}[value])
+			self.guiObject.setHAlign({
+				"left": self.guiObject.alignLeft,
+				"center": self.guiObject.alignCenter,
+				"right": self.guiObject.alignRight,
+				"block": self.guiObject.alignBlock
+			}[value])
 		except KeyError:
-			print "[Skin] Halign must be either left, center, right or block!, not %s. Please contact the skin's author!" % value
+			print "[Skin] Error: Invalid halign '%s'!  Must be one of 'left', 'center', 'right' or 'block'." % value
+
 	def textOffset(self, value):
-		x, y = value.split(',')
+		x, y = value.split(",")
 		self.guiObject.setTextOffset(ePoint(int(x) * self.scaleTuple[0][0] / self.scaleTuple[0][1], int(y) * self.scaleTuple[1][0] / self.scaleTuple[1][1]))
+
 	def flags(self, value):
-		flags = value.split(',')
+		flags = value.split(",")
 		for f in flags:
 			try:
 				fv = eWindow.__dict__[f]
 				self.guiObject.setFlag(fv)
 			except KeyError:
-				print "[Skin] illegal flag %s!" % f
+				print "[Skin] Error: Invalid flag '%s'!" % f
+
 	def backgroundColor(self, value):
 		self.guiObject.setBackgroundColor(parseColor(value))
+
 	def backgroundColorSelected(self, value):
 		self.guiObject.setBackgroundColorSelected(parseColor(value))
+
 	def foregroundColor(self, value):
 		self.guiObject.setForegroundColor(parseColor(value))
+
 	def foregroundColorSelected(self, value):
 		self.guiObject.setForegroundColorSelected(parseColor(value))
+
 	def foregroundNotCrypted(self, value):
 		self.guiObject.setForegroundColor(parseColor(value))
+
 	def backgroundNotCrypted(self, value):
 		self.guiObject.setBackgroundColor(parseColor(value))
+
 	def foregroundCrypted(self, value):
 		self.guiObject.setForegroundColor(parseColor(value))
+
 	def backgroundCrypted(self, value):
 		self.guiObject.setBackgroundColor(parseColor(value))
+
 	def foregroundEncrypted(self, value):
 		self.guiObject.setForegroundColor(parseColor(value))
+
 	def backgroundEncrypted(self, value):
 		self.guiObject.setBackgroundColor(parseColor(value))
+
 	def shadowColor(self, value):
 		self.guiObject.setShadowColor(parseColor(value))
+
 	def selectionDisabled(self, value):
 		self.guiObject.setSelectionEnable(0)
+
 	def transparent(self, value):
 		self.guiObject.setTransparent(int(value))
+
 	def borderColor(self, value):
 		self.guiObject.setBorderColor(parseColor(value))
+
 	def borderWidth(self, value):
 		self.guiObject.setBorderWidth(int(value))
+
 	def scrollbarSliderBorderWidth(self, value):
 		self.guiObject.setScrollbarSliderBorderWidth(int(value))
+
 	def scrollbarWidth(self, value):
 		self.guiObject.setScrollbarWidth(int(value))
+
 	def scrollbarSliderBorderColor(self, value):
 		self.guiObject.setSliderBorderColor(parseColor(value))
+
 	def scrollbarSliderForegroundColor(self, value):
 		self.guiObject.setSliderForegroundColor(parseColor(value))
+
 	def scrollbarMode(self, value):
-		self.guiObject.setScrollbarMode(getattr(self.guiObject, value))
-		#	{ "showOnDemand": self.guiObject.showOnDemand,
-		#		"showAlways": self.guiObject.showAlways,
-		#		"showNever": self.guiObject.showNever,
-		#		"showLeft": self.guiObject.showLeft
-		#	}[value])
+		try:
+			self.guiObject.setScrollbarMode({
+				"showOnDemand": self.guiObject.showOnDemand,
+				"showAlways": self.guiObject.showAlways,
+				"showNever": self.guiObject.showNever,
+				"showLeft": self.guiObject.showLeft
+			}[value])
+		except KeyError:
+			print "[Skin] Error: Invalid scrollbarMode '%s'!  Must be one of 'showOnDemand', 'showAlways', 'showNever' or 'showLeft'." % value
+
 	def enableWrapAround(self, value):
-		self.guiObject.setWrapAround(True)
+		value = True if value.lower() in ("1", "enabled", "enablewraparound", "on", "true", "yes") else False
+		self.guiObject.setWrapAround(value)
+
 	def itemHeight(self, value):
 		self.guiObject.setItemHeight(int(value))
+
 	def pointer(self, value):
-		(name, pos) = value.split(':')
+		(name, pos) = value.split(":")
 		pos = parsePosition(pos, self.scaleTuple)
 		ptr = loadPixmap(name, self.desktop)
 		self.guiObject.setPointer(0, ptr, pos)
+
 	def seek_pointer(self, value):
-		(name, pos) = value.split(':')
+		(name, pos) = value.split(":")
 		pos = parsePosition(pos, self.scaleTuple)
 		ptr = loadPixmap(name, self.desktop)
 		self.guiObject.setPointer(1, ptr, pos)
+
 	def shadowOffset(self, value):
 		self.guiObject.setShadowOffset(parsePosition(value, self.scaleTuple))
+
 	def noWrap(self, value):
-		self.guiObject.setNoWrap(1)
+		value = 1 if value.lower() in ("1", "enabled", "nowrap", "on", "true", "yes") else 0
+		self.guiObject.setNoWrap(value)
 
-def applySingleAttribute(guiObject, desktop, attrib, value, scale = ((1,1),(1,1))):
-	# Someone still using applySingleAttribute?
+def applySingleAttribute(guiObject, desktop, attrib, value, scale=((1, 1), (1, 1))):
+	# Is anyone still using applySingleAttribute?
 	AttributeParser(guiObject, desktop, scale).applyOne(attrib, value)
 
 def applyAllAttributes(guiObject, desktop, attributes, scale):
 	AttributeParser(guiObject, desktop, scale).applyAll(attributes)
 
-def loadSingleSkinData(desktop, skin, path_prefix):
-	"""loads skin data like colors, windowstyle etc."""
-	assert skin.tag == "skin", "root element in skin must be 'skin'!"
-	for c in skin.findall("output"):
-		id = c.attrib.get('id')
+def reloadWindowStyles():
+	for id in windowStyles:
+		desktop, screenID, domSkin, pathSkin, scope = windowStyles[id]
+		loadSingleSkinData(desktop, screenID, domSkin, pathSkin, scope)
+
+def loadSingleSkinData(desktop, screenID, domSkin, pathSkin, scope=SCOPE_CURRENT_SKIN):
+	"""Loads skin data like colors, windowstyle etc."""
+	assert domSkin.tag == "skin", "root element in skin must be 'skin'!"
+	global colors, fonts, menus, parameters, setups, switchPixmap
+	for tag in domSkin.findall("output"):
+		id = tag.attrib.get("id")
 		if id:
 			id = int(id)
 		else:
-			id = 0
-		if id == 0: # framebuffer
-			for res in c.findall("resolution"):
-				get_attr = res.attrib.get
-				xres = get_attr("xres")
-				if xres:
-					xres = int(xres)
-				else:
-					xres = 720
-				yres = get_attr("yres")
-				if yres:
-					yres = int(yres)
-				else:
-					yres = 576
-				bpp = get_attr("bpp")
-				if bpp:
-					bpp = int(bpp)
-				else:
-					bpp = 32
-				#print "Resolution:", xres,yres,bpp
+			id = GUI_SKIN_ID
+		if id == GUI_SKIN_ID:
+			for res in tag.findall("resolution"):
+				xres = res.attrib.get("xres")
+				xres = int(xres) if xres else 720
+				yres = res.attrib.get("yres")
+				yres = int(yres) if yres else 576
+				bpp = res.attrib.get("bpp")
+				bpp = int(bpp) if bpp else 32
+				# print "[Skin] DEBUG: Resolution xres=%d, yres=%d, bpp=%d." % (xres, yres, bpp)
 				from enigma import gMainDC
 				gMainDC.getInstance().setResolution(xres, yres)
 				desktop.resize(eSize(xres, yres))
 				if bpp != 32:
-					# load palette (not yet implemented)
-					pass
+					pass  # Load palette (Not yet implemented!)
 				if yres >= 1080:
-					parameters["AutotimerEnabledIcon"] = (2,1,38,36)
-					parameters["AutotimerRecordIcon"] = (42,5,30,30)
-					parameters["ChoicelistDash"] = (0,3,1000,30)
-					parameters["ChoicelistName"] = (68,3,1000,30)
-					parameters["ChoicelistIcon"] = (7,0,52,38)
+					parameters["AutotimerEnabledIcon"] = (2, 1, 38, 36)
+					parameters["AutotimerRecordIcon"] = (42, 5, 30, 30)
+					parameters["ChoicelistDash"] = (0, 3, 1000, 30)
+					parameters["ChoicelistIcon"] = (7, 0, 52, 38)
+					parameters["ChoicelistName"] = (68, 3, 1000, 30)
 					parameters["ConfigListSeperator"] = 300
-					parameters["DreamexplorerName"] = (62,0,1200,38)
-					parameters["DreamexplorerIcon"] = (15,4,30,30)
-					parameters["FileListName"] = (68,4,1000,34)
-					parameters["FileListIcon"] = (7,4,52,37)
-					parameters["FileListMultiName"] = (90,3,1000,32)
+					parameters["DreamexplorerIcon"] = (15, 4, 30, 30)
+					parameters["DreamexplorerName"] = (62, 0, 1200, 38)
+					parameters["EPGImportFilterListDescr"] = (30, 3, 500, 30)
+					parameters["EPGImportFilterListLockOff"] = (0, 0, 30, 30)
+					parameters["EPGImportFilterListLockOn"] = (0, 0, 30, 30)
+					parameters["ExpandableListCategory"] = (60, 0, 655, 38)
+					parameters["ExpandableListIcon"] = (5, 0, 45, 38)
+					parameters["ExpandableListItem"] = (105, 0, 620, 38)
+					parameters["ExpandableListLock"] = (60, 1, 38, 36)
+					parameters["FileListIcon"] = (7, 4, 52, 37)
 					parameters["FileListMultiIcon"] = (45, 4, 30, 30)
-					parameters["FileListMultiLock"] = (2,0,36,36)
-					parameters["HelpMenuListHlp"] = (0,0,900,42)
-					parameters["HelpMenuListExtHlp0"] = (0,0,900,39)
-					parameters["HelpMenuListExtHlp1"] = (0,42,900,30)
-					parameters["PartnerBoxEntryListName"] = (8,2,225,38)
-					parameters["PartnerBoxEntryListIP"] = (180,2,225,38)
-					parameters["PartnerBoxEntryListPort"] = (405,2,150,38)
-					parameters["PartnerBoxEntryListType"] = (615,2,150,38)
-					parameters["PartnerBoxTimerServicename"] = (0,0,45)
-					parameters["PartnerBoxTimerName"] = (0,42,30)
-					parameters["PartnerBoxE1TimerTime"] = (0,78,255,30)
-					parameters["PartnerBoxE1TimerState"] = (255,78,255,30)
-					parameters["PartnerBoxE2TimerTime"] = (0,78,225,30)
-					parameters["PartnerBoxE2TimerState"] = (225,78,225,30)
-					parameters["PartnerBoxE2TimerIcon"] = (1050,8,20,20)
-					parameters["PartnerBoxE2TimerIconRepeat"] = (1050,38,20,20)
-					parameters["PartnerBoxBouquetListName"] = (0,0,45)
-					parameters["PartnerBoxChannelListName"] = (0,0,45)
-					parameters["PartnerBoxChannelListTitle"] = (0,42,30)
-					parameters["PartnerBoxChannelListTime"] = (0,78,225,30)
-					parameters["PicturePlayerThumb"] = (30,285,45,300,30,25)
-					parameters["PlayListName"] = (38,2,1000,34)
-					parameters["PlayListIcon"] = (7,7,24,24)
-					parameters["PluginBrowserName"] = (180,8,38)
-					parameters["PluginBrowserDescr"] = (180,42,25)
-					parameters["PluginBrowserIcon"] = (15,8,150,60)
-					parameters["PluginBrowserDownloadName"] = (120,8,38)
-					parameters["PluginBrowserDownloadDescr"] = (120,42,25)
-					parameters["PluginBrowserDownloadIcon"] = (15,0,90,76)
-					parameters["ServiceInfo"] = (0,0,450,50)
-					parameters["ServiceInfoLeft"] = (0,0,450,45)
-					parameters["ServiceInfoRight"] = (450,0,1000,45)
-					parameters["SelectionListDescr"] = (45,3,1000,32)
-					parameters["SelectionListLock"] = (0,2,36,36)
-					parameters["SelectionListLockOff"] = (0,2,36,36)
-					parameters["VirtualKeyBoard"] = (68,68)
-					parameters["VirtualKeyBoardAlignment"] = (0,0)
-					parameters["VirtualKeyBoardPadding"] = (7,7)
-					parameters["VirtualKeyBoardShiftColors"] = (0x00ffffff,0x00ffffff,0x0000ffff,0x00ff00ff)
-					parameters["SHOUTcastListItem"] = (30,27,35,96,35,33,60,32)
-					parameters["EPGImportFilterListDescr"] = (30,3,500,30)
-					parameters["EPGImportFilterListLockOff"] = (0,0,30,30)
-					parameters["EPGImportFilterListLockOn"] = (0,0,30,30)
-
-	for skininclude in skin.findall("include"):
-		filename = skininclude.attrib.get("filename")
+					parameters["FileListMultiLock"] = (2, 0, 36, 36)
+					parameters["FileListMultiName"] = (90, 3, 1000, 32)
+					parameters["FileListName"] = (68, 4, 1000, 34)
+					parameters["HelpMenuListExtHlp0"] = (0, 0, 900, 39)
+					parameters["HelpMenuListExtHlp1"] = (0, 42, 900, 30)
+					parameters["HelpMenuListHlp"] = (0, 0, 900, 42)
+					parameters["PartnerBoxBouquetListName"] = (0, 0, 45)
+					parameters["PartnerBoxChannelListName"] = (0, 0, 45)
+					parameters["PartnerBoxChannelListTime"] = (0, 78, 225, 30)
+					parameters["PartnerBoxChannelListTitle"] = (0, 42, 30)
+					parameters["PartnerBoxE1TimerState"] = (255, 78, 255, 30)
+					parameters["PartnerBoxE1TimerTime"] = (0, 78, 255, 30)
+					parameters["PartnerBoxE2TimerIcon"] = (1050, 8, 20, 20)
+					parameters["PartnerBoxE2TimerIconRepeat"] = (1050, 38, 20, 20)
+					parameters["PartnerBoxE2TimerState"] = (225, 78, 225, 30)
+					parameters["PartnerBoxE2TimerTime"] = (0, 78, 225, 30)
+					parameters["PartnerBoxEntryListIP"] = (180, 2, 225, 38)
+					parameters["PartnerBoxEntryListName"] = (8, 2, 225, 38)
+					parameters["PartnerBoxEntryListPort"] = (405, 2, 150, 38)
+					parameters["PartnerBoxEntryListType"] = (615, 2, 150, 38)
+					parameters["PartnerBoxTimerName"] = (0, 42, 30)
+					parameters["PartnerBoxTimerServicename"] = (0, 0, 45)
+					parameters["PicturePlayerThumb"] = (30, 285, 45, 300, 30, 25)
+					parameters["PlayListIcon"] = (7, 7, 24, 24)
+					parameters["PlayListName"] = (38, 2, 1000, 34)
+					parameters["PluginBrowserDescr"] = (180, 42, 25)
+					parameters["PluginBrowserDownloadDescr"] = (120, 42, 25)
+					parameters["PluginBrowserDownloadIcon"] = (15, 0, 90, 76)
+					parameters["PluginBrowserDownloadName"] = (120, 8, 38)
+					parameters["PluginBrowserIcon"] = (15, 8, 150, 60)
+					parameters["PluginBrowserName"] = (180, 8, 38)
+					parameters["SHOUTcastListItem"] = (30, 27, 35, 96, 35, 33, 60, 32)
+					parameters["SelectionListDescr"] = (45, 3, 1000, 32)
+					parameters["SelectionListLock"] = (0, 2, 36, 36)
+					parameters["SelectionListLockOff"] = (0, 2, 36, 36)
+					parameters["ServiceInfo"] = (0, 0, 450, 50)
+					parameters["ServiceInfoLeft"] = (0, 0, 450, 45)
+					parameters["ServiceInfoRight"] = (450, 0, 1000, 45)
+					parameters["VirtualKeyBoard"] = (68, 68)
+					parameters["VirtualKeyBoardAlignment"] = (0, 0)
+					parameters["VirtualKeyBoardPadding"] = (7, 7)
+					parameters["VirtualKeyBoardShiftColors"] = (0x00ffffff, 0x00ffffff, 0x0000ffff, 0x00ff00ff)
+	for tag in domSkin.findall("include"):
+		filename = tag.attrib.get("filename")
 		if filename:
-			skinfile = resolveFilename(SCOPE_ACTIVE_SKIN, filename, path_prefix=path_prefix)
-			if not fileExists(skinfile):
-				skinfile = resolveFilename(SCOPE_SKIN_IMAGE, filename, path_prefix=path_prefix)
-			if fileExists(skinfile):
-				print "[Skin] Loading include:", skinfile
-				loadSkin(skinfile)
-
-	for c in skin.findall('switchpixmap'):
-		for pixmap in c.findall('pixmap'):
-			get_attr = pixmap.attrib.get
-			name = get_attr('name')
+			filename = resolveFilename(scope, filename, path_prefix=pathSkin)
+			if isfile(filename):
+				loadSkin(filename, scope=scope, desktop=desktop, screenID=screenID)
+			else:
+				raise SkinError("Included file '%s' not found" % filename)
+	for tag in domSkin.findall("switchpixmap"):
+		for pixmap in tag.findall("pixmap"):
+			name = pixmap.attrib.get("name")
 			if not name:
-				raise SkinError('[Skin] pixmap needs name attribute')
-			filename = get_attr('filename')
+				raise SkinError("Pixmap needs name attribute")
+			filename = pixmap.attrib.get("filename")
 			if not filename:
-				raise SkinError('[Skin] pixmap needs filename attribute')
-			resolved_png = resolveFilename(SCOPE_ACTIVE_SKIN, filename, path_prefix=path_prefix)
-			if fileExists(resolved_png):
-				switchPixmap[name] = LoadPixmap(resolved_png, cached=True)
+				raise SkinError("Pixmap needs filename attribute")
+			resolved = resolveFilename(scope, filename, path_prefix=pathSkin)
+			if isfile(resolved):
+				switchPixmap[name] = LoadPixmap(resolved, cached=True)
 			else:
-				raise SkinError('[Skin] switchpixmap pixmap filename="%s" (%s) not found' % (filename, resolved_png))
-
-	for c in skin.findall("colors"):
-		for color in c.findall("color"):
-			get_attr = color.attrib.get
-			name = get_attr("name")
-			color = get_attr("value")
+				raise SkinError("The switchpixmap pixmap filename='%s' (%s) not found" % (filename, resolved))
+	for tag in domSkin.findall("colors"):
+		for color in tag.findall("color"):
+			name = color.attrib.get("name")
+			color = color.attrib.get("value")
 			if name and color:
-				colorNames[name] = parseColor(color)
-				#print "Color:", name, color
-			else:
-				raise SkinError("[Skin] need color and name, got %s %s" % (name, color))
-
-	for c in skin.findall("fonts"):
-		for font in c.findall("font"):
-			get_attr = font.attrib.get
-			filename = get_attr("filename", "<NONAME>")
-			name = get_attr("name", "Regular")
-			scale = get_attr("scale")
-			if scale:
-				scale = int(scale)
+				colors[name] = parseColor(color)
+				# print "[Skin] DEBUG: Color name='%s', color='%s'." % (name, color)
 			else:
-				scale = 100
-			is_replacement = get_attr("replacement") and True or False
-			render = get_attr("render")
+				raise SkinError("Tag 'color' needs a name and color, got name='%s' and color='%s'" % (name, color))
+	for tag in domSkin.findall("fonts"):
+		for font in tag.findall("font"):
+			filename = font.attrib.get("filename", "<NONAME>")
+			name = font.attrib.get("name", "Regular")
+			scale = font.attrib.get("scale")
+			scale = int(scale) if scale else 100
+			isReplacement = font.attrib.get("replacement") and True or False
+			render = font.attrib.get("render")
 			if render:
 				render = int(render)
 			else:
 				render = 0
-			resolved_font = resolveFilename(SCOPE_FONTS, filename, path_prefix=path_prefix)
-			if not fileExists(resolved_font): #when font is not available look at current skin path
-				resolved_font = resolveFilename(SCOPE_ACTIVE_SKIN, filename)
-				if fileExists(resolveFilename(SCOPE_CURRENT_SKIN, filename)):
-					resolved_font = resolveFilename(SCOPE_CURRENT_SKIN, filename)
-				elif fileExists(resolveFilename(SCOPE_ACTIVE_LCDSKIN, filename)):
-					resolved_font = resolveFilename(SCOPE_ACTIVE_LCDSKIN, filename)
-			addFont(resolved_font, name, scale, is_replacement, render)
-			#print "Font: ", resolved_font, name, scale, is_replacement
-		for alias in c.findall("alias"):
-			get = alias.attrib.get
+			filename = resolveFilename(SCOPE_FONTS, filename, path_prefix=pathSkin)
+			if isfile(filename):
+				addFont(filename, name, scale, isReplacement, render)
+				# Log provided by C++ addFont code.
+				# print "[Skin] Add font: Font path='%s', name='%s', scale=%d, isReplacement=%s, render=%d." % (filename, name, scale, isReplacement, render)
+			else:
+				raise SkinError("Font file '%s' not found" % filename)
+		fallbackFont = resolveFilename(SCOPE_FONTS, "fallback.font", path_prefix=pathSkin)
+		if isfile(fallbackFont):
+			addFont(fallbackFont, "Fallback", 100, -1, 0)
+		# else:  # As this is optional don't raise an error.
+		# 	raise SkinError("Fallback font '%s' not found" % fallbackFont)
+		for alias in tag.findall("alias"):
 			try:
-				name = get("name")
-				font = get("font")
-				size = int(get("size"))
-				height = int(get("height", size)) # to be calculated some day
-				width = int(get("width", size))
-				global fonts
+				name = alias.attrib.get("name")
+				font = alias.attrib.get("font")
+				size = int(alias.attrib.get("size"))
+				height = int(alias.attrib.get("height", size))  # To be calculated some day.
+				width = int(alias.attrib.get("width", size))
 				fonts[name] = (font, size, height, width)
-			except Exception, ex:
-				print "[Skin] Bad font alias", ex
-
-	for c in skin.findall("parameters"):
-		for parameter in c.findall("parameter"):
-			get = parameter.attrib.get
+				# print "[Skin] Add font alias: name='%s', font='%s', size=%d, height=%s, width=%d." % (name, font, size, height, width)
+			except Exception as err:
+				raise SkinError("Bad font alias: '%s'" % str(err))
+	for tag in domSkin.findall("parameters"):
+		for parameter in tag.findall("parameter"):
 			try:
-				name = get("name")
-				value = get("value")
-				parameters[name] = "," in value and map(parseParameter, value.split(",")) or parseParameter(value)
-			except Exception, ex:
-				print "[Skin] Bad parameter", ex
-
-	for c in skin.findall("subtitles"):
+				name = parameter.attrib.get("name")
+				value = parameter.attrib.get("value")
+				parameters[name] = map(parseParameter, [x.strip() for x in value.split(",")]) if "," in value else parseParameter(value)
+			except Exception as err:
+				raise SkinError("Bad parameter: '%s'" % str(err))
+	for tag in domSkin.findall("menus"):
+		for setup in tag.findall("menu"):
+			key = setup.attrib.get("key")
+			image = setup.attrib.get("image")
+			if key and image:
+				menus[key] = image
+				# print "[Skin] DEBUG: Menu key='%s', image='%s'." % (key, image)
+			else:
+				raise SkinError("Tag menu needs key and image, got key='%s' and image='%s'" % (key, image))
+	for tag in domSkin.findall("setups"):
+		for setup in tag.findall("setup"):
+			key = setup.attrib.get("key")
+			image = setup.attrib.get("image")
+			if key and image:
+				setups[key] = image
+				# print "[Skin] DEBUG: Setup key='%s', image='%s'." % (key, image)
+			else:
+				raise SkinError("Tag setup needs key and image, got key='%s' and image='%s'" % (key, image))
+	for tag in domSkin.findall("subtitles"):
 		from enigma import eSubtitleWidget
-		scale = ((1,1),(1,1))
-		for substyle in c.findall("sub"):
-			get_attr = substyle.attrib.get
-			font = parseFont(get_attr("font"), scale)
-			col = get_attr("foregroundColor")
+		scale = ((1, 1), (1, 1))
+		for substyle in tag.findall("sub"):
+			font = parseFont(substyle.attrib.get("font"), scale)
+			col = substyle.attrib.get("foregroundColor")
 			if col:
 				foregroundColor = parseColor(col)
 				haveColor = 1
 			else:
 				foregroundColor = gRGB(0xFFFFFF)
 				haveColor = 0
-			col = get_attr("borderColor")
+			col = substyle.attrib.get("borderColor")
 			if col:
 				borderColor = parseColor(col)
 			else:
 				borderColor = gRGB(0)
-			borderwidth = get_attr("borderWidth")
+			borderwidth = substyle.attrib.get("borderWidth")
 			if borderwidth is None:
-				# default: use a subtitle border
-				borderWidth = 3
+				borderWidth = 3  # Default: Use a subtitle border.
 			else:
 				borderWidth = int(borderwidth)
-			face = eSubtitleWidget.__dict__[get_attr("name")]
+			face = eSubtitleWidget.__dict__[substyle.attrib.get("name")]
 			eSubtitleWidget.setFontStyle(face, font, haveColor, foregroundColor, borderColor, borderWidth)
-
-	for windowstyle in skin.findall("windowstyle"):
+	for tag in domSkin.findall("windowstyle"):
 		style = eWindowStyleSkinned()
-		style_id = windowstyle.attrib.get("id")
-		if style_id:
-			style_id = int(style_id)
+		styleId = tag.attrib.get("id")
+		if styleId:
+			styleId = int(styleId)
 		else:
-			style_id = 0
-		# defaults
-		font = gFont("Regular", 20)
-		offset = eSize(20, 5)
-		for title in windowstyle.findall("title"):
-			get_attr = title.attrib.get
-			offset = parseSize(get_attr("offset"), ((1,1),(1,1)))
-			font = parseFont(get_attr("font"), ((1,1),(1,1)))
-
+			styleId = GUI_SKIN_ID
+		font = gFont("Regular", 20)  # Default
+		offset = eSize(20, 5)  # Default
+		for title in tag.findall("title"):
+			offset = parseSize(title.attrib.get("offset"), ((1, 1), (1, 1)))
+			font = parseFont(title.attrib.get("font"), ((1, 1), (1, 1)))
 		style.setTitleFont(font)
 		style.setTitleOffset(offset)
-		#print "  ", font, offset
-		for borderset in windowstyle.findall("borderset"):
+		# print "[Skin] DEBUG: WindowStyle font, offset -", font, offset
+		for borderset in tag.findall("borderset"):
 			bsName = str(borderset.attrib.get("name"))
 			for pixmap in borderset.findall("pixmap"):
-				get_attr = pixmap.attrib.get
-				bpName = get_attr("pos")
-				filename = get_attr("filename")
+				bpName = pixmap.attrib.get("pos")
+				filename = pixmap.attrib.get("filename")
 				if filename and bpName:
-					pngfile = resolveFilename(SCOPE_ACTIVE_SKIN, filename, path_prefix=path_prefix)
-					if fileExists(resolveFilename(SCOPE_SKIN_IMAGE, filename, path_prefix=path_prefix)):
-						pngfile = resolveFilename(SCOPE_SKIN_IMAGE, filename, path_prefix=path_prefix)
-					png = loadPixmap(pngfile, desktop)
-					style.setPixmap(eWindowStyleSkinned.__dict__[bsName], eWindowStyleSkinned.__dict__[bpName], png)
-				#print "  borderset:", bpName, filename
-		for color in windowstyle.findall("color"):
-			get_attr = color.attrib.get
-			colorType = get_attr("name")
-			color = parseColor(get_attr("color"))
+					png = loadPixmap(resolveFilename(scope, filename, path_prefix=pathSkin), desktop)
+					try:
+						style.setPixmap(eWindowStyleSkinned.__dict__[bsName], eWindowStyleSkinned.__dict__[bpName], png)
+					except Exception:
+						pass
+				# print "[Skin] DEBUG: WindowStyle borderset name, filename -", bpName, filename
+		for color in tag.findall("color"):
+			colorType = color.attrib.get("name")
+			color = parseColor(color.attrib.get("color"))
 			try:
 				style.setColor(eWindowStyleSkinned.__dict__["col" + colorType], color)
-			except:
-				raise SkinError("Unknown color %s" % colorType)
-				#pass
-			#print "  color:", type, color
+			except Exception:
+				raise SkinError("Unknown color type '%s'" % colorType)
+			# print "[Skin] DEBUG: WindowStyle color type, color -", type, color
 		x = eWindowStyleManager.getInstance()
-		x.setStyle(style_id, style)
-	for margin in skin.findall("margin"):
-		style_id = margin.attrib.get("id")
-		if style_id:
-			style_id = int(style_id)
+		x.setStyle(styleId, style)
+	for tag in domSkin.findall("margin"):
+		styleId = tag.attrib.get("id")
+		if styleId:
+			styleId = int(styleId)
 		else:
-			style_id = 0
-		r = eRect(0,0,0,0)
-		v = margin.attrib.get("left")
+			styleId = GUI_SKIN_ID
+		r = eRect(0, 0, 0, 0)
+		v = tag.attrib.get("left")
 		if v:
 			r.setLeft(int(v))
-		v = margin.attrib.get("top")
+		v = tag.attrib.get("top")
 		if v:
 			r.setTop(int(v))
-		v = margin.attrib.get("right")
+		v = tag.attrib.get("right")
 		if v:
 			r.setRight(int(v))
-		v = margin.attrib.get("bottom")
+		v = tag.attrib.get("bottom")
 		if v:
 			r.setBottom(int(v))
-		# the "desktop" parameter is hardcoded to the UI screen, so we must ask
+		# The "desktop" parameter is hard-coded to the GUI screen, so we must ask
 		# for the one that this actually applies to.
-		getDesktop(style_id).setMargins(r)
-
-dom_screens = {}
-
-def loadSkin(name, scope = SCOPE_SKIN):
-	# Now a utility for plugins to add skin data to the screens
-	global dom_screens, display_skin_id
-	filename = resolveFilename(scope, name)
-	if fileExists(filename):
-		path = os.path.dirname(filename) + "/"
-		file = open(filename, 'r')
-		for elem in xml.etree.cElementTree.parse(file).getroot():
-			if elem.tag == 'screen':
-				name = elem.attrib.get('name', None)
-				if name:
-					sid = elem.attrib.get('id', None)
-					if sid and (sid != display_skin_id):
-						# not for this display
-						elem.clear()
-						continue
-					if name in dom_screens:
-						# Clear old versions, save memory
-						dom_screens[name][0].clear()
-					dom_screens[name] = (elem, path)
-				else:
-					elem.clear()
-			else:
-				elem.clear()
-		file.close()
+		getDesktop(styleId).setMargins(r)
 
-def loadSkinData(desktop):
-	# Kinda hackish, but this is called once by mytest.py
-	global dom_skins
-	skins = dom_skins[:]
-	skins.reverse()
-	for (path, dom_skin) in skins:
-		loadSingleSkinData(desktop, dom_skin, path)
-		for elem in dom_skin:
-			if elem.tag == 'screen':
-				name = elem.attrib.get('name', None)
-				if name:
-					sid = elem.attrib.get('id', None)
-					if sid and (sid != display_skin_id):
-						# not for this display
-						elem.clear()
-						continue
-					if name in dom_screens:
-						# Kill old versions, save memory
-						dom_screens[name][0].clear()
-					dom_screens[name] = (elem, path)
-				else:
-					# without name, it's useless!
-					elem.clear()
-			else:
-				# non-screen element, no need for it any longer
-				elem.clear()
-	# no longer needed, we know where the screens are now.
-	del dom_skins
 
 class additionalWidget:
 	def __init__(self):
 		pass
 
+
 # Class that makes a tuple look like something else. Some plugins just assume
 # that size is a string and try to parse it. This class makes that work.
 class SizeTuple(tuple):
 	def split(self, *args):
 		return str(self[0]), str(self[1])
+
 	def strip(self, *args):
-		return '%s,%s' % self
+		return "%s,%s" % self
+
 	def __str__(self):
-		return '%s,%s' % self
+		return "%s,%s" % self
+
 
 class SkinContext:
 	def __init__(self, parent=None, pos=None, size=None, font=None):
@@ -846,8 +933,10 @@ class SkinContext:
 				self.y = None
 				self.w = None
 				self.h = None
+
 	def __str__(self):
 		return "Context (%s,%s)+(%s,%s) " % (self.x, self.y, self.w, self.h)
+
 	def parse(self, pos, size, font):
 		if pos == "fill":
 			pos = (self.x, self.y)
@@ -855,7 +944,7 @@ class SkinContext:
 			self.w = 0
 			self.h = 0
 		else:
-			w,h = size.split(',')
+			w, h = size.split(",")
 			w = parseCoordinate(w, self.w, 0, font)
 			h = parseCoordinate(h, self.h, 0, font)
 			if pos == "bottom":
@@ -878,18 +967,20 @@ class SkinContext:
 				self.w -= w
 			else:
 				size = (w, h)
-				pos = pos.split(',')
+				pos = pos.split(",")
 				pos = (self.x + parseCoordinate(pos[0], self.w, size[0], font), self.y + parseCoordinate(pos[1], self.h, size[1], font))
-		return SizeTuple(pos), SizeTuple(size)
+		return (SizeTuple(pos), SizeTuple(size))
 
+
+# A context that stacks things instead of aligning them.
+#
 class SkinContextStack(SkinContext):
-	# A context that stacks things instead of aligning them
 	def parse(self, pos, size, font):
 		if pos == "fill":
 			pos = (self.x, self.y)
 			size = (self.w, self.h)
 		else:
-			w,h = size.split(',')
+			w, h = size.split(",")
 			w = parseCoordinate(w, self.w, 0, font)
 			h = parseCoordinate(h, self.h, 0, font)
 			if pos == "bottom":
@@ -906,54 +997,44 @@ class SkinContextStack(SkinContext):
 				size = (w, self.h)
 			else:
 				size = (w, h)
-				pos = pos.split(',')
+				pos = pos.split(",")
 				pos = (self.x + parseCoordinate(pos[0], self.w, size[0], font), self.y + parseCoordinate(pos[1], self.h, size[1], font))
-		return SizeTuple(pos), SizeTuple(size)
+		return (SizeTuple(pos), SizeTuple(size))
 
 def readSkin(screen, skin, names, desktop):
 	if not isinstance(names, list):
 		names = [names]
-
-	# try all skins, first existing one have priority
-	global dom_screens
-	for n in names:
-		myscreen, path = dom_screens.get(n, (None,None))
-		if myscreen is not None:
-			# use this name for debug output
-			name = n
+	for n in names:  # Try all skins, first existing one has priority.
+		myScreen, path = domScreens.get(n, (None, None))
+		if myScreen is not None:
+			name = n  # Use this name for debug output.
 			break
 	else:
-		name = "<embedded-in-'%s'>" % screen.__class__.__name__
-
-	# otherwise try embedded skin
-	if myscreen is None:
-		myscreen = getattr(screen, "parsedSkin", None)
-
-	# try uncompiled embedded skin
-	if myscreen is None and getattr(screen, "skin", None):
+		name = "<embedded-in-%s>" % screen.__class__.__name__
+	if myScreen is None:  # Otherwise try embedded skin.
+		myScreen = getattr(screen, "parsedSkin", None)
+	if myScreen is None and getattr(screen, "skin", None):  # Try uncompiled embedded skin.
 		skin = screen.skin
-		print "[Skin] Parsing embedded skin", name
+		print "[Skin] Parsing embedded skin '%s'." % name
 		if isinstance(skin, tuple):
 			for s in skin:
 				candidate = xml.etree.cElementTree.fromstring(s)
-				if candidate.tag == 'screen':
-					sid = candidate.attrib.get('id', None)
-					if (not sid) or (int(sid) == display_skin_id):
-						myscreen = candidate
+				if candidate.tag == "screen":
+					sid = candidate.attrib.get("id", None)
+					if (not sid) or (int(sid) == DISPLAY_SKIN_ID):
+						myScreen = candidate
 						break
 			else:
-				print "[Skin] No suitable screen!"
+				print "[Skin] No suitable screen found!"
 		else:
-			myscreen = xml.etree.cElementTree.fromstring(skin)
-		if myscreen:
-			screen.parsedSkin = myscreen
-	if myscreen is None:
-		print "[Skin] No skin to read..."
-		myscreen = screen.parsedSkin = xml.etree.cElementTree.fromstring("<screen></screen>")
-
-	screen.skinAttributes = [ ]
-	skin_path_prefix = getattr(screen, "skin_path", path)
-
+			myScreen = xml.etree.cElementTree.fromstring(skin)
+		if myScreen:
+			screen.parsedSkin = myScreen
+	if myScreen is None:
+		print "[Skin] No skin to read or screen to display."
+		myScreen = screen.parsedSkin = xml.etree.cElementTree.fromstring("<screen></screen>")
+	screen.skinAttributes = []
+	skinPath = getattr(screen, "skin_path", path)
 	context = SkinContextStack()
 	s = desktop.bounds()
 	context.x = s.left()
@@ -961,179 +1042,211 @@ def readSkin(screen, skin, names, desktop):
 	context.w = s.width()
 	context.h = s.height()
 	del s
-	collectAttributes(screen.skinAttributes, myscreen, context, skin_path_prefix, ignore=("name",))
-	context = SkinContext(context, myscreen.attrib.get('position'), myscreen.attrib.get('size'))
-
-	screen.additionalWidgets = [ ]
-	screen.renderer = [ ]
-	visited_components = set()
+	collectAttributes(screen.skinAttributes, myScreen, context, skinPath, ignore=("name",))
+	context = SkinContext(context, myScreen.attrib.get("position"), myScreen.attrib.get("size"))
+	screen.additionalWidgets = []
+	screen.renderer = []
+	usedComponents = set()
 
-	# now walk all widgets and stuff
-	def process_none(widget, context):
+	def processNone(widget, context):
 		pass
 
-	def process_widget(widget, context):
-		get_attr = widget.attrib.get
-		# ok, we either have 1:1-mapped widgets ('old style'), or 1:n-mapped
+	def processWidget(widget, context):
+		# Okay, we either have 1:1-mapped widgets ("old style"), or 1:n-mapped
 		# widgets (source->renderer).
-		wname = get_attr('name')
-		wsource = get_attr('source')
+		wname = widget.attrib.get("name")
+		wsource = widget.attrib.get("source")
 		if wname is None and wsource is None:
-			print "[Skin] widget has no name and no source!"
+			raise SkinError("The widget has no name and no source")
 			return
 		if wname:
-			#print "Widget name=", wname
-			visited_components.add(wname)
-			# get corresponding 'gui' object
-			try:
-				attributes = screen[wname].skinAttributes = [ ]
-			except:
-				raise SkinError("component with name '" + wname + "' was not found in skin of screen '" + name + "'!")
+			# print "[Skin] DEBUG: Widget name='%s'." % wname
+			usedComponents.add(wname)
+			try:  # Get corresponding "gui" object.
+				attributes = screen[wname].skinAttributes = []
+			except Exception:
+				raise SkinError("Component with name '%s' was not found in skin of screen '%s'" % (wname, name))
 			# assert screen[wname] is not Source
-			collectAttributes(attributes, widget, context, skin_path_prefix, ignore=('name',))
+			collectAttributes(attributes, widget, context, skinPath, ignore=("name",))
 		elif wsource:
-			# get corresponding source
-			#print "Widget source=", wsource
-			while True: # until we found a non-obsolete source
-				# parse our current "wsource", which might specifiy a "related screen" before the dot,
+			# print "[Skin] DEBUG: Widget source='%s'." % wsource
+			while True:  # Get corresponding source until we found a non-obsolete source.
+				# Parse our current "wsource", which might specify a "related screen" before the dot,
 				# for example to reference a parent, global or session-global screen.
 				scr = screen
-				# resolve all path components
-				path = wsource.split('.')
+				path = wsource.split(".")  # Resolve all path components.
 				while len(path) > 1:
 					scr = screen.getRelatedScreen(path[0])
 					if scr is None:
-						#print wsource
-						#print name
-						raise SkinError("[Skin] specified related screen '" + wsource + "' was not found in screen '" + name + "'!")
+						# print "[Skin] DEBUG: wsource='%s', name='%s'." % (wsource, name)
+						raise SkinError("Specified related screen '%s' was not found in screen '%s'" % (wsource, name))
 					path = path[1:]
-				# resolve the source.
-				source = scr.get(path[0])
+				source = scr.get(path[0])  # Resolve the source.
 				if isinstance(source, ObsoleteSource):
-					# however, if we found an "obsolete source", issue warning, and resolve the real source.
-					print "[Skin] WARNING: SKIN '%s' USES OBSOLETE SOURCE '%s', USE '%s' INSTEAD!" % (name, wsource, source.new_source)
-					print "[Skin] OBSOLETE SOURCE WILL BE REMOVED %s, PLEASE UPDATE!" % source.removal_date
+					# If we found an "obsolete source", issue warning, and resolve the real source.
+					print "[Skin] WARNING: SKIN '%s' USES OBSOLETE SOURCE '%s', USE '%s' INSTEAD!" % (name, wsource, source.newSource)
+					print "[Skin] OBSOLETE SOURCE WILL BE REMOVED %s, PLEASE UPDATE!" % source.removalDate
 					if source.description:
-						print source.description
+						print "[Skin] Source description: '%s'." % source.description
 					wsource = source.new_source
 				else:
-					# otherwise, use that source.
-					break
-
+					break  # Otherwise, use the source.
 			if source is None:
-				raise SkinError("[Skin] source '" + wsource + "' was not found in screen '" + name + "'!")
-
-			wrender = get_attr('render')
+				raise SkinError("The source '%s' was not found in screen '%s'" % (wsource, name))
+			wrender = widget.attrib.get("render")
 			if not wrender:
-				raise SkinError("[Skin] you must define a renderer with render= for source '%s'" % wsource)
+				raise SkinError("For source '%s' a renderer must be defined with a 'render=' attribute" % wsource)
 			for converter in widget.findall("convert"):
-				ctype = converter.get('type')
-				assert ctype, "'convert'-tag needs a 'type'-attribute"
-				#print "Converter:", ctype
+				ctype = converter.get("type")
+				assert ctype, "[Skin] The 'convert' tag needs a 'type' attribute!"
+				# print "[Skin] DEBUG: Converter='%s'." % ctype
 				try:
 					parms = converter.text.strip()
-				except:
+				except Exception:
 					parms = ""
-				#print "Params:", parms
-				converter_class = my_import('.'.join(("Components", "Converter", ctype))).__dict__.get(ctype)
+				# print "[Skin] DEBUG: Params='%s'." % parms
+				try:
+					converterClass = my_import(".".join(("Components", "Converter", ctype))).__dict__.get(ctype)
+				except ImportError:
+					raise SkinError("Converter '%s' not found" % ctype)
 				c = None
 				for i in source.downstream_elements:
-					if isinstance(i, converter_class) and i.converter_arguments == parms:
+					if isinstance(i, converterClass) and i.converter_arguments == parms:
 						c = i
 				if c is None:
-					c = converter_class(parms)
+					c = converterClass(parms)
 					c.connect(source)
 				source = c
-
-			renderer_class = my_import('.'.join(("Components", "Renderer", wrender))).__dict__.get(wrender)
-			renderer = renderer_class() # instantiate renderer
-			renderer.connect(source) # connect to source
-			attributes = renderer.skinAttributes = [ ]
-			collectAttributes(attributes, widget, context, skin_path_prefix, ignore=('render', 'source'))
+			try:
+				rendererClass = my_import(".".join(("Components", "Renderer", wrender))).__dict__.get(wrender)
+			except ImportError:
+				raise SkinError("Renderer '%s' not found" % wrender)
+			renderer = rendererClass()  # Instantiate renderer.
+			renderer.connect(source)  # Connect to source.
+			attributes = renderer.skinAttributes = []
+			collectAttributes(attributes, widget, context, skinPath, ignore=("render", "source"))
 			screen.renderer.append(renderer)
 
-	def process_applet(widget, context):
+	def processApplet(widget, context):
 		try:
 			codeText = widget.text.strip()
-			widgetType = widget.attrib.get('type')
+			widgetType = widget.attrib.get("type")
 			code = compile(codeText, "skin applet", "exec")
-		except Exception, ex:
-			raise SkinError("[Skin] applet failed to compile: " + str(ex))
+		except Exception as err:
+			raise SkinError("Applet failed to compile: '%s'" % str(err))
 		if widgetType == "onLayoutFinish":
 			screen.onLayoutFinish.append(code)
 		else:
-			raise SkinError("[Skin] applet type '%s' unknown!" % widgetType)
+			raise SkinError("Applet type '%s' is unknown" % widgetType)
 
-	def process_elabel(widget, context):
+	def processLabel(widget, context):
 		w = additionalWidget()
 		w.widget = eLabel
-		w.skinAttributes = [ ]
-		collectAttributes(w.skinAttributes, widget, context, skin_path_prefix, ignore=('name',))
+		w.skinAttributes = []
+		collectAttributes(w.skinAttributes, widget, context, skinPath, ignore=("name",))
 		screen.additionalWidgets.append(w)
 
-	def process_epixmap(widget, context):
+	def processPixmap(widget, context):
 		w = additionalWidget()
 		w.widget = ePixmap
-		w.skinAttributes = [ ]
-		collectAttributes(w.skinAttributes, widget, context, skin_path_prefix, ignore=('name',))
+		w.skinAttributes = []
+		collectAttributes(w.skinAttributes, widget, context, skinPath, ignore=("name",))
 		screen.additionalWidgets.append(w)
 
-	def process_screen(widget, context):
+	def processScreen(widget, context):
 		for w in widget.getchildren():
-			conditional = w.attrib.get('conditional')
+			conditional = w.attrib.get("conditional")
 			if conditional and not [i for i in conditional.split(",") if i in screen.keys()]:
 				continue
-			objecttypes = w.attrib.get('objectTypes', '').split(",")
+			objecttypes = w.attrib.get("objectTypes", "").split(",")
 			if len(objecttypes) > 1 and (objecttypes[0] not in screen.keys() or not [i for i in objecttypes[1:] if i == screen[objecttypes[0]].__class__.__name__]):
-					continue
-			p = processors.get(w.tag, process_none)
+				continue
+			p = processors.get(w.tag, processNone)
 			try:
 				p(w, context)
-			except SkinError, e:
-				print "[Skin] Error in screen '%s' widget '%s':" % (name, w.tag), e
+			except SkinError as err:
+				print "[Skin] Error in screen '%s' widget '%s' %s!" % (name, w.tag, str(err))
 
-	def process_panel(widget, context):
-		n = widget.attrib.get('name')
+	def processPanel(widget, context):
+		n = widget.attrib.get("name")
 		if n:
 			try:
-				s = dom_screens[n]
+				s = domScreens[n]
 			except KeyError:
-				print "[Skin] Unable to find screen '%s' referred in screen '%s'" % (n, name)
+				print "[Skin] Error: Unable to find screen '%s' referred in screen '%s'!" % (n, name)
 			else:
-				process_screen(s[0], context)
-		layout = widget.attrib.get('layout')
-		if layout == 'stack':
+				processScreen(s[0], context)
+		layout = widget.attrib.get("layout")
+		if layout == "stack":
 			cc = SkinContextStack
 		else:
 			cc = SkinContext
 		try:
-			c = cc(context, widget.attrib.get('position'), widget.attrib.get('size'), widget.attrib.get('font'))
-		except Exception, ex:
-			raise SkinError("[Skin] Failed to create skincontext (%s,%s,%s) in %s: %s" % (widget.attrib.get('position'), widget.attrib.get('size'), widget.attrib.get('font'), context, ex) )
-		process_screen(widget, c)
+			c = cc(context, widget.attrib.get("position"), widget.attrib.get("size"), widget.attrib.get("font"))
+		except Exception as err:
+			raise SkinError("Failed to create skin context (position='%s', size='%s', font='%s') in context '%s': %s" % (widget.attrib.get("position"), widget.attrib.get("size"), widget.attrib.get("font"), context, err))
+		processScreen(widget, c)
 
 	processors = {
-			None: process_none,
-			"widget": process_widget,
-			"applet": process_applet,
-			"eLabel": process_elabel,
-			"ePixmap": process_epixmap,
-			"panel": process_panel
+		None: processNone,
+		"widget": processWidget,
+		"applet": processApplet,
+		"eLabel": processLabel,
+		"ePixmap": processPixmap,
+		"panel": processPanel
 	}
 
 	try:
-		print "[Skin] processing screen %s:" % name
-		context.x = 0 # reset offsets, all components are relative to screen
-		context.y = 0 # coordinates.
-		process_screen(myscreen, context)
-	except Exception, e:
-		print "[Skin] Error in %s:" % name, e
+		msg = " from list '%s'" % ", ".join(names) if len(names) > 1 else ""
+		posX = "?" if context.x is None else str(context.x)
+		posY = "?" if context.y is None else str(context.y)
+		sizeW = "?" if context.w is None else str(context.w)
+		sizeH = "?" if context.h is None else str(context.h)
+		print "[Skin] Processing screen '%s'%s, position=(%s, %s), size=(%s x %s) for module '%s'." % (name, msg, posX, posY, sizeW, sizeH, screen.__class__.__name__)
+		context.x = 0  # Reset offsets, all components are relative to screen coordinates.
+		context.y = 0
+		processScreen(myScreen, context)
+	except Exception as err:
+		print "[Skin] Error in screen '%s' %s!" % (name, str(err))
 
 	from Components.GUIComponent import GUIComponent
-	nonvisited_components = [x for x in set(screen.keys()) - visited_components if isinstance(x, GUIComponent)]
-	assert not nonvisited_components, "the following components in %s don't have a skin entry: %s" % (name, ', '.join(nonvisited_components))
-	# This may look pointless, but it unbinds 'screen' from the nested scope. A better
+	unusedComponents = [x for x in set(screen.keys()) - usedComponents if isinstance(x, GUIComponent)]
+	assert not unusedComponents, "[Skin] The following components in '%s' don't have a skin entry: %s" % (name, ", ".join(unusedComponents))
+	# This may look pointless, but it unbinds "screen" from the nested scope. A better
 	# solution is to avoid the nested scope above and use the context object to pass
 	# things around.
 	screen = None
-	visited_components = None
+	usedComponents = None
+
+# Return a scaling factor (float) that can be used to rescale screen displays
+# to suit the current resolution of the screen.  The scales are based on a
+# default screen resolution of HD (720p).  That is the scale factor for a HD
+# screen will be 1.
+#
+def getSkinFactor():
+	skinfactor = getDesktop(GUI_SKIN_ID).size().height() / 720.0
+	# if skinfactor not in [0.8, 1, 1.5, 3, 6]:
+	# 	print "[Skin] Warning: Unexpected result for getSkinFactor '%0.4f'!" % skinfactor
+	return skinfactor
+
+# Search the domScreens dictionary to see if any of the screen names provided
+# have a skin based screen.  This will allow coders to know if the named
+# screen will be skinned by the skin code.  A return of None implies that the
+# code must provide its own skin for the screen to be displayed to the user.
+#
+def findSkinScreen(names):
+	if not isinstance(names, list):
+		names = [names]
+	for name in names:  # Try all names given, the first one found is the one that will be used by the skin engine.
+		screen, path = domScreens.get(name, (None, None))
+		if screen is not None:
+			return name
+	return None
+
+def dump(x, i=0):
+	print " " * i + str(x)
+	try:
+		for n in x.childNodes:
+			dump(n, i + 1)
+	except Exception:
+		None
diff --git a/tools/enigma2.sh.in b/tools/enigma2.sh.in
index c6a93d5..d839823 100755
--- a/tools/enigma2.sh.in
+++ b/tools/enigma2.sh.in
@@ -17,8 +17,16 @@ fi
 if [ -x @bindir@/showiframe ]; then
 	if [ -f @sysconfdir@/enigma2/backdrop.mvi ]; then
 		@bindir@/showiframe @sysconfdir@/enigma2/backdrop.mvi
-	elif [ -f @datadir@/backdrop.mvi ]; then
-		@bindir@/showiframe @datadir@/backdrop.mvi
+	else
+		skin=`sed -En 's|config\.skin\.primary_skin=(.+)/skin\.xml|\1|p' @sysconfdir@/enigma2/settings`
+		if [ -z $skin ]; then
+			skin=`strings -n 10 @prefix@/lib/enigma2/python/skin.pyo | egrep -o -m 1 ".+/skin.xml" | sed 's|/skin.xml.*||'`
+		fi
+		if [ -n $skin -a -f @datadir@/enigma2/$skin/backdrop.mvi ]; then
+			@bindir@/showiframe @datadir@/enigma2/$skin/backdrop.mvi
+		elif [ -f @datadir@/backdrop.mvi ]; then
+			@bindir@/showiframe @datadir@/backdrop.mvi
+		fi
 	fi
 fi
 
@@ -44,17 +52,21 @@ sync
 (sleep 2; echo "enigma2 is the main pvr application... adjust oom score!"; PID=$(pidof enigma2); \
 	[ -e /proc/$PID/oom_score_adj ] && echo "-999" > /proc/$PID/oom_score_adj || echo "-17" > /proc/$PID/oom_adj;) &
 
-if [ "$(grep config.crash.enabledebug /etc/enigma2/settings)" == "config.crash.enabledebug=True" ]; then
-	if [ "$(grep config.crash.debug_path= /etc/enigma2/settings | sed 's/config.crash.debug_path=//g')" != "" -a -d "$(grep config.crash.debug_path= /etc/enigma2/settings | sed 's/config.crash.debug_path=//g')" ]; then
-		LD_PRELOAD=$LIBS @bindir@/enigma2 &> $(grep config.crash.debug_path= /etc/enigma2/settings | sed 's/config.crash.debug_path=//g')Enigma2_debug_$(date +%Y-%m-%d_%H-%M-%S).log
-	else
-		LD_PRELOAD=$LIBS @bindir@/enigma2 &> /home/root/logs/Enigma2_debug_$(date +%Y-%m-%d_%H-%M-%S).log
-	fi
+
+# set time format used to prefix each line in the debug logs
+if grep -q 'config\.crash\.logtimeformat' @sysconfdir@/enigma2/settings; then
+	export ENIGMA_DEBUG_TIME=`grep "config\.crash\.logtimeformat" @sysconfdir@/enigma2/settings | sed -E "s/^.*=(.*)$/\1/" -`
+fi
+
+if grep -q 'config\.crash\.enabledebug=True' @sysconfdir@/enigma2/settings; then
+	debug_dir=$(sed -n 's/config.crash.debug_path=//p' @sysconfdir@/enigma2/settings)
+	[ -n "${debug_dir}" -a -d "${debug_dir}" ] || debug_dir=/home/root/logs/
+	LD_PRELOAD=$LIBS @bindir@/enigma2 &> "${debug_dir}Enigma2_debug_$(date +%Y-%m-%d_%H-%M-%S).log"
 else
-	if [ ! "$(grep config.misc.firstrun=False /etc/enigma2/settings)" ]; then
-		LD_PRELOAD=$LIBS @bindir@/enigma2
+	if grep -q 'config\.misc\.firstrun=False' @sysconfdir@/enigma2/settings; then
+		LD_PRELOAD=$LIBS @bindir@/enigma2 &> /dev/null
 	else
-		LD_PRELOAD=$LIBS @bindir@/enigma2 2> /dev/null
+		LD_PRELOAD=$LIBS @bindir@/enigma2
 	fi
 fi
 
@@ -85,8 +97,24 @@ case $ret in
 		/sbin/modprobe fp
 		/sbin/reboot
 		;;
+	12)
+		if [ -e /dev/block/by-name/bootoptions ]; then
+			mkdir -p /tmp/bootoptions
+			mount /dev/block/by-name/bootoptions /tmp/bootoptions
+			cp -f /tmp/bootoptions/STARTUP_ANDROID /tmp/bootoptions/STARTUP_ONCE
+		else
+			echo "rescue" > /proc/stb/fp/boot_mode
+		fi
+		/sbin/reboot
+		;;
 	16)
-		echo "rescue" > /proc/stb/fp/boot_mode
+		if [ -e /dev/block/by-name/bootoptions ]; then
+			mkdir -p /tmp/bootoptions
+			mount /dev/block/by-name/bootoptions /tmp/bootoptions
+			cp -f /tmp/bootoptions/STARTUP_RECOVERY /tmp/bootoptions/STARTUP_ONCE
+		else
+			echo "rescue" > /proc/stb/fp/boot_mode
+		fi
 		/sbin/reboot
 		;;
 	42)
